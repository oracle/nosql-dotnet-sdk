{
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.-ctor.html",
    "title": "Constructor AddReplicaOptions | NoSQL SDK for .NET",
    "keywords": "Constructor AddReplicaOptions AddReplicaOptions() Declaration public AddReplicaOptions()"
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.html",
    "title": "Class AddReplicaOptions | NoSQL SDK for .NET",
    "keywords": "Class AddReplicaOptions Cloud Service only. Represents options passed to AddReplicaAsync and AddReplicaWithCompletionAsync APIs. Inheritance Object AddReplicaOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AddReplicaOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description AddReplicaOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. ReadUnits Gets or sets read units for the replica table. Timeout Gets or sets the timeout for the operation. WriteUnits Gets or sets write units for the replica table. See Also AddReplicaAsync AddReplicaWithCompletionAsync"
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.MatchETag.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.MatchETag.html",
    "title": "Property MatchETag | NoSQL SDK for .NET",
    "keywords": "Property MatchETag MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. Declaration public string MatchETag { get; set; } Property Value Type Description String The value of the entity tag for the table. Remarks The ETag is an opaque value that represents the current version of the table itself and can be used in table modification operations to only perform them if the ETag for the table has not changed. This is an optimistic concurrency control mechanism allowing an application to ensure no unexpected modifications have been made to the table. The value of the ETag must be the value returned in a previous TableResult . If set for on-premises service, the ETag is silently ignored. See Also ETag"
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.PollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.PollDelay.html",
    "title": "Property PollDelay | NoSQL SDK for .NET",
    "keywords": "Property PollDelay PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Declaration public Nullable<TimeSpan> PollDelay { get; set; } Property Value Type Description Nullable < TimeSpan > Poll delay. If set, must be a positive value and not greater than the timeout. Remarks Applies only to AddReplicaWithCompletionAsync method. Defaults to TablePollDelay ."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.ReadUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.ReadUnits.html",
    "title": "Property ReadUnits | NoSQL SDK for .NET",
    "keywords": "Property ReadUnits ReadUnits Gets or sets read units for the replica table. Declaration public Nullable<int> ReadUnits { get; set; } Property Value Type Description Nullable < Int32 > Read units. If not set, defaults to read units for the existing table."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the operation. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Operation timeout. If set, must be a positive value. Remarks For AddReplicaAsync it defaults to TableDDLTimeout . For AddReplicaWithCompletionAsync separate default timeouts are used for issuing the operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaOptions.WriteUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaOptions.WriteUnits.html",
    "title": "Property WriteUnits | NoSQL SDK for .NET",
    "keywords": "Property WriteUnits WriteUnits Gets or sets write units for the replica table. Declaration public Nullable<int> WriteUnits { get; set; } Property Value Type Description Nullable < Int32 > Write units. If not set, defaults to write units for the existing table."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaRequest.html",
    "title": "Class AddReplicaRequest | NoSQL SDK for .NET",
    "keywords": "Class AddReplicaRequest Represents information about operation performed by AddReplicaAsync and AddReplicaWithCompletionAsync APIs. Inheritance Object Request RequestWithTable TableOperationRequest AddReplicaRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AddReplicaRequest : TableOperationRequest Properties Name Description Options Gets the options for AddReplicaAsync or AddReplicaWithCompletionAsync operation. RegionId Gets the region id for the operation if it was provided to AddReplicaAsync or AddReplicaWithCompletionAsync . See Also AddReplicaAsync AddReplicaWithCompletionAsync Request TableOperationRequest"
  },
  "api/Oracle.NoSQL.SDK.AddReplicaRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for AddReplicaAsync or AddReplicaWithCompletionAsync operation. Declaration public AddReplicaOptions Options { get; } Property Value Type Description AddReplicaOptions The options, or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.AddReplicaRequest.RegionId.html": {
    "href": "api/Oracle.NoSQL.SDK.AddReplicaRequest.RegionId.html",
    "title": "Property RegionId | NoSQL SDK for .NET",
    "keywords": "Property RegionId RegionId Gets the region id for the operation if it was provided to AddReplicaAsync or AddReplicaWithCompletionAsync . Declaration public string RegionId { get; } Property Value Type Description String The region id if it was provided, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.AdminOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminOptions.-ctor.html",
    "title": "Constructor AdminOptions | NoSQL SDK for .NET",
    "keywords": "Constructor AdminOptions AdminOptions() Declaration public AdminOptions()"
  },
  "api/Oracle.NoSQL.SDK.AdminOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminOptions.html",
    "title": "Class AdminOptions | NoSQL SDK for .NET",
    "keywords": "Class AdminOptions On-premise only. Represents options for admin DDL passed to methods ExecuteAdminAsync and ExecuteAdminWithCompletionAsync . Inheritance Object AdminOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AdminOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing admin DDL with provided AdminOptions . var result = await client.ExecuteAdminWithCompletionAsync( \"DROP NAMESPACE my_namespace CASCADE\", new AdminOptions { Timeout = TimeSpan.FromSeconds(120), PollDelay = TimeSpan.FromSeconds(2) }); Constructors Name Description AdminOptions() Properties Name Description PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Timeout Gets or sets the timeout for the operation. See Also ExecuteAdminAsync ExecuteAdminWithCompletionAsync"
  },
  "api/Oracle.NoSQL.SDK.AdminOptions.PollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminOptions.PollDelay.html",
    "title": "Property PollDelay | NoSQL SDK for .NET",
    "keywords": "Property PollDelay PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Declaration public Nullable<TimeSpan> PollDelay { get; set; } Property Value Type Description Nullable < TimeSpan > Poll delay. If set, must be a positive value and not greater than the timeout. Remarks Applies only ExecuteAdminWithCompletionAsync method. Defaults to AdminPollDelay"
  },
  "api/Oracle.NoSQL.SDK.AdminOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the operation. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Operation timeout. If set, must be a positive value. Remarks For ExecuteAdminAsync it defaults to AdminTimeout . For ExecuteAdminWithCompletionAsync , separate default timeouts are used for issuing the admin operation and waiting for its completion, with values of AdminTimeout and AdminPollTimeout correspondingly (the latter defaults to no timeout if AdminPollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.AdminRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminRequest.html",
    "title": "Class AdminRequest | NoSQL SDK for .NET",
    "keywords": "Class AdminRequest On-premise only. Represents information about admin DDL operation performed by ExecuteAdminAsync and ExecuteAdminWithCompletionAsync methods. Inheritance Object Request AdminRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AdminRequest : Request Properties Name Description Options Gets the options for the admin DDL operation. Statement Gets the statement for the admin DDL operation. See Also ExecuteAdminAsync ExecuteAdminWithCompletionAsync Request"
  },
  "api/Oracle.NoSQL.SDK.AdminRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the admin DDL operation. Declaration public AdminOptions Options { get; } Property Value Type Description AdminOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.AdminRequest.Statement.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminRequest.Statement.html",
    "title": "Property Statement | NoSQL SDK for .NET",
    "keywords": "Property Statement Statement Gets the statement for the admin DDL operation. Declaration public char[] Statement { get; } Property Value Type Description Char [] The statement for the admin DDL operation."
  },
  "api/Oracle.NoSQL.SDK.AdminResult.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminResult.html",
    "title": "Class AdminResult | NoSQL SDK for .NET",
    "keywords": "Class AdminResult On-premise only. Represents the status of an admin DDL operation and related information. Inheritance Object AdminResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AdminResult : Object Remarks This is the result of APIs ExecuteAdminAsync , ExecuteAdminWithCompletionAsync and GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) . It encapsulates the state of the admin DDL operation. Admin DDL operations performed by ExecuteAdminAsync can be potentially long running and not necessarily completed when this method returns result. You may call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to be notified when the operation completes. Alternatively you may call ExecuteAdminWithCompletionAsync which will return the result only when the DDL operation is fully completed. You may also call GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) to receive the current status of the admin DDL operation. Properties Name Description Output Gets the output of the operation as a string. State Gets the current state of the operation. Statement Gets the statement for the operation. Methods Name Description WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Asynchronously waits for completion of admin DDL operations. See Also ExecuteAdminAsync ExecuteAdminWithCompletionAsync GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) AdminState"
  },
  "api/Oracle.NoSQL.SDK.AdminResult.Output.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminResult.Output.html",
    "title": "Property Output | NoSQL SDK for .NET",
    "keywords": "Property Output Output Gets the output of the operation as a string. Declaration public string Output { get; } Property Value Type Description String The output of the operation for read-only operations, otherwise null . Remarks The output is not null for read-only immediate operations such as SHOW operations and is null for operations that modify system state such as CREATE , DROP , GRANT , etc."
  },
  "api/Oracle.NoSQL.SDK.AdminResult.State.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminResult.State.html",
    "title": "Property State | NoSQL SDK for .NET",
    "keywords": "Property State State Gets the current state of the operation. Declaration public AdminState State { get; } Property Value Type Description AdminState The current state of the operation which is either complete or in progress. See Also AdminState"
  },
  "api/Oracle.NoSQL.SDK.AdminResult.Statement.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminResult.Statement.html",
    "title": "Property Statement | NoSQL SDK for .NET",
    "keywords": "Property Statement Statement Gets the statement for the operation. Declaration public string Statement { get; } Property Value Type Description String The statement for the operation."
  },
  "api/Oracle.NoSQL.SDK.AdminResult.WaitForCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminResult.WaitForCompletionAsync.html",
    "title": "Method WaitForCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method WaitForCompletionAsync WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Asynchronously waits for completion of admin DDL operations. Declaration public Task<AdminResult> WaitForCompletionAsync(Nullable<TimeSpan> timeout = null, Nullable<TimeSpan> pollDelay = null, CancellationToken cancellationToken = null) Parameters Type Name Description Nullable < TimeSpan > timeout (Optional) Timeout reflecting how long to keep polling for the operation completion. Must be positive value. Defaults to AdminPollTimeout if the latter is set or to no timeout if the latter is not set. Nullable < TimeSpan > pollDelay (Optional) Delay between successive polls, determines how often the polls are performed. Must be positive value and not greater then the timeout. Defaults to AdminPollDelay . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult . Remarks The wait is accomplished by polling the operation state at specified interval. When the operation completes, the state of the operation should be Complete . The result of this method is an AdminResult that represents the final state of the operation (which is the result of the last poll). If the operation fails, this method will throw exception with the information about the operation failure. Note that in addition to the result returned, this calling instance is also modified to reflect the operation completion. You need not call this method on the result returned by ExecuteAdminWithCompletionAsync since it will already reflect the operation completion. Exceptions Type Condition ArgumentException If timeout or pollDelay are invalid or pollDelay is greater than the timeout. TimeoutException Admin DDL operation has not completed within the timeout period. May also be thrown if the service becomes unreachable due to network connectivity. InvalidOperationException If the service is not in a valid state to perform the operation. NoSQLException NoSQLException or one of its subclasses may reflect the failure of the operation being polled for. See documentation for corresponding subclass of NoSQLException ."
  },
  "api/Oracle.NoSQL.SDK.AdminState.Complete.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminState.Complete.html",
    "title": "Field Complete | NoSQL SDK for .NET",
    "keywords": "Field Complete Operation is complete and successful. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const AdminState Complete Returns Type Description AdminState"
  },
  "api/Oracle.NoSQL.SDK.AdminState.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminState.html",
    "title": "Class AdminState | NoSQL SDK for .NET",
    "keywords": "Class AdminState On-premise only. Represents the state of the operation performed by ExecuteAdminAsync or ExecuteAdminWithCompletionAsync . Inheritance Object AdminState Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class AdminState : Enum Fields Name Description Complete Operation is complete and successful. InProgress Operation is in progress. value__"
  },
  "api/Oracle.NoSQL.SDK.AdminState.InProgress.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminState.InProgress.html",
    "title": "Field InProgress | NoSQL SDK for .NET",
    "keywords": "Field InProgress Operation is in progress. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const AdminState InProgress Returns Type Description AdminState"
  },
  "api/Oracle.NoSQL.SDK.AdminState.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminState.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.AdminStatusRequest.AdminResult.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminStatusRequest.AdminResult.html",
    "title": "Property AdminResult | NoSQL SDK for .NET",
    "keywords": "Property AdminResult AdminResult Gets the AdminResult used as an input to this operation. Declaration public AdminResult AdminResult { get; } Property Value Type Description AdminResult The result returned by ExecuteAdminAsync used as an input to this operation."
  },
  "api/Oracle.NoSQL.SDK.AdminStatusRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminStatusRequest.html",
    "title": "Class AdminStatusRequest | NoSQL SDK for .NET",
    "keywords": "Class AdminStatusRequest On-premise only. Represents information about an operation performed by GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) API. Inheritance Object Request AdminStatusRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AdminStatusRequest : Request Properties Name Description AdminResult Gets the AdminResult used as an input to this operation. Options Gets the options for this operation. See Also GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) Request"
  },
  "api/Oracle.NoSQL.SDK.AdminStatusRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.AdminStatusRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for this operation. Declaration public GetAdminStatusOptions Options { get; } Property Value Type Description GetAdminStatusOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Add.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Add.html",
    "title": "Method Add | NoSQL SDK for .NET",
    "keywords": "Method Add Add(FieldValue) Adds a value to the end of the list represented by this instance. Declaration public void Add(FieldValue item) Parameters Type Name Description FieldValue item FieldValue instance to be added to the end of the list represented by this instance. If null , Null will be added instead."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Clear.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Clear.html",
    "title": "Method Clear | NoSQL SDK for .NET",
    "keywords": "Method Clear Clear() Remove all elements from the list represented by this instance. Declaration public void Clear() Remarks Count is set to 0, but the capacity of the list is not changed by this operation."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Contains.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Contains.html",
    "title": "Method Contains | NoSQL SDK for .NET",
    "keywords": "Method Contains Contains(FieldValue) Determines whether a specified element is in the list represented by this instance. Declaration public bool Contains(FieldValue item) Parameters Type Name Description FieldValue item The value to locate. Returns Type Description Boolean true if the value is found, otherwise false . Remarks The equality of the values is determined by the semantics of Equals(FieldValue) method."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.CopyTo.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.CopyTo.html",
    "title": "Method CopyTo | NoSQL SDK for .NET",
    "keywords": "Method CopyTo CopyTo(FieldValue[], Int32) Copies the entire list represented by this instance to an array of FieldValue , starting at the specified index of the target array. Declaration public void CopyTo(FieldValue[] array, int arrayIndex) Parameters Type Name Description FieldValue [] array The target array. Int32 arrayIndex The zero-based index in array where to start copying. Remarks Only references to FieldValue instances within the list are copied (the values are not cloned). Exceptions Type Condition ArgumentOutOfRangeException If arrayIndex is less than 0. ArgumentNullException If array is null . ArgumentException There is not enough space in array starting at arrayIndex to copy all the elements."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Count.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Count.html",
    "title": "Property Count | NoSQL SDK for .NET",
    "keywords": "Property Count Count Gets the number of elements in this ArrayValue instance. Declaration public override int Count { get; } Property Value Type Description Int32 The number of elements contained in the array which this instance represents. Overrides FieldValue.Count"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.-ctor.html",
    "title": "Constructor ArrayValue | NoSQL SDK for .NET",
    "keywords": "Constructor ArrayValue ArrayValue() Initializes a new instance of the ArrayValue that is empty and has the default initial capacity. Declaration public ArrayValue() See Also ArrayValue(Int32) ArrayValue(Int32) Initializes a new instance of ArrayValue that is empty and has the specified initial capacity. Declaration public ArrayValue(int capacity) Parameters Type Name Description Int32 capacity The number of elements that the new ArrayValue can initially hold. Remarks The capacity of ArrayValue is the number of elements that ArrayValue can hold. As elements are added to an ArrayValue , the capacity is automatically increased as required. ArrayValue(IEnumerable<FieldValue>) Initializes a new instance of ArrayValue that contains elements from the specified collection of FieldValue instances. Declaration public ArrayValue(IEnumerable<FieldValue> collection) Parameters Type Name Description IEnumerable < FieldValue > collection The collection whose elements are added to the new ArrayValue . Remarks The elements are added in the same order as they are read by the enumerator of the collection. Exceptions Type Condition ArgumentNullException If collection is null ."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Array Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.html",
    "title": "Class ArrayValue | NoSQL SDK for .NET",
    "keywords": "Class ArrayValue Represents an array of FieldValue instances. Inheritance Object FieldValue ArrayValue Implements IComparable < FieldValue > IEquatable < FieldValue > IList < FieldValue > ICollection < FieldValue > IEnumerable < FieldValue > IEnumerable Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Item[String] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ArrayValue : FieldValue Remarks This class is used to represent values of NoSQL data type Array . It represents its value as a List<T> FieldValue instances and uses zero-based indexes. The list is automatically resized as more values are added. This class supports all the functionality of IList<T> interface, including enumeration with foreach loop. Constructors Name Description ArrayValue() Initializes a new instance of the ArrayValue that is empty and has the default initial capacity. ArrayValue(IEnumerable<FieldValue>) Initializes a new instance of ArrayValue that contains elements from the specified collection of FieldValue instances. ArrayValue(Int32) Initializes a new instance of ArrayValue that is empty and has the specified initial capacity. Properties Name Description Count Gets the number of elements in this ArrayValue instance. DbType Gets DbType of this instance which represents the type of this value. Item[Int32] Gets or sets the element at the specified index. Methods Name Description Add(FieldValue) Adds a value to the end of the list represented by this instance. Clear() Remove all elements from the list represented by this instance. Contains(FieldValue) Determines whether a specified element is in the list represented by this instance. CopyTo(FieldValue[], Int32) Copies the entire list represented by this instance to an array of FieldValue , starting at the specified index of the target array. IndexOf(FieldValue) Searches for the specified value in the list represented by this instance and returns the zero-based index of the first occurrence of this value. Insert(Int32, FieldValue) Inserts a value into the list represented by this instance at the specified index. Remove(FieldValue) Removes the first occurrence of a specific value from the list represented by this instance. RemoveAt(Int32) Removes the element at the specified index from the list represented by this instance. SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.IndexOf.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.IndexOf.html",
    "title": "Method IndexOf | NoSQL SDK for .NET",
    "keywords": "Method IndexOf IndexOf(FieldValue) Searches for the specified value in the list represented by this instance and returns the zero-based index of the first occurrence of this value. Declaration public int IndexOf(FieldValue item) Parameters Type Name Description FieldValue item The value to search for. Returns Type Description Int32 The zero-based index of the first occurrence of item if found, otherwise -1. Remarks The equality of the values in the list is determined by the semantics of Equals(FieldValue) method."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Insert.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Insert.html",
    "title": "Method Insert | NoSQL SDK for .NET",
    "keywords": "Method Insert Insert(Int32, FieldValue) Inserts a value into the list represented by this instance at the specified index. Declaration public void Insert(int index, FieldValue item) Parameters Type Name Description Int32 index The zero-based index at which to insert item . FieldValue item The value to be inserted. If null , Null will be inserted instead. Remarks This operation may involve shifting the elements following the index to the right to make room for the item . If index is equal to Count , the value is added to the end of the list. Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Item.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Item.html",
    "title": "Property Item | NoSQL SDK for .NET",
    "keywords": "Property Item Item[Int32] Gets or sets the element at the specified index. Declaration public override FieldValue this[int index] { get; set; } Parameters Type Name Description Int32 index The zero-based index of the element to get or set. Property Value Type Description FieldValue The element at the specified index. For set operation, if the value is null , Null will be used. Overrides FieldValue.Item[Int32] Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.Remove.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.Remove.html",
    "title": "Method Remove | NoSQL SDK for .NET",
    "keywords": "Method Remove Remove(FieldValue) Removes the first occurrence of a specific value from the list represented by this instance. Declaration public bool Remove(FieldValue item) Parameters Type Name Description FieldValue item Value to remove. Returns Type Description Boolean true if the value was successfully removed, false if the value was not found in the list. Remarks The equality of the values is determined by the semantics of Equals(FieldValue) method. This operation may involve shifting the elements following the removed element to the left to replace the removed element."
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.RemoveAt.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.RemoveAt.html",
    "title": "Method RemoveAt | NoSQL SDK for .NET",
    "keywords": "Method RemoveAt RemoveAt(Int32) Removes the element at the specified index from the list represented by this instance. Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index The zero-based index of the element to remove. Remarks This operation may involve shifting the elements following the index to the left to replace the removed element. Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.ArrayValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.ArrayValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.AuthorizationException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationException.-ctor.html",
    "title": "Constructor AuthorizationException | NoSQL SDK for .NET",
    "keywords": "Constructor AuthorizationException AuthorizationException() Initializes a new instance of AuthorizationException . Declaration public AuthorizationException() AuthorizationException(String) Initializes a new instance of AuthorizationException with the message that describes the current exception. Declaration public AuthorizationException(string message) Parameters Type Name Description String message A message that describes the current exception. AuthorizationException(String, Exception) Initializes a new instance of AuthorizationException with the message that describes the current exception and an inner exception. Declaration public AuthorizationException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.AuthorizationException.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationException.html",
    "title": "Class AuthorizationException | NoSQL SDK for .NET",
    "keywords": "Class AuthorizationException The exception that is thrown while trying to obtain the authorization information needed to perform an operation on the Oracle NoSQL Database. Inheritance Object NoSQLException AuthorizationException Inherited Members NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class AuthorizationException : NoSQLException Remarks This exception is thrown by the authorization provider when the driver calls ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) . It indicates failure to obtain the authorization information. This instance may contain the underlying exception that is specific to the implementation of the authorization provider as InnerException property. AuthorizationException instance is retryable if and only if it contains the inner exception and the inner exception itself is retryable (see IRetryHandler for the description of retryable exceptions). Constructors Name Description AuthorizationException() Initializes a new instance of AuthorizationException . AuthorizationException(String) Initializes a new instance of AuthorizationException with the message that describes the current exception. AuthorizationException(String, Exception) Initializes a new instance of AuthorizationException with the message that describes the current exception and an inner exception. Properties Name Description IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. See Also IAuthorizationProvider AuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.AuthorizationException.IsRetryable.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationException.IsRetryable.html",
    "title": "Property IsRetryable | NoSQL SDK for .NET",
    "keywords": "Property IsRetryable IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. Declaration public override bool IsRetryable { get; } Property Value Type Description Boolean true if this instance contains non-null InnerException property and the inner exception itself is retryable, otherwise false . Overrides NoSQLException.IsRetryable See Also IsRetryable IRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.ApplyAuthorizationAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.ApplyAuthorizationAsync.html",
    "title": "Method ApplyAuthorizationAsync | NoSQL SDK for .NET",
    "keywords": "Method ApplyAuthorizationAsync ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and supplies the authorization information as the required HTTP headers. Declaration public Task ApplyAuthorizationAsync(Request request, HttpRequestMessage message, CancellationToken cancellationToken) Parameters Type Name Description Request request The Request object representing the running operation. HttpRequestMessage message HTTP request message. CancellationToken cancellationToken Cancellation token. Returns Type Description Task Task that completes when the required authorization information is obtained and added to the request message . Implements IAuthorizationProvider.ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Remarks This method will call GetAuthorizationStringAsync(Request, CancellationToken) and use the returned value to supply the Authorization HTTP header. You do not need to call or override this method. Exceptions Type Condition AuthorizationException If failed to obtain the required authorization information. Use this exception to wrap any provider-specific exception."
  },
  "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.ConfigureAuthorization.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.ConfigureAuthorization.html",
    "title": "Method ConfigureAuthorization | NoSQL SDK for .NET",
    "keywords": "Method ConfigureAuthorization ConfigureAuthorization(NoSQLConfig) Default implementation of ConfigureAuthorization(NoSQLConfig) which is a no-op. Declaration public virtual void ConfigureAuthorization(NoSQLConfig config) Parameters Type Name Description NoSQLConfig config The initial configuration. Implements IAuthorizationProvider.ConfigureAuthorization(NoSQLConfig)"
  },
  "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.-ctor.html",
    "title": "Constructor AuthorizationStringProvider | NoSQL SDK for .NET",
    "keywords": "Constructor AuthorizationStringProvider AuthorizationStringProvider() Declaration protected AuthorizationStringProvider()"
  },
  "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.GetAuthorizationStringAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.GetAuthorizationStringAsync.html",
    "title": "Method GetAuthorizationStringAsync | NoSQL SDK for .NET",
    "keywords": "Method GetAuthorizationStringAsync GetAuthorizationStringAsync(Request, CancellationToken) Gets the authorization string. Declaration public abstract Task<string> GetAuthorizationStringAsync(Request request, CancellationToken cancellationToken) Parameters Type Name Description Request request The Request object representing the running operation. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < String > Task that returning the authorization string. Remarks Subclasses must override this method. The returned authorization string will be set as a value of Authorization HTTP header. Exceptions Type Condition AuthorizationException If failed to obtain the authorization string. Use this exception to wrap any provider-specific exception."
  },
  "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.AuthorizationStringProvider.html",
    "title": "Class AuthorizationStringProvider | NoSQL SDK for .NET",
    "keywords": "Class AuthorizationStringProvider Implementation of IAuthorizationProvider that provides the authorization string. Inheritance Object AuthorizationStringProvider KVStoreAuthorizationProvider Implements IAuthorizationProvider Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class AuthorizationStringProvider : Object, IAuthorizationProvider Remarks Use this class only if you need to implement your own authorization provider and the authorization needs only Authorization HTTP header. In this case, extend this class by implementing methods GetAuthorizationStringAsync(Request, CancellationToken) and optionally ConfigureAuthorization(NoSQLConfig) . Constructors Name Description AuthorizationStringProvider() Methods Name Description ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and supplies the authorization information as the required HTTP headers. ConfigureAuthorization(NoSQLConfig) Default implementation of ConfigureAuthorization(NoSQLConfig) which is a no-op. GetAuthorizationStringAsync(Request, CancellationToken) Gets the authorization string. See Also IAuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.BadProtocolException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.BadProtocolException.-ctor.html",
    "title": "Constructor BadProtocolException | NoSQL SDK for .NET",
    "keywords": "Constructor BadProtocolException BadProtocolException() Initializes a new instance of BadProtocolException . Declaration public BadProtocolException() BadProtocolException(String) Initializes a new instance of BadProtocolException with the message that describes the current exception. Declaration public BadProtocolException(string message) Parameters Type Name Description String message A message that describes the current exception. BadProtocolException(String, Exception) Initializes a new instance of BadProtocolException with the message that describes the current exception and an inner exception. Declaration public BadProtocolException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.BadProtocolException.html": {
    "href": "api/Oracle.NoSQL.SDK.BadProtocolException.html",
    "title": "Class BadProtocolException | NoSQL SDK for .NET",
    "keywords": "Class BadProtocolException The exception that is thrown when an invalid protocol message is received by the driver or the service. Inheritance Object NoSQLException BadProtocolException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class BadProtocolException : NoSQLException Remarks This exception indicates communication problem between the driver and the service that resulted in the invalid protocol message received by either the driver or the service. This exception may be due to the driver sending request to an invalid service endpoint, driver installation issues, environmental issues or other reasons. This exception is not retryable. Note that if the problem is because the service does not support the current driver protocol version, UnsupportedProtocolException will be thrown instead. Constructors Name Description BadProtocolException() Initializes a new instance of BadProtocolException . BadProtocolException(String) Initializes a new instance of BadProtocolException with the message that describes the current exception. BadProtocolException(String, Exception) Initializes a new instance of BadProtocolException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.BatchOperationNumberLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.BatchOperationNumberLimitException.-ctor.html",
    "title": "Constructor BatchOperationNumberLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor BatchOperationNumberLimitException BatchOperationNumberLimitException() Initializes a new instance of BatchOperationNumberLimitException . Declaration public BatchOperationNumberLimitException() BatchOperationNumberLimitException(String) Initializes a new instance of BatchOperationNumberLimitException with the message that describes the current exception. Declaration public BatchOperationNumberLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. BatchOperationNumberLimitException(String, Exception) Initializes a new instance of BatchOperationNumberLimitException with the message that describes the current exception and an inner exception. Declaration public BatchOperationNumberLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.BatchOperationNumberLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.BatchOperationNumberLimitException.html",
    "title": "Class BatchOperationNumberLimitException | NoSQL SDK for .NET",
    "keywords": "Class BatchOperationNumberLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when the number of write operations passed to WriteManyAsync , PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) or DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) exceeds the system-defined limit. Inheritance Object NoSQLException BatchOperationNumberLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class BatchOperationNumberLimitException : NoSQLException Remarks The number of write operations may mean the number of operations in WriteOperationCollection passed to WriteManyAsync , the number of rows passed to PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) or the number of primary keys passed to DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) . Constructors Name Description BatchOperationNumberLimitException() Initializes a new instance of BatchOperationNumberLimitException . BatchOperationNumberLimitException(String) Initializes a new instance of BatchOperationNumberLimitException with the message that describes the current exception. BatchOperationNumberLimitException(String, Exception) Initializes a new instance of BatchOperationNumberLimitException with the message that describes the current exception and an inner exception. See Also WriteManyAsync PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.BinaryValue.AsByteArray.html": {
    "href": "api/Oracle.NoSQL.SDK.BinaryValue.AsByteArray.html",
    "title": "Property AsByteArray | NoSQL SDK for .NET",
    "keywords": "Property AsByteArray AsByteArray Gets the value of this instance as byte array. Declaration public override byte[] AsByteArray { get; } Property Value Type Description Byte [] The byte[] value that this instance represents. Overrides FieldValue.AsByteArray"
  },
  "api/Oracle.NoSQL.SDK.BinaryValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.BinaryValue.-ctor.html",
    "title": "Constructor BinaryValue | NoSQL SDK for .NET",
    "keywords": "Constructor BinaryValue BinaryValue(Byte[]) Initializes a new instance of the BinaryValue with the specified byte[] value. Declaration public BinaryValue(byte[] value) Parameters Type Name Description Byte [] value The value which this instance will represent. Exceptions Type Condition ArgumentNullException If value is null ."
  },
  "api/Oracle.NoSQL.SDK.BinaryValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.BinaryValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Binary Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.BinaryValue.html": {
    "href": "api/Oracle.NoSQL.SDK.BinaryValue.html",
    "title": "Class BinaryValue | NoSQL SDK for .NET",
    "keywords": "Class BinaryValue Represents a binary value. Inheritance Object FieldValue BinaryValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class BinaryValue : FieldValue Remarks This class is used to represent values of NoSQL data types Binary and Fixed Binary . This value is represented by a C# type byte[] . When converted to JSON, this value is represented as Base64 encoded string. Constructors Name Description BinaryValue(Byte[]) Initializes a new instance of the BinaryValue with the specified byte[] value. Properties Name Description AsByteArray Gets the value of this instance as byte array. DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.BinaryValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.BinaryValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.AsBoolean.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.AsBoolean.html",
    "title": "Property AsBoolean | NoSQL SDK for .NET",
    "keywords": "Property AsBoolean AsBoolean Gets the value of this instance as boolean. Declaration public abstract override bool AsBoolean { get; } Property Value Type Description Boolean The bool value that this instance represents. Overrides FieldValue.AsBoolean"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Boolean Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.False.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.False.html",
    "title": "Field False | NoSQL SDK for .NET",
    "keywords": "Field False Represents the value false . This field is read-only. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly BooleanValue False Returns Type Description BooleanValue"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.html",
    "title": "Class BooleanValue | NoSQL SDK for .NET",
    "keywords": "Class BooleanValue Represents a boolean value. Inheritance Object FieldValue BooleanValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class BooleanValue : FieldValue Remarks This class is used to represent values of NoSQL data type Boolean . The values of this class are never instantiated and the two possible values are represented by constants True and False . Fields Name Description False Represents the value false . This field is read-only. True Represents the value true . This field is read-only. Properties Name Description AsBoolean Gets the value of this instance as boolean. DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.BooleanValue.True.html": {
    "href": "api/Oracle.NoSQL.SDK.BooleanValue.True.html",
    "title": "Field True | NoSQL SDK for .NET",
    "keywords": "Field True Represents the value true . This field is read-only. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly BooleanValue True Returns Type Description BooleanValue"
  },
  "api/Oracle.NoSQL.SDK.CapacityMode.html": {
    "href": "api/Oracle.NoSQL.SDK.CapacityMode.html",
    "title": "Class CapacityMode | NoSQL SDK for .NET",
    "keywords": "Class CapacityMode For Cloud Service/Cloud Simulator only. CapacityMode specifies the type of capacity that will be set on a table. It is used in table creation and table capacity updates. Inheritance Object CapacityMode Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class CapacityMode : Enum Remarks In Provisioned mode, the application defines the specified maximum read and write throughput for a table, as well as the maximum storage size. OnDemand mode allows for flexible throughput usage. In this mode, only the maximum storage size is specified. Fields Name Description OnDemand On Demand mode. Provisioned Provisioned mode. This is the default. value__ See Also TableLimits"
  },
  "api/Oracle.NoSQL.SDK.CapacityMode.OnDemand.html": {
    "href": "api/Oracle.NoSQL.SDK.CapacityMode.OnDemand.html",
    "title": "Field OnDemand | NoSQL SDK for .NET",
    "keywords": "Field OnDemand On Demand mode. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const CapacityMode OnDemand Returns Type Description CapacityMode"
  },
  "api/Oracle.NoSQL.SDK.CapacityMode.Provisioned.html": {
    "href": "api/Oracle.NoSQL.SDK.CapacityMode.Provisioned.html",
    "title": "Field Provisioned | NoSQL SDK for .NET",
    "keywords": "Field Provisioned Provisioned mode. This is the default. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const CapacityMode Provisioned Returns Type Description CapacityMode"
  },
  "api/Oracle.NoSQL.SDK.CapacityMode.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.CapacityMode.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.ConnectionOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ConnectionOptions.-ctor.html",
    "title": "Constructor ConnectionOptions | NoSQL SDK for .NET",
    "keywords": "Constructor ConnectionOptions ConnectionOptions() Declaration public ConnectionOptions()"
  },
  "api/Oracle.NoSQL.SDK.ConnectionOptions.DisableHostnameVerification.html": {
    "href": "api/Oracle.NoSQL.SDK.ConnectionOptions.DisableHostnameVerification.html",
    "title": "Property DisableHostnameVerification | NoSQL SDK for .NET",
    "keywords": "Property DisableHostnameVerification DisableHostnameVerification Gets or sets a value that determines whether to disable hostname verification on the certificate presented by the server. Declaration public bool DisableHostnameVerification { get; set; } Property Value Type Description Boolean true to disable hostname verification. The default is false . Remarks Note that this option does not disable verification of the certificate chain presented by the server. It only allows a mismatch between the hostname in the URL and the hostname in the certificate."
  },
  "api/Oracle.NoSQL.SDK.ConnectionOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.ConnectionOptions.html",
    "title": "Class ConnectionOptions | NoSQL SDK for .NET",
    "keywords": "Class ConnectionOptions Represents options for network connections to Oracle NoSQL Database. Inheritance Object ConnectionOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ConnectionOptions : Object Remarks These options customize how the driver establishes network connections to Oracle NoSQL Database. They include HTTP and secure transport-related options. Set these options as ConnectionOptions in the configuration used to create NoSQLClient instance. Examples Setting trusted root certificates. var client = new NoSQLClient(new NoSQLConfig( { Endpoint = \"...\", AuthorizationProvider = new KVStoreAuthorizationProvider(...), ConnectionOptions = new ConnectionOptions { TrustedRootCertificateFile = \"path/to/trusted/certificate.pem\" } }; Constructors Name Description ConnectionOptions() Properties Name Description DisableHostnameVerification Gets or sets a value that determines whether to disable hostname verification on the certificate presented by the server. TrustedRootCertificateFile On-premise only. Gets or sets a file path containing one or more trusted root certificates used to validate server SSL certificate for connections to secure kvstore. TrustedRootCertificates On-premise only. Gets or sets a collection of trusted root certificates used to validate server SSL certificate for connections to secure kvstore. See Also NoSQLConfig"
  },
  "api/Oracle.NoSQL.SDK.ConnectionOptions.TrustedRootCertificateFile.html": {
    "href": "api/Oracle.NoSQL.SDK.ConnectionOptions.TrustedRootCertificateFile.html",
    "title": "Property TrustedRootCertificateFile | NoSQL SDK for .NET",
    "keywords": "Property TrustedRootCertificateFile TrustedRootCertificateFile On-premise only. Gets or sets a file path containing one or more trusted root certificates used to validate server SSL certificate for connections to secure kvstore. Declaration public string TrustedRootCertificateFile { get; set; } Property Value Type Description String The collection of trusted root certificates. If not set, the validation of the server certificate is based on trusted root CAs in the system certificate store. Remarks The file must contain one or more certificates in PEM format. Set this property when your server certificate for the Oracle NoSQL database proxy is not issued by a trusted root certificate authority (CA), such as when the certificate is issued by a private CA or is a self-signed certificate. Alternatively, use TrustedRootCertificates property. This property is exclusive with TrustedRootCertificates property."
  },
  "api/Oracle.NoSQL.SDK.ConnectionOptions.TrustedRootCertificates.html": {
    "href": "api/Oracle.NoSQL.SDK.ConnectionOptions.TrustedRootCertificates.html",
    "title": "Property TrustedRootCertificates | NoSQL SDK for .NET",
    "keywords": "Property TrustedRootCertificates TrustedRootCertificates On-premise only. Gets or sets a collection of trusted root certificates used to validate server SSL certificate for connections to secure kvstore. Declaration public X509Certificate2Collection TrustedRootCertificates { get; set; } Property Value Type Description X509Certificate2Collection The collection of trusted root certificates. If not set, the validation of the server certificate is based on trusted root CAs in the system certificate store. Remarks Set this property when your server certificate for the Oracle NoSQL database proxy is not issued by a trusted root certificate authority (CA), such as when the certificate is issued by a private CA or is a self-signed certificate. Alternatively, use TrustedRootCertificateFile property. This property is exclusive with TrustedRootCertificateFile property."
  },
  "api/Oracle.NoSQL.SDK.Consistency.Absolute.html": {
    "href": "api/Oracle.NoSQL.SDK.Consistency.Absolute.html",
    "title": "Field Absolute | NoSQL SDK for .NET",
    "keywords": "Field Absolute Absolute consistency. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const Consistency Absolute Returns Type Description Consistency"
  },
  "api/Oracle.NoSQL.SDK.Consistency.Eventual.html": {
    "href": "api/Oracle.NoSQL.SDK.Consistency.Eventual.html",
    "title": "Field Eventual | NoSQL SDK for .NET",
    "keywords": "Field Eventual Eventual consistency. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const Consistency Eventual Returns Type Description Consistency"
  },
  "api/Oracle.NoSQL.SDK.Consistency.html": {
    "href": "api/Oracle.NoSQL.SDK.Consistency.html",
    "title": "Class Consistency | NoSQL SDK for .NET",
    "keywords": "Class Consistency Consistency is used to provide consistency guarantees for read operations. Inheritance Object Consistency Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class Consistency : Enum Remarks Absolute consistency may be specified to guarantee that current values are read. Eventual consistency means that the values read may be very slightly out of date. Absolute consistency results in higher cost, consuming twice the number of read units for the same data relative to Eventual consistency, and should only be used when required. It is possible to set a default Consistency for a NoSQLClient instance by providing it in the initial configuration as Consistency . In JSON configuration file, you may use string values \"Eventual\" or \"Absolute\". If no consistency is specified for an operation and there is no default value, Eventual is used. Consistency may be specified in options for all read operations. Fields Name Description Absolute Absolute consistency. Eventual Eventual consistency. value__ See Also GetOptions QueryOptions"
  },
  "api/Oracle.NoSQL.SDK.Consistency.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.Consistency.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.html",
    "title": "Class ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Class ConsumedCapacity Cloud Service/Cloud Simulator only. Represents read and write throughput consumed by the operation. Inheritance Object ConsumedCapacity Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ConsumedCapacity : Object Remarks ConsumedCapacity is part of results of data operations such as GetResult<TRow> , PutResult<TRow> , DeleteResult<TRow> , WriteManyResult<TRow> , PreparedStatement and QueryResult<TRow> . It contains read and write throughput consumed by the operation in KBytes as well as in read and write units. Throughput in read and write units is defined as follows. A read unit represents one eventually consistent read per second for data up to 1 KB in size. A read that is absolutely consistent is double that, consuming 2 read units for a read of up to 1 KB in size. This means that if an application is to use Absolute , it may need to specify additional read units when creating a table. A write unit represents 1 write per second of data up to 1 KB in size. Note the following: For read operations, such as GetAsync(String, MapValue, GetOptions, CancellationToken) , PrepareAsync(String, PrepareOptions, CancellationToken) and QueryAsync , the number of ReadUnits consumed may be larger than the number of read KBytes ( ReadKB ) if if the operation used absolute consistency. For update operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) and others, the number of read units consumed may also be larger than the number of read KBytes. Properties Name Description RateLimitDelay Gets the value indicating how long the operation has been delayed due to rate limiting. ReadKB Gets the read throughput in KBytes. ReadRateLimitDelay Gets the value indicating how long the operation has been delayed by the rate limiter due to the table read limit. ReadUnits Gets the read throughput in read units. WriteKB Gets the write throughput in KBytes. WriteRateLimitDelay Gets the value indicating how long the operation has been delayed by the rate limiter due to the table write limit. WriteUnits Gets the write throughput in write units. Methods Name Description ToString() Returns a string representing this consumed capacity."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.RateLimitDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.RateLimitDelay.html",
    "title": "Property RateLimitDelay | NoSQL SDK for .NET",
    "keywords": "Property RateLimitDelay RateLimitDelay Gets the value indicating how long the operation has been delayed due to rate limiting. Declaration public TimeSpan RateLimitDelay { get; } Property Value Type Description TimeSpan A sum of ReadRateLimitDelay and WriteRateLimitDelay ."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadKB.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadKB.html",
    "title": "Property ReadKB | NoSQL SDK for .NET",
    "keywords": "Property ReadKB ReadKB Gets the read throughput in KBytes. Declaration public int ReadKB { get; } Property Value Type Description Int32 Read throughput consumed by this operation in KBytes."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadRateLimitDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadRateLimitDelay.html",
    "title": "Property ReadRateLimitDelay | NoSQL SDK for .NET",
    "keywords": "Property ReadRateLimitDelay ReadRateLimitDelay Gets the value indicating how long the operation has been delayed by the rate limiter due to the table read limit. Declaration public TimeSpan ReadRateLimitDelay { get; } Property Value Type Description TimeSpan Time the operation has been delayed for due to the table read limit. 0 if rate limiting is disabled, or the operation does not perform reads, or the operation was not delayed by the read rate limiter. See Also IRateLimiter"
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.ReadUnits.html",
    "title": "Property ReadUnits | NoSQL SDK for .NET",
    "keywords": "Property ReadUnits ReadUnits Gets the read throughput in read units. Declaration public int ReadUnits { get; } Property Value Type Description Int32 Read throughput consumed by this operation in read units."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Returns a string representing this consumed capacity. Declaration public override string ToString() Returns Type Description String A string containing information represented by this consumed capacity."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteKB.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteKB.html",
    "title": "Property WriteKB | NoSQL SDK for .NET",
    "keywords": "Property WriteKB WriteKB Gets the write throughput in KBytes. Declaration public int WriteKB { get; } Property Value Type Description Int32 Write throughput consumed by this operation in KBytes."
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteRateLimitDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteRateLimitDelay.html",
    "title": "Property WriteRateLimitDelay | NoSQL SDK for .NET",
    "keywords": "Property WriteRateLimitDelay WriteRateLimitDelay Gets the value indicating how long the operation has been delayed by the rate limiter due to the table write limit. Declaration public TimeSpan WriteRateLimitDelay { get; } Property Value Type Description TimeSpan Time the operation has been delayed for due to the table write limit. 0 if rate limiting is disabled, or the operation does not perform writes, or the operation was not delayed by the write rate limiter. See Also IRateLimiter"
  },
  "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.ConsumedCapacity.WriteUnits.html",
    "title": "Property WriteUnits | NoSQL SDK for .NET",
    "keywords": "Property WriteUnits WriteUnits Gets the write throughput in write units. Declaration public int WriteUnits { get; } Property Value Type Description Int32 Write throughput consumed by this operation in write units."
  },
  "api/Oracle.NoSQL.SDK.ControlOperationThrottlingException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ControlOperationThrottlingException.-ctor.html",
    "title": "Constructor ControlOperationThrottlingException | NoSQL SDK for .NET",
    "keywords": "Constructor ControlOperationThrottlingException ControlOperationThrottlingException() Initializes a new instance of ControlOperationThrottlingException . Declaration public ControlOperationThrottlingException() ControlOperationThrottlingException(String) Initializes a new instance of ControlOperationThrottlingException with the message that describes the current exception. Declaration public ControlOperationThrottlingException(string message) Parameters Type Name Description String message A message that describes the current exception. ControlOperationThrottlingException(String, Exception) Initializes a new instance of ControlOperationThrottlingException with the message that describes the current exception and an inner exception. Declaration public ControlOperationThrottlingException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ControlOperationThrottlingException.html": {
    "href": "api/Oracle.NoSQL.SDK.ControlOperationThrottlingException.html",
    "title": "Class ControlOperationThrottlingException | NoSQL SDK for .NET",
    "keywords": "Class ControlOperationThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when a non-data operation is throttled. Inheritance Object NoSQLException RetryableException ControlOperationThrottlingException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ControlOperationThrottlingException : RetryableException Remarks This exception may be thrown if an application attempts too many control operations such as table creation, deletion, or similar methods. Such operations do not use the throughput or capacity provisioned for a given table but they consume system resources and their use is limited. This exception is retryable and the default NoSQLRetryHandler uses a large delay in order to minimize the change that a retry will also be throttled. This delay can be configured as ControlOperationBaseDelay . Constructors Name Description ControlOperationThrottlingException() Initializes a new instance of ControlOperationThrottlingException . ControlOperationThrottlingException(String) Initializes a new instance of ControlOperationThrottlingException with the message that describes the current exception. ControlOperationThrottlingException(String, Exception) Initializes a new instance of ControlOperationThrottlingException with the message that describes the current exception and an inner exception. See Also ControlOperationBaseDelay"
  },
  "api/Oracle.NoSQL.SDK.DbType.Array.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Array.html",
    "title": "Field Array | NoSQL SDK for .NET",
    "keywords": "Field Array Represents ArrayValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Array Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Binary.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Binary.html",
    "title": "Field Binary | NoSQL SDK for .NET",
    "keywords": "Field Binary Represents BinaryValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Binary Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Boolean.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Boolean.html",
    "title": "Field Boolean | NoSQL SDK for .NET",
    "keywords": "Field Boolean Represents BooleanValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Boolean Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Double.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Double.html",
    "title": "Field Double | NoSQL SDK for .NET",
    "keywords": "Field Double Represents DoubleValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Double Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Empty.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Empty.html",
    "title": "Field Empty | NoSQL SDK for .NET",
    "keywords": "Field Empty For internal use only. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Empty Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.html",
    "title": "Class DbType | NoSQL SDK for .NET",
    "keywords": "Class DbType Represents the type of FieldValue instance. Generally every subclass of FieldValue is represented by its own DbType value, with the exception of MapValue and RecordValue both represented by Map . Inheritance Object DbType Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class DbType : Enum Fields Name Description Array Represents ArrayValue . Binary Represents BinaryValue . Boolean Represents BooleanValue . Double Represents DoubleValue . Empty For internal use only. Integer Represents IntegerValue . JsonNull Represents JsonNullValue . Long Represents LongValue . Map Represents MapValue or RecordValue . Null Represents NullValue . Number Represents NumberValue . String Represents StringValue . Timestamp Represents TimestampValue . value__ See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.DbType.Integer.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Integer.html",
    "title": "Field Integer | NoSQL SDK for .NET",
    "keywords": "Field Integer Represents IntegerValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Integer Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.JsonNull.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.JsonNull.html",
    "title": "Field JsonNull | NoSQL SDK for .NET",
    "keywords": "Field JsonNull Represents JsonNullValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType JsonNull Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Long.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Long.html",
    "title": "Field Long | NoSQL SDK for .NET",
    "keywords": "Field Long Represents LongValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Long Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Map.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Map.html",
    "title": "Field Map | NoSQL SDK for .NET",
    "keywords": "Field Map Represents MapValue or RecordValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Map Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Null.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Null.html",
    "title": "Field Null | NoSQL SDK for .NET",
    "keywords": "Field Null Represents NullValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Null Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Number.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Number.html",
    "title": "Field Number | NoSQL SDK for .NET",
    "keywords": "Field Number Represents NumberValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Number Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.String.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.String.html",
    "title": "Field String | NoSQL SDK for .NET",
    "keywords": "Field String Represents StringValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType String Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.Timestamp.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.Timestamp.html",
    "title": "Field Timestamp | NoSQL SDK for .NET",
    "keywords": "Field Timestamp Represents TimestampValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const DbType Timestamp Returns Type Description DbType"
  },
  "api/Oracle.NoSQL.SDK.DbType.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.DbType.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.DeleteIfVersionOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteIfVersionOperation.html",
    "title": "Class DeleteIfVersionOperation | NoSQL SDK for .NET",
    "keywords": "Class DeleteIfVersionOperation Represents a DeleteIfVersion operation that is part of WriteOperationCollection . Inheritance Object DeleteOperation DeleteIfVersionOperation Implements IWriteOperation Inherited Members DeleteOperation.AbortIfUnsuccessful DeleteOperation.TableName DeleteOperation.PrimaryKey DeleteOperation.Options Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteIfVersionOperation : DeleteOperation, IWriteOperation Remarks This operation deletes a row from a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. Properties Name Description MatchVersion Gets the RowVersion of the row to match for DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) operation. See Also IWriteOperation AddDeleteIfVersion"
  },
  "api/Oracle.NoSQL.SDK.DeleteIfVersionOperation.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteIfVersionOperation.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets the RowVersion of the row to match for DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) operation. Declaration public RowVersion MatchVersion { get; } Property Value Type Description RowVersion The value of the version to match."
  },
  "api/Oracle.NoSQL.SDK.DeleteIfVersionRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteIfVersionRequest-1.html",
    "title": "Class DeleteIfVersionRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class DeleteIfVersionRequest<TRow> Represents information about Put operation performed by DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest DeleteRequest <TRow> DeleteIfVersionRequest<TRow> Inherited Members DeleteRequest<TRow>.PrimaryKey DeleteRequest<TRow>.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteIfVersionRequest<TRow> : DeleteRequest<TRow> Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description MatchVersion Gets the RowVersion of the row to match for DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) operation. See Also DeleteRequest <TRow> DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.DeleteIfVersionRequest-1.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteIfVersionRequest-1.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets the RowVersion of the row to match for DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) operation. Declaration public RowVersion MatchVersion { get; } Property Value Type Description RowVersion The value of the version to match."
  },
  "api/Oracle.NoSQL.SDK.DeleteManyOptions.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteManyOptions.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Delete operation fails. Declaration public bool AbortIfUnsuccessful { get; set; } Property Value Type Description Boolean true to abort the transaction if any Delete operation fails, otherwise false . The default is false . Remarks If set to true and any Delete operation fails, the entire transaction started by DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) will be aborted."
  },
  "api/Oracle.NoSQL.SDK.DeleteManyOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteManyOptions.-ctor.html",
    "title": "Constructor DeleteManyOptions | NoSQL SDK for .NET",
    "keywords": "Constructor DeleteManyOptions DeleteManyOptions() Declaration public DeleteManyOptions()"
  },
  "api/Oracle.NoSQL.SDK.DeleteManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteManyOptions.html",
    "title": "Class DeleteManyOptions | NoSQL SDK for .NET",
    "keywords": "Class DeleteManyOptions Represents options passed to DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) API. Inheritance Object DeleteOptions DeleteManyOptions Inherited Members DeleteOptions.Compartment DeleteOptions.Namespace DeleteOptions.Timeout DeleteOptions.Durability DeleteOptions.MatchVersion DeleteOptions.ReturnExisting Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteManyOptions : DeleteOptions Remarks These options include all options available in DeleteOptions with the addition of AbortIfUnsuccessful option. Constructors Name Description DeleteManyOptions() Properties Name Description AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Delete operation fails."
  },
  "api/Oracle.NoSQL.SDK.DeleteOperation.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOperation.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. Declaration public bool AbortIfUnsuccessful { get; } Property Value Type Description Boolean true to abort the transaction if this operation fails, otherwise false . Implements IWriteOperation.AbortIfUnsuccessful"
  },
  "api/Oracle.NoSQL.SDK.DeleteOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOperation.html",
    "title": "Class DeleteOperation | NoSQL SDK for .NET",
    "keywords": "Class DeleteOperation Represents a Delete operation that is part of WriteOperationCollection . Inheritance Object DeleteOperation DeleteIfVersionOperation Implements IWriteOperation Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteOperation : Object, IWriteOperation Properties Name Description AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. Options Gets the options for the Delete operation. PrimaryKey Gets the value of the primary key for the Delete operation. TableName Gets the table name, if available. See Also IWriteOperation AddDelete"
  },
  "api/Oracle.NoSQL.SDK.DeleteOperation.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOperation.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Delete operation. Declaration public DeleteOptions Options { get; } Property Value Type Description DeleteOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.DeleteOperation.PrimaryKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOperation.PrimaryKey.html",
    "title": "Property PrimaryKey | NoSQL SDK for .NET",
    "keywords": "Property PrimaryKey PrimaryKey Gets the value of the primary key for the Delete operation. Declaration public object PrimaryKey { get; } Property Value Type Description Object The primary key as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.DeleteOperation.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOperation.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the table name, if available. Declaration public virtual string TableName { get; } Property Value Type Description String Table name if available, otherwise null. Implements IWriteOperation.TableName Remarks Table name is required if this operation is used by WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) method that requires you to provide table name for each operation. If using WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) , PutManyAsync or DeleteManyAsync , table name should be provided as a parameter to these methods rather than per-operation and thus this property should be null ."
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.-ctor.html",
    "title": "Constructor DeleteOptions | NoSQL SDK for .NET",
    "keywords": "Constructor DeleteOptions DeleteOptions() Declaration public DeleteOptions()"
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-premise only. Gets or sets Durability value to use for the operation. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for the operation. If not set, defaults to Durability . Remarks Durability determines SyncPolicy for Master and Replicas as well as ReplicaAckPolicy for the Replicas. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.html",
    "title": "Class DeleteOptions | NoSQL SDK for .NET",
    "keywords": "Class DeleteOptions Represent options for the Delete operation. Inheritance Object DeleteOptions DeleteManyOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteOptions : Object Remarks These options are passed to APIs DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) and DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) . For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing Delete operation with provided PutOptions . // We first call PutAsync to create a row and then use its version // for the conditional Delete operation. var putResult = await client.PutAsync(\"myTable\", new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }); // Some time later we delete the row but only if it was not modified // meanwhile (meaning its version has not changed). var deleteResult = await client.DeleteAsync(\"myTable\", new MapValue { [\"id\"] = 1000 }, new DeleteOptions { Timeout = TimeSpan.FromSeconds(10), MatchVersion = getResult.Version, ReturnExisting = true }); Constructors Name Description DeleteOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Durability On-premise only. Gets or sets Durability value to use for the operation. MatchVersion Gets or sets a value that determines whether to perform the Delete operation only if there is an existing row that matches the primary key and its RowVersion matches the value provided. Namespace On-premises only. Gets or sets the optional namespace. ReturnExisting Gets or sets a value that determines whether to return existing row and its RowVersion if the conditional Delete operation fails because of the version mismatch discussed in DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) . Timeout Gets or sets the timeout for the request. See Also DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets or sets a value that determines whether to perform the Delete operation only if there is an existing row that matches the primary key and its RowVersion matches the value provided. Declaration public RowVersion MatchVersion { get; set; } Property Value Type Description RowVersion The value of RowVersion that indicates that the Delete operation should only be performed if there is an existing row matching the primary key and its version matches this value. Remarks You may also use DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) API instead of setting this option."
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.ReturnExisting.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.ReturnExisting.html",
    "title": "Property ReturnExisting | NoSQL SDK for .NET",
    "keywords": "Property ReturnExisting ReturnExisting Gets or sets a value that determines whether to return existing row and its RowVersion if the conditional Delete operation fails because of the version mismatch discussed in DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) . Declaration public bool ReturnExisting { get; set; } Property Value Type Description Boolean true to return existing row and its version if conditional Delete operation fails, otherwise false . The default is false . Remarks If set to true , the existing row and its version will be returned as ExistingRow and ExistingVersion ."
  },
  "api/Oracle.NoSQL.SDK.DeleteOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeContinuationKey.html",
    "title": "Class DeleteRangeContinuationKey | NoSQL SDK for .NET",
    "keywords": "Class DeleteRangeContinuationKey Represents the continuation key for the DeleteRange operation. Inheritance Object DeleteRangeContinuationKey Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteRangeContinuationKey : Object Remarks DeleteRangeContinuationKey is an opaque type returned from DeleteRangeAsync as ContinuationKey when the operation has exceeded the maximum amount of data to be modified and it needs to be continued with subsequent calls to DeleteRangeAsync . For each subsequent call, set ContinuationKey to the value of ContinuationKey returned by the previous call. You do not need to use this type if iterating over GetDeleteRangeAsyncEnumerable . See Also DeleteRangeAsync DeleteRangeResult DeleteRangeOptions"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.ContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.ContinuationKey.html",
    "title": "Property ContinuationKey | NoSQL SDK for .NET",
    "keywords": "Property ContinuationKey ContinuationKey Gets or sets the continuation key for the DeleteRange operation. Declaration public DeleteRangeContinuationKey ContinuationKey { get; set; } Property Value Type Description DeleteRangeContinuationKey The continuation key on subsequent calls to DeleteRangeAsync . Remarks Only for use with DeleteRangeAsync . This property is not needed if using GetDeleteRangeAsyncEnumerable . The continuation key is returned as ContinuationKey from the previous call to DeleteRangeAsync and can be used to continue this operation. Operations with a continuation key still require the primary key. See Also ContinuationKey"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.-ctor.html",
    "title": "Constructor DeleteRangeOptions | NoSQL SDK for .NET",
    "keywords": "Constructor DeleteRangeOptions DeleteRangeOptions() Declaration public DeleteRangeOptions()"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-premise only. Gets or sets Durability value to use for the operation. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for the operation. If not set, defaults to Durability . Remarks Durability determines SyncPolicy for Master and Replicas as well as ReplicaAckPolicy for the Replicas. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.FieldRange.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.FieldRange.html",
    "title": "Property FieldRange | NoSQL SDK for .NET",
    "keywords": "Property FieldRange FieldRange Gets or sets the field range. Declaration public FieldRange FieldRange { get; set; } Property Value Type Description FieldRange The field range. Remarks The field range is based on portion of the primary key that was not provided in the partial primary key. If not set, the operation will delete all rows matching the partial primary key. See Also FieldRange"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.html",
    "title": "Class DeleteRangeOptions | NoSQL SDK for .NET",
    "keywords": "Class DeleteRangeOptions Represents options for the DeleteRange operation. Inheritance Object DeleteRangeOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteRangeOptions : Object Remarks These options are passed to APIs DeleteRangeAsync and GetDeleteRangeAsyncEnumerable . For properties not specified or null , appropriate defaults will be used. Note that if you only need to specify FieldRange , you may use overloads DeleteRangeAsync(String, Object, FieldRange, CancellationToken) and GetDeleteRangeAsyncEnumerable(String, Object, FieldRange, CancellationToken) instead that take FieldRange instead of these options. Examples Executing DeleteRange operation with provided DeleteRangeOptions . var result = await client.DeleteRange( \"myTable\", new MapValue // partial primary key { [\"deptId\"] = 50 }, new DeleteRangeOptions { Timeout = TimeSpan.FromSeconds(20), FieldRange = new FieldRange(\"itemId\") { StartsAfter = 1010, EndsWith = 2000 }); }); Constructors Name Description DeleteRangeOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. ContinuationKey Gets or sets the continuation key for the DeleteRange operation. Durability On-premise only. Gets or sets Durability value to use for the operation. FieldRange Gets or sets the field range. MaxWriteKB Gets or sets the limit on the total KB of data written during the operation. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also DeleteRangeAsync GetDeleteRangeAsyncEnumerable FieldRange DeleteRangeContinuationKey"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.MaxWriteKB.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.MaxWriteKB.html",
    "title": "Property MaxWriteKB | NoSQL SDK for .NET",
    "keywords": "Property MaxWriteKB MaxWriteKB Gets or sets the limit on the total KB of data written during the operation. Declaration public Nullable<int> MaxWriteKB { get; set; } Property Value Type Description Nullable < Int32 > Limit on the total KB write for the operation. If set, must be positive value. If not set, the system defined limit will be used. Remarks This value can only reduce the system defined limit. Either limit may cause the need for continuation of this operation with the continuation key returned by DeleteRangeAsync or via iterating over GetDeleteRangeAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeRequest.FieldRange.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeRequest.FieldRange.html",
    "title": "Property FieldRange | NoSQL SDK for .NET",
    "keywords": "Property FieldRange FieldRange Gets the field range for the DeleteRange operation. Declaration public FieldRange FieldRange { get; } Property Value Type Description FieldRange Value of the field range if provided either as FieldRange or as a parameter to DeleteRangeAsync(String, Object, FieldRange, CancellationToken) , otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeRequest.html",
    "title": "Class DeleteRangeRequest | NoSQL SDK for .NET",
    "keywords": "Class DeleteRangeRequest Represents information about DeleteRange operation performed by DeleteRangeAsync and GetDeleteRangeAsyncEnumerable APIs. Inheritance Object Request RequestWithTable DeleteRangeRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteRangeRequest : RequestWithTable Properties Name Description FieldRange Gets the field range for the DeleteRange operation. Options Gets the options for the DeleteRange operation. PartialPrimaryKey Gets the value of partial primary key for DeleteRange operation. See Also DeleteRangeAsync GetDeleteRangeAsyncEnumerable Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the DeleteRange operation. Declaration public DeleteRangeOptions Options { get; set; } Property Value Type Description DeleteRangeOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeRequest.PartialPrimaryKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeRequest.PartialPrimaryKey.html",
    "title": "Property PartialPrimaryKey | NoSQL SDK for .NET",
    "keywords": "Property PartialPrimaryKey PartialPrimaryKey Gets the value of partial primary key for DeleteRange operation. Declaration public object PartialPrimaryKey { get; } Property Value Type Description Object Partial primary key as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeResult.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeResult.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeResult.ContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeResult.ContinuationKey.html",
    "title": "Property ContinuationKey | NoSQL SDK for .NET",
    "keywords": "Property ContinuationKey ContinuationKey Gets the continuation key. Declaration public DeleteRangeContinuationKey ContinuationKey { get; } Property Value Type Description DeleteRangeContinuationKey The continuation key indicating where the next call to DeleteRangeAsync can resume or null if there are no more rows to delete. Remarks You only need to use this property if using DeleteRangeAsync . It is not needed if using GetDeleteRangeAsyncEnumerable . See Also DeleteRangeContinuationKey"
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeResult.DeletedCount.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeResult.DeletedCount.html",
    "title": "Property DeletedCount | NoSQL SDK for .NET",
    "keywords": "Property DeletedCount DeletedCount Gets the number of rows deleted. Declaration public int DeletedCount { get; } Property Value Type Description Int32 The number of rows deleted."
  },
  "api/Oracle.NoSQL.SDK.DeleteRangeResult.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRangeResult.html",
    "title": "Class DeleteRangeResult | NoSQL SDK for .NET",
    "keywords": "Class DeleteRangeResult Represents the result of the DeleteRange operation. Inheritance Object DeleteRangeResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteRangeResult : Object Remarks This class represents the result of DeleteRangeAsync API and partial results when iterating with GetDeleteRangeAsyncEnumerable . On a successful operation the number of rows deleted is available using DeletedCount . There is a limit to the amount of data consumed by a single request to the server. If there are still more rows to delete, the continuation key will be available as ContinuationKey . Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. ContinuationKey Gets the continuation key. DeletedCount Gets the number of rows deleted."
  },
  "api/Oracle.NoSQL.SDK.DeleteRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRequest-1.html",
    "title": "Class DeleteRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class DeleteRequest<TRow> Represents information about Delete operation performed by DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest DeleteRequest<TRow> DeleteIfVersionRequest<TRow> Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteRequest<TRow> : WriteRequest Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description Options Gets the options for the Delete operation. PrimaryKey Gets the value of the primary key for the Delete operation. See Also DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) Request WriteRequest"
  },
  "api/Oracle.NoSQL.SDK.DeleteRequest-1.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRequest-1.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Delete operation. Declaration public DeleteOptions Options { get; set; } Property Value Type Description DeleteOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.DeleteRequest-1.PrimaryKey.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteRequest-1.PrimaryKey.html",
    "title": "Property PrimaryKey | NoSQL SDK for .NET",
    "keywords": "Property PrimaryKey PrimaryKey Gets the value of the primary key for the Delete operation. Declaration public object PrimaryKey { get; } Property Value Type Description Object The primary key as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingModificationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingModificationTime.html",
    "title": "Property ExistingModificationTime | NoSQL SDK for .NET",
    "keywords": "Property ExistingModificationTime ExistingModificationTime Gets the modification time of existing row if the conditional Delete operation has failed. Declaration public Nullable<DateTime> ExistingModificationTime { get; } Property Value Type Description Nullable < DateTime > The modification time of existing row if available, otherwise null . Remarks This value is available if the conditional Delete operation (as indicated by MatchVersion ) has failed, there is an existing row, ReturnExisting was set to true and the server supports this feature."
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingRow.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingRow.html",
    "title": "Property ExistingRow | NoSQL SDK for .NET",
    "keywords": "Property ExistingRow ExistingRow Gets the value of existing row if the conditional Delete operation has failed. Declaration public TRow ExistingRow { get; } Property Value Type Description TRow Value of existing row if available, otherwise null . Remarks This value is available if the conditional Delete operation (as indicated by MatchVersion ) has failed and ReturnExisting was set to true . See Also MatchVersion DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.ExistingVersion.html",
    "title": "Property ExistingVersion | NoSQL SDK for .NET",
    "keywords": "Property ExistingVersion ExistingVersion Gets the value of RowVersion of existing row if the conditional Delete operation has failed. Declaration public RowVersion ExistingVersion { get; } Property Value Type Description RowVersion Version of existing row if available, otherwise null . Remarks This value is available if the conditional Delete operation (as indicated by MatchVersion ) has failed and ReturnExisting was set to true . See Also MatchVersion DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.html",
    "title": "Class DeleteResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class DeleteResult<TRow> Represents the result of the Delete operation. Inheritance Object DeleteResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeleteResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . Remarks This class is the result of DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) and DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) APIs. Success determines whether the Delete operation was successful. Unconditional Delete will be successful if the row exists. Conditional Delete will be successful if the row exists and its version matches the one provided. If conditional Delete operation fails, ExistingRow and its ExistingVersion may be available if ReturnExisting was set to true . Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. ExistingModificationTime Gets the modification time of existing row if the conditional Delete operation has failed. ExistingRow Gets the value of existing row if the conditional Delete operation has failed. ExistingVersion Gets the value of RowVersion of existing row if the conditional Delete operation has failed. Success Gets a value indicating whether the Delete operation was successful. See Also DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) ConsumedCapacity RowVersion"
  },
  "api/Oracle.NoSQL.SDK.DeleteResult-1.Success.html": {
    "href": "api/Oracle.NoSQL.SDK.DeleteResult-1.Success.html",
    "title": "Property Success | NoSQL SDK for .NET",
    "keywords": "Property Success Success Gets a value indicating whether the Delete operation was successful. Declaration public bool Success { get; } Property Value Type Description Boolean true if the Delete operation was successful, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.DeploymentLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DeploymentLimitException.-ctor.html",
    "title": "Constructor DeploymentLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor DeploymentLimitException DeploymentLimitException() Initializes a new instance of DeploymentLimitException . Declaration public DeploymentLimitException() DeploymentLimitException(String) Initializes a new instance of DeploymentLimitException with the message that describes the current exception. Declaration public DeploymentLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. DeploymentLimitException(String, Exception) Initializes a new instance of DeploymentLimitException with the message that describes the current exception and an inner exception. Declaration public DeploymentLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.DeploymentLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.DeploymentLimitException.html",
    "title": "Class DeploymentLimitException | NoSQL SDK for .NET",
    "keywords": "Class DeploymentLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when supplied table limits exceed the maximum allowed. Inheritance Object NoSQLException DeploymentLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DeploymentLimitException : NoSQLException Remarks This exception is thrown when an attempt has been made to create or modify a table using limits that exceed the maximum allowed for a single table or that cause the tenant's aggregate resources to exceed the maximum allowed for a tenant. These are system-defined limits. Constructors Name Description DeploymentLimitException() Initializes a new instance of DeploymentLimitException . DeploymentLimitException(String) Initializes a new instance of DeploymentLimitException with the message that describes the current exception. DeploymentLimitException(String, Exception) Initializes a new instance of DeploymentLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.AsDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.AsDouble.html",
    "title": "Property AsDouble | NoSQL SDK for .NET",
    "keywords": "Property AsDouble AsDouble Gets the value of this instance as double . Declaration public override double AsDouble { get; } Property Value Type Description Double The double value that this instance represents. Overrides FieldValue.AsDouble"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.-ctor.html",
    "title": "Constructor DoubleValue | NoSQL SDK for .NET",
    "keywords": "Constructor DoubleValue DoubleValue(Double) Initializes a new instance of the DoubleValue with the specified double value. Declaration public DoubleValue(double value) Parameters Type Name Description Double value The value which this instance will represent."
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Double Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.html",
    "title": "Class DoubleValue | NoSQL SDK for .NET",
    "keywords": "Class DoubleValue Represents a double precision floating point value. Inheritance Object FieldValue DoubleValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToDouble() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DoubleValue : FieldValue Remarks This class is used to represent values of NoSQL data types Double and Float . This value is represented by a C# type double . Note that when converted to JSON, instances of DoubleValue that contain special values such as PositiveInfinity , NegativeInfinity and NaN will be represented by strings \"Infinity\", \"-Infinity\" and \"NaN\" respectively and thus cannot be converted back from JSON to instances of DoubleValue . Constructors Name Description DoubleValue(Double) Initializes a new instance of the DoubleValue with the specified double value. Properties Name Description AsDouble Gets the value of this instance as double . DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToDecimal() Converts the value represented by this instance to a decimal number. ToInt32() Converts the value represented by this instance to a 32-bit signed integer. ToInt64() Converts the value represented by this instance to a 64-bit signed integer. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.ToDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.ToDecimal.html",
    "title": "Method ToDecimal | NoSQL SDK for .NET",
    "keywords": "Method ToDecimal ToDecimal() Converts the value represented by this instance to a decimal number. Declaration public override Decimal ToDecimal() Returns Type Description Decimal A decimal number equivalent to the value represented by this instance. Overrides FieldValue.ToDecimal() Remarks This method performs the same conversion as ToDecimal(Double) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToDecimal(Double)"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.ToInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.ToInt32.html",
    "title": "Method ToInt32 | NoSQL SDK for .NET",
    "keywords": "Method ToInt32 ToInt32() Converts the value represented by this instance to a 32-bit signed integer. Declaration public override int ToInt32() Returns Type Description Int32 The value rounded to the nearest 32-bit signed integer. Overrides FieldValue.ToInt32() Remarks This method performs the same conversion as ToInt32(Double) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToInt32(Double)"
  },
  "api/Oracle.NoSQL.SDK.DoubleValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.DoubleValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts the value represented by this instance to a 64-bit signed integer. Declaration public override long ToInt64() Returns Type Description Int64 The value rounded to the nearest 64-bit signed integer. Overrides FieldValue.ToInt64() Remarks This method performs the same conversion as ToInt64(Double) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToInt64(Double)"
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.-ctor.html",
    "title": "Constructor DropReplicaOptions | NoSQL SDK for .NET",
    "keywords": "Constructor DropReplicaOptions DropReplicaOptions() Declaration public DropReplicaOptions()"
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.html",
    "title": "Class DropReplicaOptions | NoSQL SDK for .NET",
    "keywords": "Class DropReplicaOptions Cloud Service only. Represents options passed to DropReplicaAsync and DropReplicaWithCompletionAsync APIs. Inheritance Object DropReplicaOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DropReplicaOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description DropReplicaOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Timeout Gets or sets the timeout for the operation. See Also DropReplicaAsync DropReplicaWithCompletionAsync"
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.MatchETag.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.MatchETag.html",
    "title": "Property MatchETag | NoSQL SDK for .NET",
    "keywords": "Property MatchETag MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. Declaration public string MatchETag { get; set; } Property Value Type Description String The value of the entity tag for the table. Remarks The ETag is an opaque value that represents the current version of the table itself and can be used in table modification operations to only perform them if the ETag for the table has not changed. This is an optimistic concurrency control mechanism allowing an application to ensure no unexpected modifications have been made to the table. The value of the ETag must be the value returned in a previous TableResult . If set for on-premises service, the ETag is silently ignored. See Also ETag"
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.PollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.PollDelay.html",
    "title": "Property PollDelay | NoSQL SDK for .NET",
    "keywords": "Property PollDelay PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Declaration public Nullable<TimeSpan> PollDelay { get; set; } Property Value Type Description Nullable < TimeSpan > Poll delay. If set, must be a positive value and not greater than the timeout. Remarks Applies only to DropReplicaWithCompletionAsync method. Defaults to TablePollDelay ."
  },
  "api/Oracle.NoSQL.SDK.DropReplicaOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the operation. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Operation timeout. If set, must be a positive value. Remarks For DropReplicaAsync it defaults to TableDDLTimeout . For DropReplicaWithCompletionAsync separate default timeouts are used for issuing the operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.DropReplicaRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaRequest.html",
    "title": "Class DropReplicaRequest | NoSQL SDK for .NET",
    "keywords": "Class DropReplicaRequest Represents information about operation performed by DropReplicaAsync and DropReplicaWithCompletionAsync APIs. Inheritance Object Request RequestWithTable TableOperationRequest DropReplicaRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class DropReplicaRequest : TableOperationRequest Properties Name Description Options Gets the options for DropReplicaAsync or DropReplicaWithCompletionAsync operation. RegionId Gets the region id for the operation if it was provided to DropReplicaAsync or DropReplicaWithCompletionAsync . See Also DropReplicaAsync DropReplicaWithCompletionAsync Request TableOperationRequest"
  },
  "api/Oracle.NoSQL.SDK.DropReplicaRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for DropReplicaAsync or DropReplicaWithCompletionAsync operation. Declaration public DropReplicaOptions Options { get; } Property Value Type Description DropReplicaOptions The options, or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.DropReplicaRequest.RegionId.html": {
    "href": "api/Oracle.NoSQL.SDK.DropReplicaRequest.RegionId.html",
    "title": "Property RegionId | NoSQL SDK for .NET",
    "keywords": "Property RegionId RegionId Gets the region id for the operation if it was provided to DropReplicaAsync or DropReplicaWithCompletionAsync . Declaration public string RegionId { get; } Property Value Type Description String The region id if it was provided, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.Durability.CommitNoSync.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.CommitNoSync.html",
    "title": "Field CommitNoSync | NoSQL SDK for .NET",
    "keywords": "Field CommitNoSync Represents a durability policy with NoSync for Master commit synchronization. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Durability CommitNoSync Returns Type Description Durability Remarks This policy specifies NoSync for commits of replicated transactions that need acknowledgment and SimpleMajority for the acknowledgment policy."
  },
  "api/Oracle.NoSQL.SDK.Durability.CommitSync.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.CommitSync.html",
    "title": "Field CommitSync | NoSQL SDK for .NET",
    "keywords": "Field CommitSync Represents a durability policy with Sync for Master commit synchronization. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Durability CommitSync Returns Type Description Durability Remarks This policy specifies NoSync for commits of replicated transactions that need acknowledgment and SimpleMajority for the acknowledgment policy."
  },
  "api/Oracle.NoSQL.SDK.Durability.CommitWriteNoSync.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.CommitWriteNoSync.html",
    "title": "Field CommitWriteNoSync | NoSQL SDK for .NET",
    "keywords": "Field CommitWriteNoSync Represents a durability policy with WriteNoSync for Master commit synchronization. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Durability CommitWriteNoSync Returns Type Description Durability Remarks This policy specifies NoSync for commits of replicated transactions that need acknowledgment and SimpleMajority for the acknowledgment policy."
  },
  "api/Oracle.NoSQL.SDK.Durability.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.-ctor.html",
    "title": "Constructor Durability | NoSQL SDK for .NET",
    "keywords": "Constructor Durability Durability(SyncPolicy, SyncPolicy, ReplicaAckPolicy) Initializes a new instance of Durability structure using specified Master and Replica sync policies and Replica acknowledgement policy. Declaration public Durability(SyncPolicy masterSync, SyncPolicy replicaSync, ReplicaAckPolicy replicaAck) Parameters Type Name Description SyncPolicy masterSync The SyncPolicy to be used when committing the transaction on the master node. SyncPolicy replicaSync The SyncPolicy to be used remotely, as part of a transaction acknowledgment at a Replica node. ReplicaAckPolicy replicaAck The acknowledgment policy used when obtaining transaction acknowledgments from Replicas."
  },
  "api/Oracle.NoSQL.SDK.Durability.Equals.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.Equals.html",
    "title": "Method Equals | NoSQL SDK for .NET",
    "keywords": "Method Equals Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Equals(Durability) Returns a value indicating whether the value of this instance is equal to the value of the specified Durability instance. Declaration public bool Equals(Durability value) Parameters Type Name Description Durability value The value to compare to this instance. Returns Type Description Boolean true if the value equals the value of this instance, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.Durability.GetHashCode.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.GetHashCode.html",
    "title": "Method GetHashCode | NoSQL SDK for .NET",
    "keywords": "Method GetHashCode GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.html",
    "title": "Class Durability | NoSQL SDK for .NET",
    "keywords": "Class Durability On-Premise only. Durability specifies the master and replica sync and ack policies to be used for a write operation. Inheritance Object Durability Implements IEquatable < Durability > Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class Durability : ValueType Remarks Durability applies to Put operations, executed by PutAsync(String, MapValue, PutOptions, CancellationToken) and its variants, Delete operations, executed by DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) and its variants, DeleteRange operations executed by DeleteRangeAsync and its variants, WriteMany operations executed by WriteManyAsync and its variants and Query operations executed by QueryAsync and its variants for update queries. Constructors Name Description Durability(SyncPolicy, SyncPolicy, ReplicaAckPolicy) Initializes a new instance of Durability structure using specified Master and Replica sync policies and Replica acknowledgement policy. Fields Name Description CommitNoSync Represents a durability policy with NoSync for Master commit synchronization. CommitSync Represents a durability policy with Sync for Master commit synchronization. CommitWriteNoSync Represents a durability policy with WriteNoSync for Master commit synchronization. Properties Name Description MasterSync Gets the transaction synchronization policy to be used on the Master node when committing a transaction. ReplicaAck Gets the replica acknowledgment policy used by the master when committing changes to a replicated environment. ReplicaSync Gets the transaction synchronization policy to be used by the Replica node as it replays a transaction that needs an acknowledgment. Methods Name Description Equals(Durability) Returns a value indicating whether the value of this instance is equal to the value of the specified Durability instance. Equals(Object) GetHashCode() Operators Name Description Equality(Durability, Durability) Determines whether two instances of Durability are equal. Inequality(Durability, Durability) Determines whether two instances of Durability are not equal. See Also Durability Durability Durability Durability Durability"
  },
  "api/Oracle.NoSQL.SDK.Durability.MasterSync.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.MasterSync.html",
    "title": "Property MasterSync | NoSQL SDK for .NET",
    "keywords": "Property MasterSync MasterSync Gets the transaction synchronization policy to be used on the Master node when committing a transaction. Declaration public SyncPolicy MasterSync { get; } Property Value Type Description SyncPolicy The master transaction synchronization policy."
  },
  "api/Oracle.NoSQL.SDK.Durability.op_Equality.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.op_Equality.html",
    "title": "Operator Equality | NoSQL SDK for .NET",
    "keywords": "Operator Equality Equality(Durability, Durability) Determines whether two instances of Durability are equal. Declaration public static bool operator ==(Durability d1, Durability d2) Parameters Type Name Description Durability d1 First value to compare. Durability d2 Second value to compare. Returns Type Description Boolean true if the values are equal, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.Durability.op_Inequality.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.op_Inequality.html",
    "title": "Operator Inequality | NoSQL SDK for .NET",
    "keywords": "Operator Inequality Inequality(Durability, Durability) Determines whether two instances of Durability are not equal. Declaration public static bool operator !=(Durability d1, Durability d2) Parameters Type Name Description Durability d1 First value to compare. Durability d2 Second value to compare. Returns Type Description Boolean true if the values are not equal, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.Durability.ReplicaAck.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.ReplicaAck.html",
    "title": "Property ReplicaAck | NoSQL SDK for .NET",
    "keywords": "Property ReplicaAck ReplicaAck Gets the replica acknowledgment policy used by the master when committing changes to a replicated environment. Declaration public ReplicaAckPolicy ReplicaAck { get; } Property Value Type Description ReplicaAckPolicy The replica acknowledgment policy."
  },
  "api/Oracle.NoSQL.SDK.Durability.ReplicaSync.html": {
    "href": "api/Oracle.NoSQL.SDK.Durability.ReplicaSync.html",
    "title": "Property ReplicaSync | NoSQL SDK for .NET",
    "keywords": "Property ReplicaSync ReplicaSync Gets the transaction synchronization policy to be used by the Replica node as it replays a transaction that needs an acknowledgment. Declaration public SyncPolicy ReplicaSync { get; } Property Value Type Description SyncPolicy The replica transaction synchronization policy."
  },
  "api/Oracle.NoSQL.SDK.ETagMismatchException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ETagMismatchException.-ctor.html",
    "title": "Constructor ETagMismatchException | NoSQL SDK for .NET",
    "keywords": "Constructor ETagMismatchException ETagMismatchException() Initializes a new instance of ETagMismatchException . Declaration public ETagMismatchException() ETagMismatchException(String) Initializes a new instance of ETagMismatchException with the message that describes the current exception. Declaration public ETagMismatchException(string message) Parameters Type Name Description String message A message that describes the current exception. ETagMismatchException(String, Exception) Initializes a new instance of ETagMismatchException with the message that describes the current exception and an inner exception. Declaration public ETagMismatchException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ETagMismatchException.html": {
    "href": "api/Oracle.NoSQL.SDK.ETagMismatchException.html",
    "title": "Class ETagMismatchException | NoSQL SDK for .NET",
    "keywords": "Class ETagMismatchException Cloud Service only. The exception that is thrown by table DDL and add/drop replica operations that indicates that MatchETag provided for the operation does not match the current ETag of the table. Inheritance Object NoSQLException ETagMismatchException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ETagMismatchException : NoSQLException Remarks This condition usually means that the table has been changed after the provided ETag was obtained. Constructors Name Description ETagMismatchException() Initializes a new instance of ETagMismatchException . ETagMismatchException(String) Initializes a new instance of ETagMismatchException with the message that describes the current exception. ETagMismatchException(String, Exception) Initializes a new instance of ETagMismatchException with the message that describes the current exception and an inner exception. See Also MatchETag"
  },
  "api/Oracle.NoSQL.SDK.EvolutionLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.EvolutionLimitException.-ctor.html",
    "title": "Constructor EvolutionLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor EvolutionLimitException EvolutionLimitException() Initializes a new instance of EvolutionLimitException . Declaration public EvolutionLimitException() EvolutionLimitException(String) Initializes a new instance of EvolutionLimitException with the message that describes the current exception. Declaration public EvolutionLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. EvolutionLimitException(String, Exception) Initializes a new instance of EvolutionLimitException with the message that describes the current exception and an inner exception. Declaration public EvolutionLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.EvolutionLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.EvolutionLimitException.html",
    "title": "Class EvolutionLimitException | NoSQL SDK for .NET",
    "keywords": "Class EvolutionLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to evolve the schema of a table more times than allowed by the system defined limit. Inheritance Object NoSQLException EvolutionLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class EvolutionLimitException : NoSQLException Constructors Name Description EvolutionLimitException() Initializes a new instance of EvolutionLimitException . EvolutionLimitException(String) Initializes a new instance of EvolutionLimitException with the message that describes the current exception. EvolutionLimitException(String, Exception) Initializes a new instance of EvolutionLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.-ctor.html",
    "title": "Constructor FieldRange | NoSQL SDK for .NET",
    "keywords": "Constructor FieldRange FieldRange(String) Initializes new instance of if FieldRange class. Declaration public FieldRange(string fieldName = null) Parameters Type Name Description String fieldName (Optional) The field name. If not specified here, it must be set via FieldName property."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.EndsBefore.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.EndsBefore.html",
    "title": "Property EndsBefore | NoSQL SDK for .NET",
    "keywords": "Property EndsBefore EndsBefore Gets or sets the exclusive value for the upper bound of the field range. Declaration public FieldValue EndsBefore { get; set; } Property Value Type Description FieldValue Exclusive value for the upper bound. Returns null if the upper bound is not set or the upper bound is inclusive. Remarks This property is exclusive with EndsWith in that only one of these properties may be set."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.EndsWith.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.EndsWith.html",
    "title": "Property EndsWith | NoSQL SDK for .NET",
    "keywords": "Property EndsWith EndsWith Gets or sets the inclusive value for the upper bound of the field range. Declaration public FieldValue EndsWith { get; set; } Property Value Type Description FieldValue Inclusive value for the upper bound. Returns null if the upper bound is not set or the upper bound is exclusive. Remarks This property is exclusive with EndsBefore in that only one of these properties may be set."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.EndValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.EndValue.html",
    "title": "Property EndValue | NoSQL SDK for .NET",
    "keywords": "Property EndValue EndValue Gets the value for the upper bound of the field range. Declaration public FieldValue EndValue { get; } Property Value Type Description FieldValue Value for the upper bound of the field range or null if no upper bound is enforced."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.FieldName.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.FieldName.html",
    "title": "Property FieldName | NoSQL SDK for .NET",
    "keywords": "Property FieldName FieldName Gets or sets the field name for the field range. Declaration public string FieldName { get; set; } Property Value Type Description String The name of the field. This value is required."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.html",
    "title": "Class FieldRange | NoSQL SDK for .NET",
    "keywords": "Class FieldRange Defines a range of values to be used in a DeleteRange operation. Inheritance Object FieldRange Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class FieldRange : Object Remarks This class defines a range of values to be used in a DeleteRange operation, as specified in FieldRange for that operation. It is used by DeleteRangeAsync and GetDeleteRangeAsyncEnumerable APIs. FieldRange is used as the least significant component in a partially specified key value in order to create a value range for an operation that returns multiple rows or keys. The data types supported by FieldRange are limited to the atomic types which are valid for primary keys. The least significant component of a key is the first component of the key that is not fully specified. For example, if the primary key for a table is defined as the tuple <a, b, c> a FieldRange can be specified for a if the primary key supplied is empty. A FieldRange can be specified for b if the primary key supplied to the operation has a concrete value for a but not for b or c . This object is used to scope a DeleteRange operation. The field name specified must name a field in a table's primary key. The values used must be of the same type and that type must match the type of the field specified. You may specify the FieldValue for lower bound, upper bound or both. Each bound may be either inclusive, meaning the range starts with (for lower bound) or ends with (for upper bound) with this value, or exclusive, meaning the range starts after (for lower bound) or ends before (for upper bound) this value. Properties StartsWith and EndsWith specify inclusive bounds. Properties StartsAfter and EndsBefore specify exclusive bounds. Note that for each end of the range you may specify either inclusive or exclusive bound, but not both. Validation of the FieldValue object is performed when it is used in an operation. Validation includes verifying that the field is in the required key and, in the case of a composite key, that the field is in the proper order relative to the key used in the operation. Examples Instantiating FieldRange with TIMESTAMP value and only upper end of the range. var fieldRange = new FieldRange(\"deliveryDate\") { EndsBefore = DateTime.UtcNow - TimeSpan.FromDays(10) }; Constructors Name Description FieldRange(String) Initializes new instance of if FieldRange class. Properties Name Description EndsBefore Gets or sets the exclusive value for the upper bound of the field range. EndsWith Gets or sets the inclusive value for the upper bound of the field range. EndValue Gets the value for the upper bound of the field range. FieldName Gets or sets the field name for the field range. IsEndInclusive Gets the value indicating whether the upper bound of the field range is inclusive. IsStartInclusive Gets the value indicating whether the lower bound of the field range is inclusive. StartsAfter Gets or sets the exclusive value for the lower bound of the field range. StartsWith Gets or sets the inclusive value for the lower bound of the field range. StartValue Gets the value for the lower bound of the field range. See Also DeleteRangeOptions DeleteRangeAsync"
  },
  "api/Oracle.NoSQL.SDK.FieldRange.IsEndInclusive.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.IsEndInclusive.html",
    "title": "Property IsEndInclusive | NoSQL SDK for .NET",
    "keywords": "Property IsEndInclusive IsEndInclusive Gets the value indicating whether the upper bound of the field range is inclusive. Declaration public bool IsEndInclusive { get; } Property Value Type Description Boolean true if the upper bound is inclusive, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.IsStartInclusive.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.IsStartInclusive.html",
    "title": "Property IsStartInclusive | NoSQL SDK for .NET",
    "keywords": "Property IsStartInclusive IsStartInclusive Gets the value indicating whether the lower bound of the field range is inclusive. Declaration public bool IsStartInclusive { get; } Property Value Type Description Boolean true if the lower bound is inclusive, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.StartsAfter.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.StartsAfter.html",
    "title": "Property StartsAfter | NoSQL SDK for .NET",
    "keywords": "Property StartsAfter StartsAfter Gets or sets the exclusive value for the lower bound of the field range. Declaration public FieldValue StartsAfter { get; set; } Property Value Type Description FieldValue Exclusive value for the lower bound. Returns null if the lower bound is not set or the lower bound is inclusive. Remarks This property is exclusive with StartsWith in that only one of these properties may be set."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.StartsWith.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.StartsWith.html",
    "title": "Property StartsWith | NoSQL SDK for .NET",
    "keywords": "Property StartsWith StartsWith Gets or sets the inclusive value for the lower bound of the field range. Declaration public FieldValue StartsWith { get; set; } Property Value Type Description FieldValue Inclusive value for the lower bound. Returns null if the lower bound is not set or the lower bound is exclusive. Remarks This property is exclusive with StartsAfter in that only one of these properties may be set."
  },
  "api/Oracle.NoSQL.SDK.FieldRange.StartValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldRange.StartValue.html",
    "title": "Property StartValue | NoSQL SDK for .NET",
    "keywords": "Property StartValue StartValue Gets the value for the lower bound of the field range. Declaration public FieldValue StartValue { get; } Property Value Type Description FieldValue Value for the lower bound of the field range or null if no lower bound is enforced."
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsArrayValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsArrayValue.html",
    "title": "Property AsArrayValue | NoSQL SDK for .NET",
    "keywords": "Property AsArrayValue AsArrayValue Gets the value of this instance as ArrayValue . Declaration public virtual ArrayValue AsArrayValue { get; } Property Value Type Description ArrayValue ArrayValue instance. Remarks This is a convenience cast. Valid only if this instance is ArrayValue . Exceptions Type Condition InvalidCastException If this instance is not ArrayValue . See Also ArrayValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsBoolean.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsBoolean.html",
    "title": "Property AsBoolean | NoSQL SDK for .NET",
    "keywords": "Property AsBoolean AsBoolean Gets the value of this instance as boolean. Declaration public virtual bool AsBoolean { get; } Property Value Type Description Boolean bool value of this instance. Remarks Valid only if this instance is BooleanValue . Exceptions Type Condition InvalidCastException If this instance is not BooleanValue . See Also BooleanValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsByteArray.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsByteArray.html",
    "title": "Property AsByteArray | NoSQL SDK for .NET",
    "keywords": "Property AsByteArray AsByteArray Gets the value of this instance as byte array. Declaration public virtual byte[] AsByteArray { get; } Property Value Type Description Byte [] byte[] value of this instance. Remarks Valid only if this instance is BinaryValue . Exceptions Type Condition InvalidCastException If this instance is not BinaryValue . See Also BinaryValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsDateTime.html",
    "title": "Property AsDateTime | NoSQL SDK for .NET",
    "keywords": "Property AsDateTime AsDateTime Gets the value of this instance as date and time. Declaration public virtual DateTime AsDateTime { get; } Property Value Type Description DateTime DateTime value. Remarks Valid only if this instance is TimestampValue . Exceptions Type Condition InvalidCastException If this instance is not TimestampValue . See Also TimestampValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsDecimal.html",
    "title": "Property AsDecimal | NoSQL SDK for .NET",
    "keywords": "Property AsDecimal AsDecimal Gets the value of this instance as decimal number. Declaration public virtual Decimal AsDecimal { get; } Property Value Type Description Decimal decimal value. Remarks Valid only if this instance is NumberValue . Exceptions Type Condition InvalidCastException If this instance is not NumberValue . See Also NumberValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsDouble.html",
    "title": "Property AsDouble | NoSQL SDK for .NET",
    "keywords": "Property AsDouble AsDouble Gets the value of this instance as double precision floating point number. Declaration public virtual double AsDouble { get; } Property Value Type Description Double double value of this instance. Remarks Valid only if this instance is DoubleValue . Exceptions Type Condition InvalidCastException If this instance is not DoubleValue . See Also DoubleValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsInt32.html",
    "title": "Property AsInt32 | NoSQL SDK for .NET",
    "keywords": "Property AsInt32 AsInt32 Gets the value of this instance as 32-bit signed integer. Declaration public virtual int AsInt32 { get; } Property Value Type Description Int32 int value of this instance. Remarks Valid only if this instance is IntegerValue . Exceptions Type Condition InvalidCastException If this instance is not IntegerValue . See Also IntegerValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsInt64.html",
    "title": "Property AsInt64 | NoSQL SDK for .NET",
    "keywords": "Property AsInt64 AsInt64 Gets the value of this instance as 64-bit signed integer. Declaration public virtual long AsInt64 { get; } Property Value Type Description Int64 long value of this instance. Remarks Valid only if this instance is LongValue . Exceptions Type Condition InvalidCastException If this instance is not LongValue . See Also LongValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsMapValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsMapValue.html",
    "title": "Property AsMapValue | NoSQL SDK for .NET",
    "keywords": "Property AsMapValue AsMapValue Gets the value of this instance as MapValue . Declaration public virtual MapValue AsMapValue { get; } Property Value Type Description MapValue MapValue instance. Remarks This is a convenience cast. Valid only if this instance is MapValue or RecordValue . Exceptions Type Condition InvalidCastException If this instance is not MapValue . See Also MapValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsRecordValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsRecordValue.html",
    "title": "Property AsRecordValue | NoSQL SDK for .NET",
    "keywords": "Property AsRecordValue AsRecordValue Gets the value of this instance as RecordValue . Declaration public virtual RecordValue AsRecordValue { get; } Property Value Type Description RecordValue RecordValue instance. Remarks This is a convenience cast. Valid only if this instance is RecordValue . Exceptions Type Condition InvalidCastException If this instance is not RecordValue . See Also RecordValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.AsString.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.AsString.html",
    "title": "Property AsString | NoSQL SDK for .NET",
    "keywords": "Property AsString AsString Gets the value of this instance as string. Declaration public virtual string AsString { get; } Property Value Type Description String string value of this instance. Remarks Valid only if this instance is StringValue . Exceptions Type Condition InvalidCastException If this instance is not StringValue . See Also StringValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.CompareTo.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.CompareTo.html",
    "title": "Method CompareTo | NoSQL SDK for .NET",
    "keywords": "Method CompareTo CompareTo(FieldValue) Compares this instance to the specified FieldValue instance and returns and returns an integer that indicates whether this instance is less than, the same as, or greater than the specified FieldValue instance. Declaration public int CompareTo(FieldValue other) Parameters Type Name Description FieldValue other The value to compare with this instance. Returns Type Description Int32 An integer indicating whether this value is less than, same as or greater than other . Value Description Less than zero This instance is less than other Zero This instance equals other Greater than zero This instance is greater than other Remarks The comparison semantics roughly follows the one described in section Value Comparison Operators in the SQL Reference Guide. The following comparisons are allowed: A numeric FieldValue instance is comparable with any other numeric FieldValue instance. When comparing numeric instances of different types, the value of the \"smaller\" type is converted to the value of the \"larger\" type in the rough order of int , long , double , decimal (although comparison of double and decimal values is treated specially given that decimal has higher precision but smaller range than double ). A StringValue instance is comparable to another StringValue instance. The strings are compared using Ordinal mode as in string.Compare(value1, value2, StringComparison.Ordinal) . A BooleanValue instance is comparable to another BooleanValue instance with values being compared via CompareTo(Boolean) . A TimestampValue instance is comparable to another TimestampValue instance with values being compared via CompareTo(DateTime) . All other comparisons are disallowed and will throw NotSupportedException . Exceptions Type Condition ArgumentNullException other is null . NotSupportedException Comparison between this instance and other is not supported. See Also Equals ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.Count.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.Count.html",
    "title": "Property Count | NoSQL SDK for .NET",
    "keywords": "Property Count Count Gets the number of elements in the collection. Declaration public virtual int Count { get; } Property Value Type Description Int32 Number of elements in the collection. Remarks This property is valid only for instances of ArrayValue , MapValue and RecordValue . Exceptions Type Condition NotSupportedException If this instance is not ArrayValue , MapValue or RecordValue . See Also Count Count"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.-ctor.html",
    "title": "Constructor FieldValue | NoSQL SDK for .NET",
    "keywords": "Constructor FieldValue FieldValue() Declaration protected FieldValue()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public abstract DbType DbType { get; } Property Value Type Description DbType The type of the FieldValue instance."
  },
  "api/Oracle.NoSQL.SDK.FieldValue.DeserializeFromJson.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.DeserializeFromJson.html",
    "title": "Method DeserializeFromJson | NoSQL SDK for .NET",
    "keywords": "Method DeserializeFromJson DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) Creates FieldValue instance from JSON data represented by Utf8JsonReader . Declaration public static FieldValue DeserializeFromJson(ref Utf8JsonReader reader, JsonInputOptions options = null) Parameters Type Name Description Utf8JsonReader reader The reader from which the value is read. JsonInputOptions options (Optional) Options that allow limited customization of the deserialization process. If not specified or null , appropriate defaults will be used as described in JsonInputOptions . Returns Type Description FieldValue FieldValue instance representing JSON data read. Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use FromJsonString(String, JsonInputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method read the value from the current position of represented by Utf8JsonReader . The state of Utf8JsonReader should be managed by the caller. Exceptions Type Condition ArgumentException options has invalid values. JsonException reader has invalid JSON data. See Also Utf8JsonReader JsonInputOptions"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.Equals.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.Equals.html",
    "title": "Method Equals | NoSQL SDK for .NET",
    "keywords": "Method Equals Equals(FieldValue) Returns a value indicating whether the value of this instance is equal to the value of the specified FieldValue instance. Declaration public virtual bool Equals(FieldValue other) Parameters Type Name Description FieldValue other The value to compare with this instance for equality. Returns Type Description Boolean true if other is not null and the value of this instance is equal to other according to the defined rules, otherwise false . Remarks The equality comparison semantics roughly follows the one described in section Value Comparison Operators in the SQL Reference Guide. All comparisons supported by CompareTo(FieldValue) are also supported as equality comparisons. In addition to these, the following comparisons are also supported: An instance of BinaryValue is comparable with another instance of BinaryValue for equality. They are equal if their byte array values are the same length and are equal byte-per-byte. Singleton instance of NullValue is equal to itself and not equal to instance of any other type. Same goes for singleton instance of JsonNullValue . An instance of ArrayValue is comparable with another instance of ArrayValue for equality. They are equal if the two arrays are the same length and the elements of the two arrays are equal pair-wise, with equality of elements defined in recursive fashion. An instance of MapValue is comparable with another instance of MapValue for equality. They are equal if the two dictionaries have the same size and contain equal keys and values, that is for each key in the first dictionary there must exist the same key in the second map with the value equal to the corresponding value in the first map, with equality of the values defined in recursive fashion. An instance of RecordValue is comparable with another instance of RecordValue for equality. They are equal if the two ordered dictionaries have the same size and for each position their keys and values are equal pair-wise, with equality of values defined in recursive fashion. Other than the cases listed above and in CompareTo(FieldValue) the values are not comparable for equality and this method returns false . See Also CompareTo ( FieldValue ) Equals(Object) Returns a value indicating whether this instance is equal to a specified object. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The object to compare to this instance. Returns Type Description Boolean true if obj is an instance of FieldValue and equals to this instance according to the rules of Equals(FieldValue) , otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.FieldValue.FromJsonString.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.FromJsonString.html",
    "title": "Method FromJsonString | NoSQL SDK for .NET",
    "keywords": "Method FromJsonString FromJsonString(String, JsonInputOptions) Creates FieldValue instance from JSON string. Declaration public static FieldValue FromJsonString(string json, JsonInputOptions options = null) Parameters Type Name Description String json JSON string JsonInputOptions options (Optional) Options that allow limited customization of the deserialization process. If not specified or null , appropriate defaults will be used as described in JsonInputOptions . Returns Type Description FieldValue FieldValue instance representing JSON data read. Remarks See sections JSON Mappings and JSON Conversions in the remarks section of FieldValue on details of how different data types and subclasses of FieldValue are represented in JSON. Exceptions Type Condition ArgumentException options has invalid values. JsonParseException json has invalid JSON data. See Also JsonInputOptions"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.GetHashCode.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.GetHashCode.html",
    "title": "Method GetHashCode | NoSQL SDK for .NET",
    "keywords": "Method GetHashCode GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A 32-bit signed integer hash code. Remarks If two instances of FieldValue are equal according to the equality comparison by Equals(FieldValue) the hash codes will be identical. The implementation is aimed for non-equal instances to return different hash codes, however this is not guaranteed and for two non-equal instances this method may return the same hash code."
  },
  "api/Oracle.NoSQL.SDK.FieldValue.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.html",
    "title": "Class FieldValue | NoSQL SDK for .NET",
    "keywords": "Class FieldValue FieldValue is the base class for all data items in Oracle NoSQL Database. Inheritance Object FieldValue ArrayValue BinaryValue BooleanValue DoubleValue IntegerValue JsonNullValue LongValue MapValue NullValue NumberValue StringValue TimestampValue Implements IComparable < FieldValue > IEquatable < FieldValue > Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class FieldValue : Object Remarks Each data item is an instance of FieldValue and is used to represent and manipulate data in Oracle NoSQL Database. FieldValue instances are typed and different data types are represented by different subclasses of FieldValue . The type system used here aims to represent all Oracle NoSQL Database data types as well as values of table rows and primary/index keys, although important considerations apply: A table is defined using a fixed schema that describes the data that the table will hold. The instances of FieldValue do not have access to the table schema and thus allow constructing values of fields or table rows that do not conform to the given table schema. This means the applications must be written knowing the schema. During operations that take data (such as PutAsync(String, MapValue, PutOptions, CancellationToken) ), the constructed FieldValue instance is validated against the table schema and if it does not conform the exception is thrown. This validation is not done by the driver, but by the service where the operation is performed. This applies both to the table row as a whole as well as individual fields, as many of Oracle NoSQL data types also specify a schema (e.g. the type of values in an Array field, a sequence of field names and their types in a Record field, a set of values for Enum field, precision of Fixed Binary field, etc.) and FieldValue instances themselves are not aware of that schema. For operations that return field value instances (such as GetAsync(String, MapValue, GetOptions, CancellationToken) and QueryAsync the returned FieldValue instances always conform to a table schema, or to the shape implied by a query projection. Data Type Mappings The following describes the mappings between Oracle NoSQL Database types and corresponding subclasses of FieldValue : Database Type Class Array ArrayValue Binary BinaryValue Boolean BooleanValue Double DoubleValue Enum StringValue Fixed Binary BinaryValue Float DoubleValue Integer IntegerValue Long LongValue Number NumberValue Map MapValue Record RecordValue String StringValue Timestamp TimestampValue Please note that the above does not represent one-to-one mapping between database types and subclasses of FieldValue . Applications need to be aware of the table schema and ensure that on input the values represented fit into corresponding table field. In particular: Both data types Double and Float are represented by DoubleValue . Both data types Binary and Fixed Binary are represented by BinaryValue . Both data types String and Enum are represented by StringValue . When using the Enum data type, make sure the value is one of the values defined for the enumeration. On input (for operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) ), a Base64 encoded string is also accepted for fields of data types Binary and Fixed Binary . Table rows and primary keys Both MapValue and RecordValue classes represent a dictionary with string keys and values of type FieldValue (which can be any of its subclasses). Thus they represent a collection of database field name-value pairs. MapValue represents the dictionary with unordered keys, whereas RecordValue represents an order-preserving dictionary, with the keys preserving the same order in which they were added to the dictionary and thus using the same order when the dictionary is iterated over. Note that RecordValue is a subclass of MapValue thus any RecordValue instance is also an instance of MapValue . Table rows are ordered collections of field values and thus are represented by RecordValue class. Any table rows returned by the driver, such as from operations GetAsync(String, MapValue, GetOptions, CancellationToken) , QueryAsync , etc. are represented by instances of RecordValue . However, on input, when providing table rows to operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) and WriteManyAsync the field ordering is not required, so you may use either MapValue or RecordValue to provide table rows. Primary key values are only used as input to operations such as GetAsync(String, MapValue, GetOptions, CancellationToken) , thus they do not require field order and can also be represented as either MapValue or RecordValue . Note that the ordered dictionary is more memory and computation expensive then unordered one and thus MapValue is preferred whenever the field ordering is not required. In addition to representing table rows and primary keys, these classes also represent data types Map , Record as well as Json objects. Special values Two of the FieldValue subclasses represent special values used in Oracle NoSQL Database: NullValue represents SQL NULL which indicates that value is unknown or inapplicable. JsonNullValue represents JSON NULL which indicates null value inside field of type Json . Both of these classes are singletons and each represents a single immutable value defined as Null and JsonNull correspondingly. You may use comparisons like value == FieldValue.Null or value == FiledValue.JsonNull or check by the field value type as value.DbType == DbType.Null or value.DbType == DbType.JsonNull . JSON Mappings Oracle NoSQL Database supports fields of data type Json which can represent any valid JSON value. JSON values may be either atomic or complex and can be represented by instances of FieldValue . There are well-defined mappings mappings between JSON types and FieldValue subclasses. Because the data model supported by FieldValue is richer than JSON it is necessary to define potentially ambiguous mappings as well as provide the ability to affect mappings that are flexible. The following table defines the mappings from JSON types to FieldValue subclasses: JSON Type Class Array ArrayValue Boolean BooleanValue Number One of IntegerValue , LongValue , DoubleValue , NumberValue . Object MapValue String StringValue Null JsonNullValue Note that JSON only has a single numeric type Number , but there are several numeric types supported in Oracle NoSQL Database. On input (for operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) ) you may use any of the numeric FieldValue subclasses as listed above for JSON numeric values. For values returned from the database (such as by operations GetAsync(String, MapValue, GetOptions, CancellationToken) and QueryAsync ) the driver will use the most appropriate class among IntegerValue , LongValue , DoubleValue , NumberValue . If the number can be represented as signed 32 bit integer, IntegerValue will be used. If not, but the number can be represented as signed 64-bit integer, LongValue will be used. Floating point numbers are mapped to DoubleValue if the number can be represented as double precision floating point. Otherwise, NumberValue will be used. Note that currently there are some limitations on values NumberValue can represent, see NumberValue for more info. Corresponding language types Each subclass of FieldValue representing atomic data type uses corresponding C# type representing its value as follows: Class C# Type BinaryValue byte[] BooleanValue bool DoubleValue double IntegerValue int LongValue long NumberValue decimal StringValue string TimestampValue DateTime Note that the TimestampValue instances always represent date and time in universal time (the Kind property value of DateTime is always Utc ). The casts between corresponding FieldValue instances and their C# types will always succeed as described below. . There are no corresponding C# types for special values such as NullValue or JsonNullValue or complex values such as ArrayValue , MapValue and RecordValue although you can access atomic parts of the complex value via indexers as described below. FieldValue conversions. In order to facilitate creation and using of FieldValue instances by an application, the following casts and conversions are defined: Implicit conversions from language types such as int , long , double , string , etc. representing atomic values to corresponding instances of FieldValue subclasses such as IntegerValue , LongValue , DoubleValue , StringValue , etc. This allows instantiation and assignment of field values that are part of a complex data type without explicitly instantiating corresponding FieldValue subclasses. For example: var recordValue = new RecordValue(); recordValue[\"id\"] = 1000; recordValue[\"firstName\"] = \"John\"; Using C# syntax for object and collection initialization the instantiation of field values can be made even more simple as shown in the example below. Explicit conversions from FieldValue instances representing atomic values to corresponding language types such as int , long , double , string etc. using properties such as AsInt32 , AsInt64 , AsDouble , AsString etc. Note that these As... properties only perform conversions to their corresponding language data types and do not perform value conversions and do not perform value conversions from one type to another. In case the target language type does not match the calling instance, InvalidCastException is thrown. For example, AsInt32 will only succeed if the instance is IntegerValue . Explicit cast operators from FieldValue instances to language types representing atomic values. These are the same as As... properties described above and do not perform value conversions. Several To... methods provide limited ability for value conversion between different types. E.g. ToString() will convert FieldValue instances to string using JSON conversion described below. Instances of StringValue can use To... methods to convert to corresponding language type by parsing the string representation of value. Conversions between numeric FieldValue instances are allowed and follow the semantics of corresponding methods of the Convert class. Numeric conversions may result in loss of precision, e.g. when calling ToInt32() or ToDouble() . In a checked context, OverflowException will be thrown if the value represented by the instance is outside the range of the target type. In addition, ToInt64() will return number of milliseconds since Unix Epoch and ToDateTime() and ToDateTime() will do the reverse conversion. See documentation for the To... methods for details. To instantiate complex values from string , use using FromJsonString(String, JsonInputOptions) as described below. JSON conversions. You can convert FieldValue instances, whether atomic or complex, to JSON string using ToJsonString(JsonOutputOptions) . Use JsonOutputOptions to customize the result. You may also construct FieldValue instances from JSON strings using FromJsonString(String, JsonInputOptions) . Use JsonInputOptions to customize the conversion. This also allows you to create table rows from JSON by creating MapValue instances from JSON input and using them with operations like PutAsync(String, MapValue, PutOptions, CancellationToken) . Couple of cases require clarification: When creating FieldValue from JSON string, the driver will decide which numeric FieldValue subclass to use for JSON Number type. This is similar to values in JSON fields returned from the database by operations such as GetAsync(String, MapValue, GetOptions, CancellationToken) as described above. By default, FromJsonString(String, JsonInputOptions) will have the same semantics. You may customize whether you prefer to store fractional numbers as DoubleValue or NumberValue by using PreferDecimal . See JsonInputOptions for more details. Instances of BinaryValue are represented in Base64 when converted to JSON string. Currently FromJsonString(String, JsonInputOptions) will not create BinaryValue instances because JSON String type maps to StringValue , but you can create them manually by using FromBase64String(String) and constructing BinaryValue from the resulting byte array. Instances of both NullValue and JsonNullValue will map to JSON type null . When reading JSON with FromJsonString(String, JsonInputOptions) , JSON null will be mapped to JsonNullValue (more specifically, singleton value JsonNull . Instances of DoubleValue that contain special values such as PositiveInfinity , NegativeInfinity and NaN cannot be represented by JSON type Number and will be represented by strings \"Infinity\", \"-Infinity\" and \"NaN\" respectively when converted to JSON, thus they cannot be converted back from JSON to instances of DoubleValue . See JsonOutputOptions and JsonInputOptions for more ways to customize JSON conversion, such as representing TimestampValue as number of milliseconds since Unix Epoch. Other operations. FieldValue also has indexers by int and string . int indexer allows accessing elements of ArrayValue and string indexer allows accessing values of MapValue and RecordValue by key (see example below). Exception is thrown if an indexer is used on inappropriate subclass of FieldValue . In addition, FieldValue instances support comparisons and equality checks through interfaces IEquatable<T> and IComparable<T> and overloaded operators == , != , < , <= , > and >= . The semantics of the comparisons and equality checks is the same as in SQL and is described in Value Comparison Operators section of the Oracle NoSQL Database SQL Reference Guide. See Equals(FieldValue) and CompareTo(FieldValue) for more details. FieldValue instances are not thread-safe. Mutable instances such as ArrayValue , MapValue and RecordValue should not be modified while being used by database operations. Examples Initializing a MapValue instance representing a row in a table that has fields id LONG, name STRING, address RECORD(street STRING, city STRING), dob TIMESTAMP(0), photo BINARY, friends ARRAY(INTEGER) var row = new MapValue { id = 1001, name = \"John Doe\", address = new RecordValue { street = \"10 1st Street\", city = \"Some City\" }, dob = new DateTime(1960, 3, 5), photo = File.ReadAllBytes(\"photo.jpg\"), friends = new ArrayValue { 1002, 1003, 1004 } }; Constructors Name Description FieldValue() Fields Name Description JsonNull Singleton instance of JsonNullValue . Null Singleton instance of NullValue . Properties Name Description AsArrayValue Gets the value of this instance as ArrayValue . AsBoolean Gets the value of this instance as boolean. AsByteArray Gets the value of this instance as byte array. AsDateTime Gets the value of this instance as date and time. AsDecimal Gets the value of this instance as decimal number. AsDouble Gets the value of this instance as double precision floating point number. AsInt32 Gets the value of this instance as 32-bit signed integer. AsInt64 Gets the value of this instance as 64-bit signed integer. AsMapValue Gets the value of this instance as MapValue . AsRecordValue Gets the value of this instance as RecordValue . AsString Gets the value of this instance as string. Count Gets the number of elements in the collection. DbType Gets DbType of this instance which represents the type of this value. Item[Int32] Gets or sets the element at the specified index. Item[String] Gets or sets the value associated with the specified key. Methods Name Description CompareTo(FieldValue) Compares this instance to the specified FieldValue instance and returns and returns an integer that indicates whether this instance is less than, the same as, or greater than the specified FieldValue instance. DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) Creates FieldValue instance from JSON data represented by Utf8JsonReader . Equals(FieldValue) Returns a value indicating whether the value of this instance is equal to the value of the specified FieldValue instance. Equals(Object) Returns a value indicating whether this instance is equal to a specified object. FromJsonString(String, JsonInputOptions) Creates FieldValue instance from JSON string. GetHashCode() Returns the hash code for this instance. SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToBoolean() Converts value of this instance to boolean. ToByteArray() Converts value of this instance to byte array. ToDateTime() Converts value of this instance to date and time value. ToDecimal() Converts value of this instance to decimal number. ToDouble() Converts value of this instance to double precision floating point number. ToInt32() Converts value of this instance to 32-bit signed integer. ToInt64() Converts value of this instance to 64-bit signed integer. ToJsonString(JsonOutputOptions) Returns JSON representation of the value. ToString() Converts value of this instance to string . Operators Name Description Equality(FieldValue, FieldValue) Determines whether two specified instances of FieldValue are equal. Explicit(FieldValue to Boolean) Defines an explicit conversion from FieldValue instance to boolean. Explicit(FieldValue to Byte[]) Defines an explicit conversion from FieldValue instance to byte array. Explicit(FieldValue to DateTime) Defines an explicit conversion from FieldValue instance to date and time. Explicit(FieldValue to Decimal) Defines an explicit conversion from FieldValue instance to decimal number. Explicit(FieldValue to Double) Defines an explicit conversion from FieldValue instance to double precision floating point number. Explicit(FieldValue to Int32) Defines an explicit conversion from FieldValue instance to 32-bit signed integer. Explicit(FieldValue to Int64) Defines an explicit conversion from FieldValue instance to 64-bit signed integer. Explicit(FieldValue to String) Defines an explicit conversion from FieldValue instance to string. GreaterThan(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is greater than another specified instance of FieldValue . GreaterThanOrEqual(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is greater than or equal to another specified instance of FieldValue . Implicit(Boolean to FieldValue) Defines implicit conversion from bool value to FieldValue instance of subclass BooleanValue . Implicit(Byte[] to FieldValue) Defines implicit conversion from byte[] value to FieldValue instance of subclass BinaryValue . Implicit(DateTime to FieldValue) Defines implicit conversion from DateTime value to FieldValue instance of subclass TimestampValue . Implicit(Decimal to FieldValue) Defines implicit conversion from decimal value to FieldValue instance of subclass NumberValue . Implicit(Double to FieldValue) Defines implicit conversion from double value to FieldValue instance of subclass DoubleValue . Implicit(Int32 to FieldValue) Defines implicit conversion from int value to FieldValue instance of subclass IntegerValue . Implicit(Int64 to FieldValue) Defines implicit conversion from long value to FieldValue instance of subclass LongValue . Implicit(String to FieldValue) Defines implicit conversion from String value to FieldValue instance of subclass StringValue . Inequality(FieldValue, FieldValue) Determines whether two specified instances of FieldValue are not equal. LessThan(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is less than another specified instance of FieldValue . LessThanOrEqual(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is less than or equal to another specified instance of FieldValue ."
  },
  "api/Oracle.NoSQL.SDK.FieldValue.Item.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.Item.html",
    "title": "Property Item | NoSQL SDK for .NET",
    "keywords": "Property Item Item[String] Gets or sets the value associated with the specified key. Declaration public virtual FieldValue this[string key] { get; set; } Parameters Type Name Description String key The key of the value to get or set. Property Value Type Description FieldValue The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException , and a set operation creates a new element with the specified key. Remarks This operation is valid only for instances of MapValue and RecordValue . Exceptions Type Condition NotSupportedException If this instance is not MapValue or RecordValue . KeyNotFoundException If the property is retrieved and key does not exist in this instance. See Also Item [ String ] Item[Int32] Gets or sets the element at the specified index. Declaration public virtual FieldValue this[int index] { get; set; } Parameters Type Name Description Int32 index The zero-based index of the element to get or set. Property Value Type Description FieldValue The element at the specified index. Remarks This operation is valid only for instances of ArrayValue and RecordValue (as the latter represents dictionary with well-defined order of keys). Exceptions Type Condition NotSupportedException If this instance is not ArrayValue or RecordValue . ArgumentOutOfRangeException If index is less than 0 or index is equal to or greater than Count See Also Item[Int32] Item[Int32]"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.JsonNull.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.JsonNull.html",
    "title": "Field JsonNull | NoSQL SDK for .NET",
    "keywords": "Field JsonNull Singleton instance of JsonNullValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly FieldValue JsonNull Returns Type Description FieldValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.Null.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.Null.html",
    "title": "Field Null | NoSQL SDK for .NET",
    "keywords": "Field Null Singleton instance of NullValue . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly FieldValue Null Returns Type Description FieldValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_Equality.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_Equality.html",
    "title": "Operator Equality | NoSQL SDK for .NET",
    "keywords": "Operator Equality Equality(FieldValue, FieldValue) Determines whether two specified instances of FieldValue are equal. Declaration public static bool operator ==(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare for equality, or null . FieldValue value2 The second instance to compare for equality, or null . Returns Type Description Boolean true if two instances are equal or both are null , otherwise false . Remarks The equality is determined by Equals(FieldValue) . See Also Equals ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_Explicit.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_Explicit.html",
    "title": "Operator Explicit | NoSQL SDK for .NET",
    "keywords": "Operator Explicit Explicit(FieldValue to Byte[]) Defines an explicit conversion from FieldValue instance to byte array. Declaration public static explicit operator byte[](FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Byte [] Value of the instance as byte[] . Remarks This operation is the same as AsByteArray . Valid only if this instance is BinaryValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not BinaryValue . See Also AsByteArray Explicit(FieldValue to Boolean) Defines an explicit conversion from FieldValue instance to boolean. Declaration public static explicit operator bool (FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Boolean Value of the instance as bool . Remarks This operation is the same as AsBoolean . Valid only if this instance is BooleanValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not BooleanValue . See Also AsBoolean Explicit(FieldValue to Double) Defines an explicit conversion from FieldValue instance to double precision floating point number. Declaration public static explicit operator double (FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Double Value of the instance as double . Remarks This operation is the same as AsDouble . Valid only if this instance is DoubleValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not DoubleValue . See Also AsDouble Explicit(FieldValue to Int32) Defines an explicit conversion from FieldValue instance to 32-bit signed integer. Declaration public static explicit operator int (FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Int32 Value of the instance as int . Remarks This operation is the same as AsInt32 . Valid only if this instance is IntegerValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not IntegerValue . See Also AsInt32 Explicit(FieldValue to Int64) Defines an explicit conversion from FieldValue instance to 64-bit signed integer. Declaration public static explicit operator long (FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Int64 Value of the instance as long . Remarks This operation is the same as AsInt64 . Valid only if this instance is LongValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not LongValue . See Also AsInt64 Explicit(FieldValue to String) Defines an explicit conversion from FieldValue instance to string. Declaration public static explicit operator string (FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description String Value of the instance as string . Remarks This operation is the same as AsString . Valid only if this instance is StringValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not StringValue . See Also AsString Explicit(FieldValue to DateTime) Defines an explicit conversion from FieldValue instance to date and time. Declaration public static explicit operator DateTime(FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description DateTime Value of the instance as DateTime . Remarks This operation is the same as AsDateTime . Valid only if this instance is TimestampValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not TimestampValue . See Also AsDateTime Explicit(FieldValue to Decimal) Defines an explicit conversion from FieldValue instance to decimal number. Declaration public static explicit operator Decimal(FieldValue value) Parameters Type Name Description FieldValue value A FieldValue instance to explicitly convert. Returns Type Description Decimal Value of the instance as decimal . Remarks This operation is the same as AsDecimal . Valid only if this instance is NumberValue . Exceptions Type Condition ArgumentNullException If value is null . InvalidCastException If value is not NumberValue . See Also AsDecimal"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_GreaterThan.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_GreaterThan.html",
    "title": "Operator GreaterThan | NoSQL SDK for .NET",
    "keywords": "Operator GreaterThan GreaterThan(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is greater than another specified instance of FieldValue . Declaration public static bool operator>(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare. FieldValue value2 The second instance to compare. Returns Type Description Boolean true if value1 is greater than value2 , otherwise false . Remarks The comparison is done according to the rules of CompareTo(FieldValue) . Exceptions Type Condition ArgumentNullException At least one of value1 and value2 is null . NotSupportedException Comparison between value1 and value2 is not supported. See Also CompareTo ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_GreaterThanOrEqual.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_GreaterThanOrEqual.html",
    "title": "Operator GreaterThanOrEqual | NoSQL SDK for .NET",
    "keywords": "Operator GreaterThanOrEqual GreaterThanOrEqual(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is greater than or equal to another specified instance of FieldValue . Declaration public static bool operator >=(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare. FieldValue value2 The second instance to compare. Returns Type Description Boolean true if value1 is greater than or equal to value2 , otherwise false . Remarks The comparison is done according to the rules of CompareTo(FieldValue) . Exceptions Type Condition ArgumentNullException At least one of value1 and value2 is null . NotSupportedException Comparison between value1 and value2 is not supported. See Also CompareTo ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_Implicit.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_Implicit.html",
    "title": "Operator Implicit | NoSQL SDK for .NET",
    "keywords": "Operator Implicit Implicit(Byte[] to FieldValue) Defines implicit conversion from byte[] value to FieldValue instance of subclass BinaryValue . Declaration public static implicit operator FieldValue(byte[] binaryValue) Parameters Type Name Description Byte [] binaryValue byte[] value to implicitly convert. Returns Type Description FieldValue BinaryValue instance. See Also BinaryValue Implicit(Boolean to FieldValue) Defines implicit conversion from bool value to FieldValue instance of subclass BooleanValue . Declaration public static implicit operator FieldValue(bool booleanValue) Parameters Type Name Description Boolean booleanValue bool value to implicitly convert. Returns Type Description FieldValue BooleanValue instance. See Also BooleanValue Implicit(Double to FieldValue) Defines implicit conversion from double value to FieldValue instance of subclass DoubleValue . Declaration public static implicit operator FieldValue(double doubleValue) Parameters Type Name Description Double doubleValue bool value to implicitly convert. Returns Type Description FieldValue DoubleValue instance. See Also DoubleValue Implicit(Int32 to FieldValue) Defines implicit conversion from int value to FieldValue instance of subclass IntegerValue . Declaration public static implicit operator FieldValue(int integerValue) Parameters Type Name Description Int32 integerValue int value to implicitly convert. Returns Type Description FieldValue IntegerValue instance. See Also IntegerValue Implicit(Int64 to FieldValue) Defines implicit conversion from long value to FieldValue instance of subclass LongValue . Declaration public static implicit operator FieldValue(long longValue) Parameters Type Name Description Int64 longValue long value to implicitly convert. Returns Type Description FieldValue LongValue instance. See Also LongValue Implicit(String to FieldValue) Defines implicit conversion from String value to FieldValue instance of subclass StringValue . Declaration public static implicit operator FieldValue(string stringValue) Parameters Type Name Description String stringValue String value to implicitly convert. Returns Type Description FieldValue StringValue instance. See Also StringValue Implicit(DateTime to FieldValue) Defines implicit conversion from DateTime value to FieldValue instance of subclass TimestampValue . Declaration public static implicit operator FieldValue(DateTime timestampValue) Parameters Type Name Description DateTime timestampValue String value to implicitly convert. Returns Type Description FieldValue TimestampValue instance. See Also TimestampValue Implicit(Decimal to FieldValue) Defines implicit conversion from decimal value to FieldValue instance of subclass NumberValue . Declaration public static implicit operator FieldValue(Decimal numberValue) Parameters Type Name Description Decimal numberValue decimal value to implicitly convert. Returns Type Description FieldValue NumberValue instance. See Also NumberValue"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_Inequality.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_Inequality.html",
    "title": "Operator Inequality | NoSQL SDK for .NET",
    "keywords": "Operator Inequality Inequality(FieldValue, FieldValue) Determines whether two specified instances of FieldValue are not equal. Declaration public static bool operator !=(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare for non-equality, or null . FieldValue value2 The second instance to compare for non-equality, or null . Returns Type Description Boolean true if two instances are not equal, otherwise false . Remarks The equality is determined by Equals(FieldValue) . See Also Equals ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_LessThan.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_LessThan.html",
    "title": "Operator LessThan | NoSQL SDK for .NET",
    "keywords": "Operator LessThan LessThan(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is less than another specified instance of FieldValue . Declaration public static bool operator <(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare. FieldValue value2 The second instance to compare. Returns Type Description Boolean true if value1 is less than value2 , otherwise false . Remarks The comparison is done according to the rules of CompareTo(FieldValue) . Exceptions Type Condition ArgumentNullException At least one of value1 and value2 is null . NotSupportedException Comparison between value1 and value2 is not supported. See Also CompareTo ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.op_LessThanOrEqual.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.op_LessThanOrEqual.html",
    "title": "Operator LessThanOrEqual | NoSQL SDK for .NET",
    "keywords": "Operator LessThanOrEqual LessThanOrEqual(FieldValue, FieldValue) Determines whether one specified instance of FieldValue is less than or equal to another specified instance of FieldValue . Declaration public static bool operator <=(FieldValue value1, FieldValue value2) Parameters Type Name Description FieldValue value1 The first instance to compare. FieldValue value2 The second instance to compare. Returns Type Description Boolean true if value1 is less than or equal to value2 , otherwise false . Remarks The comparison is done according to the rules of CompareTo(FieldValue) . Exceptions Type Condition ArgumentNullException At least one of value1 and value2 is null . NotSupportedException Comparison between value1 and value2 is not supported. See Also CompareTo ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public abstract void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToBoolean.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToBoolean.html",
    "title": "Method ToBoolean | NoSQL SDK for .NET",
    "keywords": "Method ToBoolean ToBoolean() Converts value of this instance to boolean. Declaration public virtual bool ToBoolean() Returns Type Description Boolean Value of this instance as boolean. Remarks This conversion is valid only for instances of BooleanValue or instances of StringValue with values \"true\" or \"false\", ignoring case and leading/trailing whitespace (see ToBoolean(String) ). Exceptions Type Condition InvalidCastException If this instance is not BooleanValue or StringValue . FormatException If this instance is StringValue and does not have value \"true\" or \"false\". See Also ToBoolean()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToByteArray.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToByteArray.html",
    "title": "Method ToByteArray | NoSQL SDK for .NET",
    "keywords": "Method ToByteArray ToByteArray() Converts value of this instance to byte array. Declaration public virtual byte[] ToByteArray() Returns Type Description Byte [] Value of this instance as byte array. Remarks This conversion is valid only for instances of BinaryValue or instances of StringValue containing Base64-encoded binary data. Exceptions Type Condition InvalidCastException If this instance is not BinaryValue or StringValue . FormatException If this instance is StringValue and contains invalid Base64 string. See Also ToByteArray()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToDateTime.html",
    "title": "Method ToDateTime | NoSQL SDK for .NET",
    "keywords": "Method ToDateTime ToDateTime() Converts value of this instance to date and time value. Declaration public virtual DateTime ToDateTime() Returns Type Description DateTime Value of this instance as date and time. Remarks This conversion is valid only for instances of TimestampValue , IntegerValue , LongValue or instances of StringValue containing valid representation of date and time. For instances of IntegerValue and LongValue , the input value represents number of milliseconds since Unix Epoch (1970-01-01T00:00:00). For instances of StringValue , this operation is equivalent to calling ToDateTime(String) and supports the same date and time formats. Exceptions Type Condition InvalidCastException If this instance is not TimestampValue , IntegerValue , LongValue or StringValue . FormatException If this instance is StringValue and does not have valid representation of date and time. See Also ToDateTime() ToDateTime() ToDateTime()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToDecimal.html",
    "title": "Method ToDecimal | NoSQL SDK for .NET",
    "keywords": "Method ToDecimal ToDecimal() Converts value of this instance to decimal number. Declaration public virtual Decimal ToDecimal() Returns Type Description Decimal Value of this instance as decimal. Remarks This conversion is valid only for numeric instances such as IntegerValue , LongValue , DoubleValue , NumberValue or instances of StringValue containing valid numeric representation. Exceptions Type Condition InvalidCastException If this instance is not numeric and not StringValue . OverflowException In a checked context, if this instance is numeric and represents value less than MinValue or greater than MaxValue FormatException If this instance is StringValue and it does not contain valid numeric representation. See Also ToDecimal() ToDecimal() ToDecimal() ToDecimal()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToDouble.html",
    "title": "Method ToDouble | NoSQL SDK for .NET",
    "keywords": "Method ToDouble ToDouble() Converts value of this instance to double precision floating point number. Declaration public virtual double ToDouble() Returns Type Description Double Value of this instance as double precision floating point number. Remarks This conversion is valid only for numeric instances such as IntegerValue , LongValue , DoubleValue , NumberValue or instances of StringValue containing valid numeric representation. Exceptions Type Condition InvalidCastException If this instance is not numeric and not StringValue . OverflowException In a checked context, if this instance is numeric and represents value less than MinValue or greater than MaxValue FormatException If this instance is StringValue and it does not contain valid numeric representation. See Also ToDouble() ToDouble() ToDouble() ToDouble()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToInt32.html",
    "title": "Method ToInt32 | NoSQL SDK for .NET",
    "keywords": "Method ToInt32 ToInt32() Converts value of this instance to 32-bit signed integer. Declaration public virtual int ToInt32() Returns Type Description Int32 Value of this instance as 32-bit signed integer. Remarks This conversion is valid only for numeric instances such as IntegerValue , LongValue , DoubleValue , NumberValue or instances of StringValue containing valid representation of 32-bit signed integer. Exceptions Type Condition InvalidCastException If this instance is not numeric and not StringValue . OverflowException In a checked context, if this instance is numeric and represents value less than MinValue or greater than MaxValue FormatException If this instance is StringValue and it does not contain valid representation of integer. See Also ToInt32() ToInt32() ToInt32() ToInt32()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts value of this instance to 64-bit signed integer. Declaration public virtual long ToInt64() Returns Type Description Int64 Value of this instance as 64-bit signed integer. Remarks This conversion is valid only for numeric instances such as IntegerValue , LongValue , DoubleValue , NumberValue , instances of TimestampValue or instances of StringValue containing valid representation of 64-bit signed integer. For TimestampValue , it returns number of milliseconds since Unix Epoch (1970-01-01T00:00:00). Exceptions Type Condition InvalidCastException If this instance is not numeric and not TimestampValue or StringValue . OverflowException In a checked context, if this instance is numeric and represents value less than MinValue or greater than MaxValue FormatException If this instance is StringValue and it does not contain valid representation of integer. See Also ToInt64() ToInt64() ToInt64() ToInt64() ToInt64()"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToJsonString.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToJsonString.html",
    "title": "Method ToJsonString | NoSQL SDK for .NET",
    "keywords": "Method ToJsonString ToJsonString(JsonOutputOptions) Returns JSON representation of the value. Declaration public string ToJsonString(JsonOutputOptions options = null) Parameters Type Name Description JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Returns Type Description String JSON string representing the value of this instance. Remarks See sections JSON Mappings and JSON Conversions in the remarks section of FieldValue on details of how different data types and subclasses of FieldValue are represented in JSON. See Also JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.FieldValue.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.FieldValue.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Converts value of this instance to string . Declaration public override string ToString() Returns Type Description String String representation of this instance. Remarks This conversion is valid for all subclasses of FieldValue and returns representation of this instance in JSON format, which is equivalent to the result of ToJsonString(JsonOutputOptions) with default options. Note that for instances of StringValue this means that a double-quoted string will be returned. See Also ToJsonString ( JsonOutputOptions )"
  },
  "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.-ctor.html",
    "title": "Constructor GetAdminStatusOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetAdminStatusOptions GetAdminStatusOptions() Declaration public GetAdminStatusOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.html",
    "title": "Class GetAdminStatusOptions | NoSQL SDK for .NET",
    "keywords": "Class GetAdminStatusOptions On-premise only. Represents options passed to GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) API. Inheritance Object GetAdminStatusOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetAdminStatusOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description GetAdminStatusOptions() Properties Name Description Timeout Gets or sets the timeout for the request. See Also GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetAdminStatusOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetIndexesRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexesRequest.html",
    "title": "Class GetIndexesRequest | NoSQL SDK for .NET",
    "keywords": "Class GetIndexesRequest Represents information about operation performed by GetIndexesAsync(String, GetIndexOptions, CancellationToken) API. Inheritance Object Request RequestWithTable GetIndexesRequest GetIndexRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetIndexesRequest : RequestWithTable Properties Name Description Options Gets the options for GetIndexesAsync(String, GetIndexOptions, CancellationToken) and GetIndexAsync(String, String, GetIndexOptions, CancellationToken) operations. See Also GetIndexesAsync(String, GetIndexOptions, CancellationToken) Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.GetIndexesRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexesRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for GetIndexesAsync(String, GetIndexOptions, CancellationToken) and GetIndexAsync(String, String, GetIndexOptions, CancellationToken) operations. Declaration public GetIndexOptions Options { get; } Property Value Type Description GetIndexOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.GetIndexOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.GetIndexOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexOptions.-ctor.html",
    "title": "Constructor GetIndexOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetIndexOptions GetIndexOptions() Declaration public GetIndexOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetIndexOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexOptions.html",
    "title": "Class GetIndexOptions | NoSQL SDK for .NET",
    "keywords": "Class GetIndexOptions Represents options passed to GetIndexesAsync(String, GetIndexOptions, CancellationToken) and GetIndexAsync(String, String, GetIndexOptions, CancellationToken) APIs. Inheritance Object GetIndexOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetIndexOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing GetIndex operation with provided GetIndexOptions . var result = await client.GetIndexAsync(\"myTable\", \"myIndex\", new GetIndexOptions { Timeout = TimeSpan.FromSeconds(10) }); Constructors Name Description GetIndexOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also GetIndexesAsync(String, GetIndexOptions, CancellationToken) GetIndexAsync(String, String, GetIndexOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.GetIndexOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.GetIndexOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetIndexRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexRequest.html",
    "title": "Class GetIndexRequest | NoSQL SDK for .NET",
    "keywords": "Class GetIndexRequest Represents information about operation performed by GetIndexAsync(String, String, GetIndexOptions, CancellationToken) API. Inheritance Object Request RequestWithTable GetIndexesRequest GetIndexRequest Inherited Members GetIndexesRequest.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetIndexRequest : GetIndexesRequest Properties Name Description IndexName Gets the name of the index. See Also GetIndexAsync(String, String, GetIndexOptions, CancellationToken) GetIndexesRequest"
  },
  "api/Oracle.NoSQL.SDK.GetIndexRequest.IndexName.html": {
    "href": "api/Oracle.NoSQL.SDK.GetIndexRequest.IndexName.html",
    "title": "Property IndexName | NoSQL SDK for .NET",
    "keywords": "Property IndexName IndexName Gets the name of the index. Declaration public string IndexName { get; } Property Value Type Description String The name of the index."
  },
  "api/Oracle.NoSQL.SDK.GetOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.GetOptions.Consistency.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.Consistency.html",
    "title": "Property Consistency | NoSQL SDK for .NET",
    "keywords": "Property Consistency Consistency Gets or sets Consistency used for the operation. Declaration public Nullable<Consistency> Consistency { get; set; } Property Value Type Description Nullable < Consistency > Consistency used for the operation. If not set, defaults to Consistency . See Also Consistency"
  },
  "api/Oracle.NoSQL.SDK.GetOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.-ctor.html",
    "title": "Constructor GetOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetOptions GetOptions() Declaration public GetOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.html",
    "title": "Class GetOptions | NoSQL SDK for .NET",
    "keywords": "Class GetOptions Represents options passed to GetAsync(String, MapValue, GetOptions, CancellationToken) API. Inheritance Object GetOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing Get operation with provided GetOptions . var result = await client.GetAsync(\"myTable\", new MapValue // primary key { [\"id\"] = 1000 }, new GetOptions { Timeout = TimeSpan.FromSeconds(10), Consistency = Consistency.Absolute }); Constructors Name Description GetOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Consistency Gets or sets Consistency used for the operation. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also GetAsync(String, MapValue, GetOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.GetOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.GetOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.-ctor.html",
    "title": "Constructor GetReplicaStatsOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetReplicaStatsOptions GetReplicaStatsOptions() Declaration public GetReplicaStatsOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.html",
    "title": "Class GetReplicaStatsOptions | NoSQL SDK for .NET",
    "keywords": "Class GetReplicaStatsOptions Cloud Service only. Represents options passed to GetReplicaStatsAsync API. Inheritance Object GetReplicaStatsOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetReplicaStatsOptions : Object Constructors Name Description GetReplicaStatsOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Limit Gets or sets the limit on the number of replica stats records returned by one call to GetReplicaStatsAsync . StartTime Gets or sets the start time from which to retrieve replica stats records. Timeout Gets or sets the timeout for the request. See Also GetReplicaStatsAsync"
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Limit.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Limit.html",
    "title": "Property Limit | NoSQL SDK for .NET",
    "keywords": "Property Limit Limit Gets or sets the limit on the number of replica stats records returned by one call to GetReplicaStatsAsync . Declaration public Nullable<int> Limit { get; set; } Property Value Type Description Nullable < Int32 > Limit on the number of replica stats records. Defaults to 1000 . Remarks Note that this limit is for the number of stats records for each replica. E.g. if you have 3 replicas and the limit is 1000, then up to 1000 stats records for each replica can be returned, up to 3000 stats records total."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.StartTime.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.StartTime.html",
    "title": "Property StartTime | NoSQL SDK for .NET",
    "keywords": "Property StartTime StartTime Gets or sets the start time from which to retrieve replica stats records. Declaration public Nullable<DateTime> StartTime { get; set; } Property Value Type Description Nullable < DateTime > Start time. If not set, the number of most recent complete stats records are returned, up to Limit , per replica."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.html",
    "title": "Class GetReplicaStatsRequest | NoSQL SDK for .NET",
    "keywords": "Class GetReplicaStatsRequest Represents information about operation performed by GetReplicaStatsAsync API. Inheritance Object Request RequestWithTable GetReplicaStatsRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetReplicaStatsRequest : RequestWithTable Properties Name Description Options Gets the options for GetReplicaStatsAsync operation. RegionId Gets the region id for the operation if it was provided to GetReplicaStatsAsync . See Also DropReplicaAsync DropReplicaWithCompletionAsync Request TableOperationRequest"
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for GetReplicaStatsAsync operation. Declaration public GetReplicaStatsOptions Options { get; } Property Value Type Description GetReplicaStatsOptions The options, or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.RegionId.html": {
    "href": "api/Oracle.NoSQL.SDK.GetReplicaStatsRequest.RegionId.html",
    "title": "Property RegionId | NoSQL SDK for .NET",
    "keywords": "Property RegionId RegionId Gets the region id for the operation if it was provided to GetReplicaStatsAsync . Declaration public string RegionId { get; } Property Value Type Description String The region id if it was provided, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.GetRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.GetRequest-1.html",
    "title": "Class GetRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class GetRequest<TRow> Represents information about operation performed by GetAsync(String, MapValue, GetOptions, CancellationToken) API. Inheritance Object Request RequestWithTable ReadRequest GetRequest<TRow> Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetRequest<TRow> : ReadRequest Type Parameters Name Description TRow The type of value representing the row as the result of Get operation. Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description Options Gets the options for GetAsync(String, MapValue, GetOptions, CancellationToken) operation. PrimaryKey Gets the value of the primary key for GetAsync(String, MapValue, GetOptions, CancellationToken) operation. See Also GetAsync(String, MapValue, GetOptions, CancellationToken) Request ReadRequest"
  },
  "api/Oracle.NoSQL.SDK.GetRequest-1.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.GetRequest-1.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for GetAsync(String, MapValue, GetOptions, CancellationToken) operation. Declaration public GetOptions Options { get; } Property Value Type Description GetOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.GetRequest-1.PrimaryKey.html": {
    "href": "api/Oracle.NoSQL.SDK.GetRequest-1.PrimaryKey.html",
    "title": "Property PrimaryKey | NoSQL SDK for .NET",
    "keywords": "Property PrimaryKey PrimaryKey Gets the value of the primary key for GetAsync(String, MapValue, GetOptions, CancellationToken) operation. Declaration public object PrimaryKey { get; } Property Value Type Description Object The primary key as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.ExpirationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.ExpirationTime.html",
    "title": "Property ExpirationTime | NoSQL SDK for .NET",
    "keywords": "Property ExpirationTime ExpirationTime Gets the expiration time of the row. Declaration public Nullable<DateTime> ExpirationTime { get; } Property Value Type Description Nullable < DateTime > Expiration time of the row. null if the row exists but does not expire or the row does not exist."
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.html",
    "title": "Class GetResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class GetResult<TRow> Represents the result of GetAsync(String, MapValue, GetOptions, CancellationToken) operation. Inheritance Object GetResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the returned row. Must be a reference type. Currently the only supported type is RecordValue . Remarks If matching row is found, it is available as Row as well as its version and (optional) expiration time. If matching row is not found, Row as well as other properties, except ConsumedCapacity , are set to null . Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. ExpirationTime Gets the expiration time of the row. ModificationTime Gets the modification time of the row. Row Gets the value of the returned row. Version Gets the version of the returned row. See Also GetAsync(String, MapValue, GetOptions, CancellationToken) ConsumedCapacity RowVersion"
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.ModificationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.ModificationTime.html",
    "title": "Property ModificationTime | NoSQL SDK for .NET",
    "keywords": "Property ModificationTime ModificationTime Gets the modification time of the row. Declaration public Nullable<DateTime> ModificationTime { get; } Property Value Type Description Nullable < DateTime > Modification time of the row in UTC if available from the server or null if the server doesn't support this feature."
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.Row.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.Row.html",
    "title": "Property Row | NoSQL SDK for .NET",
    "keywords": "Property Row Row Gets the value of the returned row. Declaration public TRow Row { get; } Property Value Type Description TRow The value of the returned row or null if the row doesn't exist."
  },
  "api/Oracle.NoSQL.SDK.GetResult-1.Version.html": {
    "href": "api/Oracle.NoSQL.SDK.GetResult-1.Version.html",
    "title": "Property Version | NoSQL SDK for .NET",
    "keywords": "Property Version Version Gets the version of the returned row. Declaration public RowVersion Version { get; } Property Value Type Description RowVersion Version of the returned row or null if the row does not exist."
  },
  "api/Oracle.NoSQL.SDK.GetTableOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.GetTableOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableOptions.-ctor.html",
    "title": "Constructor GetTableOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetTableOptions GetTableOptions() Declaration public GetTableOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetTableOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableOptions.html",
    "title": "Class GetTableOptions | NoSQL SDK for .NET",
    "keywords": "Class GetTableOptions Represents options passed to GetTableAsync APIs. Inheritance Object GetTableOptions TableCompletionOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetTableOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing GetTable operation with provided GetTableOptions . var result = await client.GetTableAsync(\"myTable\", new GetTableOptions { Timeout = TimeSpan.FromSeconds(10) }); Constructors Name Description GetTableOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also GetTableAsync"
  },
  "api/Oracle.NoSQL.SDK.GetTableOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.GetTableOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetTableRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableRequest.html",
    "title": "Class GetTableRequest | NoSQL SDK for .NET",
    "keywords": "Class GetTableRequest Represents information about operation performed by GetTableAsync API. Inheritance Object Request RequestWithTable GetTableRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetTableRequest : RequestWithTable Properties Name Description Options Gets the options for GetTableAsync operation. See Also GetTableAsync Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.GetTableRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for GetTableAsync operation. Declaration public GetTableOptions Options { get; } Property Value Type Description GetTableOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.-ctor.html",
    "title": "Constructor GetTableUsageOptions | NoSQL SDK for .NET",
    "keywords": "Constructor GetTableUsageOptions GetTableUsageOptions() Declaration public GetTableUsageOptions()"
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.EndTime.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.EndTime.html",
    "title": "Property EndTime | NoSQL SDK for .NET",
    "keywords": "Property EndTime EndTime Gets or sets the end time for the time period from which to return table usage records. Declaration public Nullable<DateTime> EndTime { get; set; } Property Value Type Description Nullable < DateTime > End time."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.FromIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.FromIndex.html",
    "title": "Property FromIndex | NoSQL SDK for .NET",
    "keywords": "Property FromIndex FromIndex Gets or sets the index at which to start returning table usage records. Declaration public Nullable<int> FromIndex { get; set; } Property Value Type Description Nullable < Int32 > Start index at which to start returning table usage records. If not set, defaults to 0 . Remarks This property can be used to page table usage records over multiple calls to GetTableUsageAsync in order to avoid returning a very large list in a single result. To page table usage records, set this value to NextIndex returned from previous call on subsequent calls to GetTableUsageAsync . These operations are best done in a loop. However, the recommended and more simple way to page table usage records is to use GetTableUsageAsyncEnumerable in which case you need not use this property."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.html",
    "title": "Class GetTableUsageOptions | NoSQL SDK for .NET",
    "keywords": "Class GetTableUsageOptions Cloud Service/Cloud Simulator only. Represents options passed to GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) API. Inheritance Object GetTableUsageOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetTableUsageOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. If neither StartTime nor EndTime is specified, only a single most recent table usage record is returned. For both StartTime and EndTime the System.DateTime.Kind must be either Utc or Local and cannot be Unspecified . It is preferred to use Utc to avoid time zone ambiguities. If both StartTime and EndTime are specified, they must be of the same System.DateTime.Kind , preferred kind being Utc . If StartTime is specified, but not EndTime , EndTime defaults to the current time. If EndTime is specified, but not StartTime , up to Limit usage records will be returned ending at EndTime . E.g. if EndTime is 10pm today and Limit is 60, 60 1-minute usage records will be returned between 9pm and 10pm today. If Limit is not specified, a large system limit will be used which may result in large number of table usage records returned. You may not specify Limit unless you specify at least one of StartTime and EndTime . Without the time period only one most recent usage record is returned. If Limit is not specified, a large system defined limit will be used which may result in large number of table usage records returned unless the time period is appropriately restricted. Because the number of table usage records can be very large, you may page the results over multiple calls to GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) using FromIndex and Limit properties as shown in the example below. However, the recommended way is to call GetTableUsageAsyncEnumerable and iterate over its result. Examples Executing GetTableUsage operation with provided GetTableUsageOptions . var result = await client.GetTableUsageAsync(\"MyTable\", new GetTableUsageOptions { Compartment = \"my_compartment\", Timeout = TimeSpan.FromSeconds(10), StartTime = DateTime.Now - TimeSpan.FromHours(1) }); Paging over table usage records using GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) and FromIndex and Limit properties. We iterate until the number of returned table usage records becomes less than the limit (and possibly 0), which means that the last partial result has been received. var currentTime = DateTime.UtcNow; var options = new GetTableUsageOptions { StartTime = currentTime - TimeSpan.FromDays(2), EndTime = currentTime - TimeSpan.FromDays(1) Limit = 100 }; do { var result = await client.GetTableUsageAsync(\"MyTable\", options); foreach(var usageRecord in result.UsageRecords) { Console.WriteLine(usageRecord); } options.FromIndex = result.NextIndex; } while(result.UsageRecords.Count == options.Limit); Constructors Name Description GetTableUsageOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. EndTime Gets or sets the end time for the time period from which to return table usage records. FromIndex Gets or sets the index at which to start returning table usage records. Limit Gets or sets the limit on the number of table usage records returned. StartTime Gets or sets the start time for the time period from which to return table usage records. Timeout Gets or sets the timeout for the request. See Also GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) GetTableUsageAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Limit.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Limit.html",
    "title": "Property Limit | NoSQL SDK for .NET",
    "keywords": "Property Limit Limit Gets or sets the limit on the number of table usage records returned. Declaration public Nullable<int> Limit { get; set; } Property Value Type Description Nullable < Int32 > Limit on the number of table usage records."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.StartTime.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.StartTime.html",
    "title": "Property StartTime | NoSQL SDK for .NET",
    "keywords": "Property StartTime StartTime Gets or sets the start time for the time period from which to return table usage records. Declaration public Nullable<DateTime> StartTime { get; set; } Property Value Type Description Nullable < DateTime > Start time."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageRequest.html",
    "title": "Class GetTableUsageRequest | NoSQL SDK for .NET",
    "keywords": "Class GetTableUsageRequest Represents information about operation performed by GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) method. Inheritance Object Request RequestWithTable GetTableUsageRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class GetTableUsageRequest : RequestWithTable Properties Name Description Options Gets the options for GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) operation. See Also GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.GetTableUsageRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.GetTableUsageRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) operation. Declaration public GetTableUsageOptions Options { get; } Property Value Type Description GetTableUsageOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.html": {
    "href": "api/Oracle.NoSQL.SDK.html",
    "title": "Namespace Oracle.NoSQL.SDK | NoSQL SDK for .NET",
    "keywords": "Namespace Oracle.NoSQL.SDK Classes AddReplicaOptions Cloud Service only. Represents options passed to AddReplicaAsync and AddReplicaWithCompletionAsync APIs. AddReplicaRequest Represents information about operation performed by AddReplicaAsync and AddReplicaWithCompletionAsync APIs. AdminOptions On-premise only. Represents options for admin DDL passed to methods ExecuteAdminAsync and ExecuteAdminWithCompletionAsync . AdminRequest On-premise only. Represents information about admin DDL operation performed by ExecuteAdminAsync and ExecuteAdminWithCompletionAsync methods. AdminResult On-premise only. Represents the status of an admin DDL operation and related information. AdminState On-premise only. Represents the state of the operation performed by ExecuteAdminAsync or ExecuteAdminWithCompletionAsync . AdminStatusRequest On-premise only. Represents information about an operation performed by GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) API. ArrayValue Represents an array of FieldValue instances. AuthorizationException The exception that is thrown while trying to obtain the authorization information needed to perform an operation on the Oracle NoSQL Database. AuthorizationStringProvider Implementation of IAuthorizationProvider that provides the authorization string. BadProtocolException The exception that is thrown when an invalid protocol message is received by the driver or the service. BatchOperationNumberLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when the number of write operations passed to WriteManyAsync , PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) or DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) exceeds the system-defined limit. BinaryValue Represents a binary value. BooleanValue Represents a boolean value. CapacityMode For Cloud Service/Cloud Simulator only. CapacityMode specifies the type of capacity that will be set on a table. It is used in table creation and table capacity updates. ConnectionOptions Represents options for network connections to Oracle NoSQL Database. Consistency Consistency is used to provide consistency guarantees for read operations. ConsumedCapacity Cloud Service/Cloud Simulator only. Represents read and write throughput consumed by the operation. ControlOperationThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when a non-data operation is throttled. DbType Represents the type of FieldValue instance. Generally every subclass of FieldValue is represented by its own DbType value, with the exception of MapValue and RecordValue both represented by Map . DeleteIfVersionOperation Represents a DeleteIfVersion operation that is part of WriteOperationCollection . DeleteIfVersionRequest<TRow> Represents information about Put operation performed by DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) API. DeleteManyOptions Represents options passed to DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) API. DeleteOperation Represents a Delete operation that is part of WriteOperationCollection . DeleteOptions Represent options for the Delete operation. DeleteRangeContinuationKey Represents the continuation key for the DeleteRange operation. DeleteRangeOptions Represents options for the DeleteRange operation. DeleteRangeRequest Represents information about DeleteRange operation performed by DeleteRangeAsync and GetDeleteRangeAsyncEnumerable APIs. DeleteRangeResult Represents the result of the DeleteRange operation. DeleteRequest<TRow> Represents information about Delete operation performed by DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) API. DeleteResult<TRow> Represents the result of the Delete operation. DeploymentLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when supplied table limits exceed the maximum allowed. DoubleValue Represents a double precision floating point value. DropReplicaOptions Cloud Service only. Represents options passed to DropReplicaAsync and DropReplicaWithCompletionAsync APIs. DropReplicaRequest Represents information about operation performed by DropReplicaAsync and DropReplicaWithCompletionAsync APIs. Durability On-Premise only. Durability specifies the master and replica sync and ack policies to be used for a write operation. ETagMismatchException Cloud Service only. The exception that is thrown by table DDL and add/drop replica operations that indicates that MatchETag provided for the operation does not match the current ETag of the table. EvolutionLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to evolve the schema of a table more times than allowed by the system defined limit. FieldRange Defines a range of values to be used in a DeleteRange operation. FieldValue FieldValue is the base class for all data items in Oracle NoSQL Database. GetAdminStatusOptions On-premise only. Represents options passed to GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) API. GetIndexesRequest Represents information about operation performed by GetIndexesAsync(String, GetIndexOptions, CancellationToken) API. GetIndexOptions Represents options passed to GetIndexesAsync(String, GetIndexOptions, CancellationToken) and GetIndexAsync(String, String, GetIndexOptions, CancellationToken) APIs. GetIndexRequest Represents information about operation performed by GetIndexAsync(String, String, GetIndexOptions, CancellationToken) API. GetOptions Represents options passed to GetAsync(String, MapValue, GetOptions, CancellationToken) API. GetReplicaStatsOptions Cloud Service only. Represents options passed to GetReplicaStatsAsync API. GetReplicaStatsRequest Represents information about operation performed by GetReplicaStatsAsync API. GetRequest<TRow> Represents information about operation performed by GetAsync(String, MapValue, GetOptions, CancellationToken) API. GetResult<TRow> Represents the result of GetAsync(String, MapValue, GetOptions, CancellationToken) operation. GetTableOptions Represents options passed to GetTableAsync APIs. GetTableRequest Represents information about operation performed by GetTableAsync API. GetTableUsageOptions Cloud Service/Cloud Simulator only. Represents options passed to GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) API. GetTableUsageRequest Represents information about operation performed by GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) method. IAMAuthorizationProvider Authorization provider for the Oracle NoSQL Database Cloud Service. IAMCredentials Represents the credentials used by IAMAuthorizationProvider when authenticating using the specific user identity. IndexExistsException The exception that is thrown when attempting to create an index for a table when an index with the same name already exists. IndexLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create more indexes on a table than allowed by the system defined limit. IndexNotFoundException The exception that is thrown when an operation attempted to access an index that does not exist or is not in a visible state. IndexResult Represents the information about a single index including its name and field names. InstanceMetadataClient Cloud Service only. A class that allows to retrieve OCI instance metadata. IntegerValue Represents a 32-bit signed integer value. InvalidAuthorizationException The exception that is thrown when a request presents invalid authorization information to the service. JsonInputOptions Represents options passed to FromJsonString(String, JsonInputOptions) and DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) . JsonNullValue Represents a JSON NULL value. JsonOutputOptions Represents options passed to ToJsonString(JsonOutputOptions) and SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) . JsonParseException The exception that is thrown by FromJsonString(String, JsonInputOptions) when failed to parse JSON. KeySizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create a row with a primary key or index key size that exceeds the system defined limit. KVStoreAuthorizationProvider Authorization provider for the secure On-Premise Oracle NoSQL Database. KVStoreCredentials Represents user credentials used by KVStoreAuthorizationProvider . ListTablesOptions Represents options passed to ListTablesAsync(ListTablesOptions, CancellationToken) and GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) APIs. ListTablesRequest Represents information about operation performed by ListTablesAsync and GetListTablesAsyncEnumerable APIs. ListTablesResult Represents the result of ListTables operation. LongValue Represents a 64-bit signed integer value. MapValue Represents an unordered dictionary with string keys and values of type FieldValue . NoSQLClient NoSQLClient class provides access to Oracle NoSQL Database and can be used both with Oracle NoSQL Database Cloud Service and with On-Premise Oracle NoSQL Database. Methods of this class are used to create and manage tables and indexes, and to read and write data. When used on-premise, they also support admin operations such as managing namespaces, users and roles. All operations are asynchronous and may be used with async/await . NoSQLConfig Represents configuration required to instantiate NoSQLClient instance. NoSQLException The base class for most exceptions thrown by the driver. NoSQLRateLimiter Cloud Service or Cloud Simulator only. Default rate limiter used by the SDK. NoSQLRetryHandler Represents the built-in retry handler. NullValue Represents SQL NULL value. NumberValue Represents a decimal number value. PreparedStatement Represents a prepared query statement. PrepareOptions Represents options passed to PrepareAsync(String, PrepareOptions, CancellationToken) . PrepareRequest Represents information about the Prepare operation performed by PrepareAsync(String, PrepareOptions, CancellationToken) API. PutIfAbsentOperation Represents a PutIfAbsent operation that is part of WriteOperationCollection . PutIfAbsentRequest<TRow> Represents information about Put operation performed by PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) API. PutIfPresentOperation Represents a PutIfPresent operation that is part of WriteOperationCollection . PutIfPresentRequest<TRow> Represents information about Put operation performed by PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) API. PutIfVersionOperation Represents a PutIfVersion operation that is part of WriteOperationCollection . PutIfVersionRequest<TRow> Represents information about Put operation performed by PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) API. PutManyOptions Represents options passed to PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) API. PutOperation Represents a Put operation that is part of WriteOperationCollection . PutOptions Represent options for the Put operation. PutRequest<TRow> Represents information about Put operation performed by PutAsync(String, MapValue, PutOptions, CancellationToken) API. PutResult<TRow> Represents the result of the Put operation. QueryContinuationKey Represents the continuation key for the Query operation. QueryOptions Represents options for the Query operation. QueryRequest Base class for QueryRequest<TRow> . Only used internally. QueryRequest<TRow> Represents information about Query operation performed by QueryAsync and GetQueryAsyncEnumerable APIs. QueryRequestBase Base class for prepare and query requests. Only used internally. QueryResult<TRow> Represents the result of the Query operation. ReadRequest Base class for information about all operations that read a row from a table. ReadThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when the provisioned read throughput has been exceeded. RecordValue Represents an order-preserving dictionary with string keys and values of type FieldValue . Region Cloud Service only. Represents the region in the Oracle Cloud Infrastructure. ReplicaAckPolicy On-Premise only. ReplicaAckPolicy defines the policy for how commits are handled in a replicated environment. ReplicaInfo Cloud Service only. Represents information about a single remote replica of a Global Active table. ReplicaStatsRecord Cloud Service only. Instances of this class contain information about replica lag for a specific replica. ReplicaStatsResult Cloud Service only. Result returned by GetReplicaStatsAsync . It contains replica statistics for the requested table. Request A base class for the requests classes that represent information about operations issued by NoSQLClient APIs. RequestSizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when the size of a request exceeds the system defined limit. RequestWithTable Base class for information about all operations on a specific table. ResourceExistsException The exception that is thrown when an operation attempted to create a resource that already exists. ResourceNotFoundException The exception that is thrown when an operation attempted to access a resource that does not exist or is not in a visible state. RetryableException Base class for all exceptions that may be retried with a reasonable expectation that the retry may succeed. RowSizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an has been made to create a row with a size that exceeds the system defined limit. RowVersion Represents the version of a row in the database. SecurityInfoNotReadyException Cloud Service only. The exception that is thrown when security information is not ready in the system. ServerException The exception that indicates an internal service problem. ServiceResponseException The exception that is thrown when the service returns unsuccessful HTTP response. ServiceType Specifies the type of Oracle NoSQL service that is used by a NoSQLClient instance. ServiceUnavailableException The exception that is thrown when the service is unavailable. StringValue Represents a string value. SyncPolicy On-Premise only. SyncPolicy defines the synchronization policy to be used when committing a transaction. TableBusyException The exception that is thrown when a table operation fails because the table is in use or busy. TableCompletionOptions Represents options passed to WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) and WaitForLocalReplicaInitAsync methods. TableDDLOptions Represents options for table DDL passed to methods ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) , SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) , SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) and SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) , TableDDLRequest Represents information about table DDL operation performed by ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync methods. TableExistsException The exception that is thrown when attempting to a table when a table with the same name already exists. TableLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create a number of tables that exceeds the system defined limit. TableLimits For Cloud Service/Cloud Simulator only. Table limits are used during table creation to specify the throughput and capacity to be consumed by the table as well as in an operation to change the limits of an existing table. TableLimitsRequest Cloud Service Only. Represents information about operation performed by SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) methods. TableNotFoundException The exception that is thrown when an operation attempted to access a table that does not exist or is not in a visible state. TableNotReadyException Cloud service only. The exception that is thrown when an operation is attempted on a replicated table that is not yet fully initialized. TableOperationRequest Base class for table-level operations such as table DDL, setting table limits, adding and dropping replicas, etc. TableResult Represents the static information about a table. TableSizeLimitException The exception that is thrown when table size limit has been exceeded by writing more data than the table can support. TableState Describes the current state of the table. TableTagsRequest Cloud Service Only. Represents information about operation performed by SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) and SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) methods. TableUsageRecord Cloud Service/Cloud Simulator only. Table usage records are part of TableUsageResult . Each represents a single usage record, or slice, that includes information about read and write throughput consumed during that period as well as the current information regarding the storage capacity. In addition the count of throttling exceptions for the period is reported. TableUsageResult Cloud Service/Cloud Simulator only. Represents the result of GetTableUsage operation. TimestampValue Represents a date and time value. TimeToLive Represents time to live (TTL) of a row in the NoSQL Database. TTLTimeUnit Represents time unit used in a time to live (TTL) value. UnauthorizedException The exception that is thrown when an application does not have sufficient permission to perform a request. UnsupportedProtocolException The exception that is thrown if the service does not support the current driver protocol version. UnsupportedQueryVersionException The exception that is thrown if the service does not support the current query protocol version. UserInfo On-premise only. Represents information associated with a user including the id and user name in the system. WriteManyOptions Represents options passed to WriteManyAsync APIs. WriteManyRequest Base class for WriteManyRequest<TRow> . Only used internally. WriteManyRequest<TRow> Represents information about WriteMany operations performed by WriteManyAsync , PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) and DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) APIs. WriteManyResult<TRow> Represents the result of WriteMany, PutMany or DeleteMany operation. WriteOperationCollection Represents a collection of Put and Delete operations for WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) API. WriteOperationResult<TRow> Represents the result of each Put or Delete sub operation in WriteManyResult<TRow> . WriteRequest Base class for information about all operations that write or delete a row from a table. WriteThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when the provisioned write throughput has been exceeded. Interfaces IAuthorizationProvider Represents a provider used to authorize requests to the Oracle NoSQL Database service. IRateLimiter Cloud Service or Cloud Simulator only. An interface to handle rate limiting in the SDK. IRetryHandler An interface to handle automatic operation retries. IWriteOperation Represents a Put or Delete operation that is part of WriteOperationCollection ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ApplyAuthorizationAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ApplyAuthorizationAsync.html",
    "title": "Method ApplyAuthorizationAsync | NoSQL SDK for .NET",
    "keywords": "Method ApplyAuthorizationAsync ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and adds the required HTTP headers for authorization with IAM. Declaration public Task ApplyAuthorizationAsync(Request request, HttpRequestMessage message, CancellationToken cancellationToken) Parameters Type Name Description Request request The Request object representing the running operation. HttpRequestMessage message HTTP request message. CancellationToken cancellationToken Cancellation token. Returns Type Description Task Task that completes when the required authorization headers are obtained and added to the request message collection. Implements IAuthorizationProvider.ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Remarks This method is called by the driver to obtain and apply the authorization information to the request. You do not need to call this method. The required information includes the authorization generated based on the request signature, the timestamp of the request, the compartment id if present and the delegation token if used with instance principal. Exceptions Type Condition AuthorizationException If failed to generate the request signature. See Also ApplyAuthorizationAsync ( Request , HttpRequestMessage , CancellationToken )"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CacheDuration.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CacheDuration.html",
    "title": "Property CacheDuration | NoSQL SDK for .NET",
    "keywords": "Property CacheDuration CacheDuration Gets or sets the duration of the request signature in the cache. Declaration public TimeSpan CacheDuration { get; set; } Property Value Type Description TimeSpan The cache duration of the request signature. The default value, which is also the maximum allowed value, is 5 minutes. Remarks This property specifies for how long the request signature may be used before the driver needs to create a new signature. Most applications do not need to set this property as the default value of 5 minutes will suffice. The maximum allowed value of this property is the same as the default value, 5 minutes."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ConfigFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ConfigFile.html",
    "title": "Property ConfigFile | NoSQL SDK for .NET",
    "keywords": "Property ConfigFile ConfigFile Gets or sets the path of the OCI configuration file. Declaration public string ConfigFile { get; set; } Property Value Type Description String The path (absolute or relative) to the OCI configuration file that is used to supply the credentials. The default is ~/.oci/config where ~ represents user's home directory on Unix systems and the user's profile directory (see USERPROFILE environment variable) on Windows systems. This property is exclusive with Credentials , CredentialsProvider , UseInstancePrincipal , UseResourcePrincipal and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ConfigureAuthorization.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ConfigureAuthorization.html",
    "title": "Method ConfigureAuthorization | NoSQL SDK for .NET",
    "keywords": "Method ConfigureAuthorization ConfigureAuthorization(NoSQLConfig) Validates and configures the authorization provider. Declaration public void ConfigureAuthorization(NoSQLConfig config) Parameters Type Name Description NoSQLConfig config The initial configuration. Implements IAuthorizationProvider.ConfigureAuthorization(NoSQLConfig) Remarks This method will be called when NoSQLClient instance is created. You do not need to call this method. Exceptions Type Condition ArgumentException If any mutually exclusive properties are set together or any of the credentials set as Credentials or in OCI configuration file are invalid or missing. See Also ConfigureAuthorization ( NoSQLConfig )"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipal.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipal.html",
    "title": "Method CreateWithInstancePrincipal | NoSQL SDK for .NET",
    "keywords": "Method CreateWithInstancePrincipal CreateWithInstancePrincipal(String) Creates a new instance of IAMAuthorizationProvider using the instance principal. Declaration public static IAMAuthorizationProvider CreateWithInstancePrincipal(string federationEndpoint = null) Parameters Type Name Description String federationEndpoint (Optional) The federation endpoint. If not specified, the federation endpoint is auto-detected. Most applications do not need to specify this parameter. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses the instance principal."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipalForDelegation.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipalForDelegation.html",
    "title": "Method CreateWithInstancePrincipalForDelegation | NoSQL SDK for .NET",
    "keywords": "Method CreateWithInstancePrincipalForDelegation CreateWithInstancePrincipalForDelegation(String, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token. Declaration public static IAMAuthorizationProvider CreateWithInstancePrincipalForDelegation(string delegationToken, string federationEndpoint = null) Parameters Type Name Description String delegationToken The delegation token. String federationEndpoint (Optional) The federation endpoint. If not specified, the federation endpoint is auto-detected. Most applications do not need to specify this parameter. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses the instance principal with the specified delegation token. Remarks The delegation token allows the instance to assume the privileges of the user for which the token was created. CreateWithInstancePrincipalForDelegation(Func<CancellationToken, Task<String>>, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token using the specified delegation token provider delegate. Declaration public static IAMAuthorizationProvider CreateWithInstancePrincipalForDelegation(Func<CancellationToken, Task<string>> delegationTokenProvider, string federationEndpoint = null) Parameters Type Name Description Func < CancellationToken , Task < String >> delegationTokenProvider The delegation token provider delegate. String federationEndpoint (Optional) The federation endpoint. If not specified, the federation endpoint is auto-detected. Most applications do not need to specify this parameter. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses the instance principal and the specified delegation token provider delegate. Remarks The delegation token allows the instance to assume the privileges of the user for which the token was created. The delegation token provider delegate will be used to obtain the delegation token each time the request signature is renewed."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipalForDelegationFromFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithInstancePrincipalForDelegationFromFile.html",
    "title": "Method CreateWithInstancePrincipalForDelegationFromFile | NoSQL SDK for .NET",
    "keywords": "Method CreateWithInstancePrincipalForDelegationFromFile CreateWithInstancePrincipalForDelegationFromFile(String, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token using the specified delegation file. Declaration public static IAMAuthorizationProvider CreateWithInstancePrincipalForDelegationFromFile(string delegationTokenFile, string federationEndpoint = null) Parameters Type Name Description String delegationTokenFile Path to the delegation token file. String federationEndpoint (Optional) The federation endpoint. If not specified, the federation endpoint is auto-detected. Most applications do not need to specify this parameter. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses the instance principal and the specified delegation token file. Remarks The delegation token allows the instance to assume the privileges of the user for which the token was created. The delegation token file will be read to obtain the delegation token each time the request signature is renewed. See Also DelegationTokenFile"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithOKEWorkloadIdentity.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithOKEWorkloadIdentity.html",
    "title": "Method CreateWithOKEWorkloadIdentity | NoSQL SDK for .NET",
    "keywords": "Method CreateWithOKEWorkloadIdentity CreateWithOKEWorkloadIdentity(String) Creates a new instance of IAMAuthorizationProvider using OKE workload identity. Declaration public static IAMAuthorizationProvider CreateWithOKEWorkloadIdentity(string serviceAccountToken = null) Parameters Type Name Description String serviceAccountToken (Optional) Service account token string. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider using OKE workload identity. Remarks For more information see UseOKEWorkloadIdentity . This method allows you to specify optional service account token string. If not specified, the service account token will be read from the default file path /var/run/secrets/kubernetes.io/serviceaccount/token . See Also UseOKEWorkloadIdentity CreateWithOKEWorkloadIdentity(Func<CancellationToken, Task<String>>) Creates a new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token provider delegate. Declaration public static IAMAuthorizationProvider CreateWithOKEWorkloadIdentity(Func<CancellationToken, Task<string>> serviceAccountTokenProvider) Parameters Type Name Description Func < CancellationToken , Task < String >> serviceAccountTokenProvider The service Account token provider delegate. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token provider delegate. Remarks For more information see UseOKEWorkloadIdentity . This method allows you to specify service account token provider delegate used to obtain the service account token."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithOKEWorkloadIdentityAndTokenFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithOKEWorkloadIdentityAndTokenFile.html",
    "title": "Method CreateWithOKEWorkloadIdentityAndTokenFile | NoSQL SDK for .NET",
    "keywords": "Method CreateWithOKEWorkloadIdentityAndTokenFile CreateWithOKEWorkloadIdentityAndTokenFile(String) Creates a new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token file. Declaration public static IAMAuthorizationProvider CreateWithOKEWorkloadIdentityAndTokenFile(string serviceAccountTokenFile) Parameters Type Name Description String serviceAccountTokenFile Path to the service account token file. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token file. Remarks For more information see UseOKEWorkloadIdentity . This method allows you to specify a path to the service account token file."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithResourcePrincipal.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithResourcePrincipal.html",
    "title": "Method CreateWithResourcePrincipal | NoSQL SDK for .NET",
    "keywords": "Method CreateWithResourcePrincipal CreateWithResourcePrincipal() Creates a new instance of IAMAuthorizationProvider using the resource principal. Declaration public static IAMAuthorizationProvider CreateWithResourcePrincipal() Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses the resource principal."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithSessionToken.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithSessionToken.html",
    "title": "Method CreateWithSessionToken | NoSQL SDK for .NET",
    "keywords": "Method CreateWithSessionToken CreateWithSessionToken() Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the default OCI configuration file and the default profile name. Declaration public static IAMAuthorizationProvider CreateWithSessionToken() Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses session-token based authentication. See Also ConfigFile ProfileName UseSessionToken CreateWithSessionToken(String) Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the default OCI configuration file and the specified profile name. Declaration public static IAMAuthorizationProvider CreateWithSessionToken(string profileName) Parameters Type Name Description String profileName Name of the profile within the OCI configuration file. Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses session-token based authentication. See Also ConfigFile ProfileName UseSessionToken CreateWithSessionToken(String, String) Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the specified OCI configuration file and profile name. Declaration public static IAMAuthorizationProvider CreateWithSessionToken(string configFile, string profileName) Parameters Type Name Description String configFile The path (absolute or relative) to the OCI configuration file. String profileName Name of the profile within the OCI configuration file. If null , default profile name will be used (see ProfileName ). Returns Type Description IAMAuthorizationProvider A new instance of IAMAuthorizationProvider that uses session-token based authentication. See Also ConfigFile ProfileName UseSessionToken"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.Credentials.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.Credentials.html",
    "title": "Property Credentials | NoSQL SDK for .NET",
    "keywords": "Property Credentials Credentials Gets or sets the credentials for the specific user identity. Declaration public IAMCredentials Credentials { get; set; } Property Value Type Description IAMCredentials The credentials for the specific user identity. This property is exclusive with ConfigFile , ProfileName , CredentialsProvider , UseInstancePrincipal , UseResourcePrincipal , UseSessionToken and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CredentialsProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.CredentialsProvider.html",
    "title": "Property CredentialsProvider | NoSQL SDK for .NET",
    "keywords": "Property CredentialsProvider CredentialsProvider Gets or sets the credentials provider delegate. Declaration public Func<CancellationToken, Task<IAMCredentials>> CredentialsProvider { get; set; } Property Value Type Description Func < CancellationToken , Task < IAMCredentials >> The credentials provider delegate to supply the credentials for the specific user's identity. This property is exclusive with Credentials , ConfigFile , ProfileName , UseInstancePrincipal , UseResourcePrincipal , UseSessionToken and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.-ctor.html",
    "title": "Constructor IAMAuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Constructor IAMAuthorizationProvider IAMAuthorizationProvider() Initializes a new instance of IAMAuthorizationProvider with default configuration. Declaration public IAMAuthorizationProvider() Remarks Upon using this constructor, you may set the properties described to create the desired configuration. Otherwise, the default configuration is used, which obtains credentials from the OCI configuration file using default OCI configuration file path and the default profile name as indicated in ConfigFile and ProfileName . See Also ConfigFile ProfileName IAMAuthorizationProvider(String) Initializes a new instance of IAMAuthorizationProvider using the default OCI configuration file and the specified profile name. Declaration public IAMAuthorizationProvider(string profileName) Parameters Type Name Description String profileName The profile name within the default OCI configuration file. Remarks This constructor uses the OCI configuration file at the default path specified in ConfigFile . See Also ConfigFile ProfileName IAMAuthorizationProvider(String, String) Initializes a new instance of IAMAuthorizationProvider using specified OCI configuration file and profile name. Declaration public IAMAuthorizationProvider(string configFile, string profileName) Parameters Type Name Description String configFile The path (absolute or relative) to the OCI configuration file. String profileName Name of the profile within the OCI configuration file. If null , default profile name will be used (see ProfileName ). See Also ConfigFile ProfileName IAMAuthorizationProvider(IAMCredentials) Initializes a new instance of IAMAuthorizationProvider with the specified credentials. Declaration public IAMAuthorizationProvider(IAMCredentials credentials) Parameters Type Name Description IAMCredentials credentials Credentials for the specific user identity. See Also Credentials IAMAuthorizationProvider(Func<CancellationToken, Task<IAMCredentials>>) Initializes a new instance of IAMAuthorizationProvider using specified credentials provider delegate. Declaration public IAMAuthorizationProvider(Func<CancellationToken, Task<IAMCredentials>> credentialsProvider) Parameters Type Name Description Func < CancellationToken , Task < IAMCredentials >> credentialsProvider Credentials provider delegate used to obtain the user's credentials. See Also CredentialsProvider"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.DelegationTokenFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.DelegationTokenFile.html",
    "title": "Property DelegationTokenFile | NoSQL SDK for .NET",
    "keywords": "Property DelegationTokenFile DelegationTokenFile Gets or sets the delegation token file path. Declaration public string DelegationTokenFile { get; set; } Property Value Type Description String The delegation token file path (absolute or relative to current directory). This property is exclusive with both DelegationTokenProvider property and providing delegation token directly via CreateWithInstancePrincipalForDelegation(String, String) . Remarks This property can only be used only with instance principal. The delegation token allows the instance to assume the privileges of the user for which the token was created and act on behalf of that user. The delegation token file is read each time the request signature is renewed. You may also use the property in JSON configuration file (see examples). See Also CreateWithInstancePrincipalForDelegationFromFile(String, String)"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.DelegationTokenProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.DelegationTokenProvider.html",
    "title": "Property DelegationTokenProvider | NoSQL SDK for .NET",
    "keywords": "Property DelegationTokenProvider DelegationTokenProvider Gets or sets the delegation token provider delegate. Declaration public Func<CancellationToken, Task<string>> DelegationTokenProvider { get; set; } Property Value Type Description Func < CancellationToken , Task < String >> The delegation token file path (absolute or relative to current directory). This property is exclusive with both DelegationTokenFile property and providing delegation token directly via CreateWithInstancePrincipalForDelegation(String, String) . Remarks This property can only be used only with instance principal. The delegation token allows the instance to assume the privileges of the user for which the token was created and act on behalf of that user. The delegation token provider delegate is called to obtain the delegation token each time the request signature is renewed. See Also CreateWithInstancePrincipalForDelegation(Func<CancellationToken, Task<String>>, String)"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.Dispose.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.Dispose.html",
    "title": "Method Dispose | NoSQL SDK for .NET",
    "keywords": "Method Dispose Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources, false to release only unmanaged resources. Remarks This method is called by the public Dispose() method and the Finalize() method. See Also Implementing a Dispose Method Dispose() Releases resources used by this IAMAuthorizationProvider instance. Declaration public void Dispose() Remarks Applications should not call this method. The driver will call this method when NoSQLClient instance is disposed."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.FederationEndpoint.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.FederationEndpoint.html",
    "title": "Property FederationEndpoint | NoSQL SDK for .NET",
    "keywords": "Property FederationEndpoint FederationEndpoint Gets or sets the federation endpoint for use with instance principal. Declaration public string FederationEndpoint { get; set; } Property Value Type Description String The federation endpoint to communicate with the IAM service. If not set, the federation endpoint is auto-detected. Remarks Federation endpoint is the endpoint used by instance principal to obtain the security token used to create the request signature. In most cases the applications do not need to set this property because the driver will detect the federation endpoint automatically. This property is used only with instance principal and is ignored otherwise."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.html",
    "title": "Class IAMAuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Class IAMAuthorizationProvider Authorization provider for the Oracle NoSQL Database Cloud Service. Inheritance Object IAMAuthorizationProvider Implements IAuthorizationProvider IDisposable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IAMAuthorizationProvider : Object, IAuthorizationProvider Remarks This provider class is used to authorize operations using Oracle Cloud Infrastructure Identity and Access Management (IAM). The instance of this class should be set as AuthorizationProvider in the initial configuration. See Overview of Oracle Cloud Infrastructure Identity and Access Management for information on IAM components and how they work together to provide security for Oracle Cloud services. All operations require a request signature that is used by the system to authorize the operation. The request signature may be created using one of the following: Specific user's identity. See the information below on what credentials are required and how to obtain them, as well how these credentials may be provided to IAMAuthorizationProvider . Instance Principal. You may use Instance Principal when calling Oracle NoSQL Database Cloud Service from a compute instance in the Oracle Cloud Infrastructure (OCI). See Calling Services from an Instance for more information. The driver authenticates with the instance principal and obtains a security token issued by IAM to create the request signature. Use Instance Principal by setting UseInstancePrincipal to true or calling CreateWithInstancePrincipal(String) or CreateWithInstancePrincipalForDelegation . Resource Principal. You may use Resource Principal when calling Oracle NoSQL Database Cloud Service from other Oracle Cloud service resource such as Functions . See Accessing Other Oracle Cloud Infrastructure Resources from Running Functions for more information. The driver obtains a resource provider session token (RPST) that enables the resource such as function to authenticate itself. The RPST is used to create the request signature. Use Resource Principal by setting UseResourcePrincipal to true or calling CreateWithResourcePrincipal() . Oracle Container Engine for Kubernetes (OKE) workload identity. You may use OKE workload identity when running an application inside Kubernetes cluster. For information on Container Engine for Kubernetes, see Overview of Container Engine for Kubernetes . Also see Granting Workloads Access to OCI Resources for more details on OKE workload identity. Use OKE workload identity by setting UseOKEWorkloadIdentity to true or calling CreateWithOKEWorkloadIdentity or CreateWithOKEWorkloadIdentityAndTokenFile(String) . See UseOKEWorkloadIdentity for more information. Session Token. Session Token-Based Authentication uses temporary session token read from a token file. The path of the token file is read from a profile in OCI configuration file as the value of field security_token_file . See SDK Configuration File for details of the file's contents and format. For session token-based authentication, the properties required in the OCI config file by the driver are tenancy for tenant OCID, security_token_file for security token file and key_file for private key file. You may also specify pass_phrase and region properties. The same considerations apply as described below when using OCI config file with specific user's identity. You can use the OCI CLI to authenticate and create a session token (together with the profile in OCI config file that uses that session token), see Token-based Authentication for the CLI . Use Session Token by setting UseSessionToken to true or calling one of CreateWithSessionToken methods. Note that when using Instance Principal, Resource Principal or OKE workload identity, you must specify the compartment id (OCID), either as Compartment or in the operation options. You must use compartment id (OCID) and not the compartment name. This also means that you may not prefix the table name with the compartment name when passing the table name to the NoSQLClient APIs or in queries. These restrictions do not apply when using the specific user identity, which is best for naming flexibility, allowing both compartment names and OCIDs. The driver caches the request signature for a configurable duration CacheDuration with a maximum of 5 minutes. In addition, the driver can optionally renew the request signature in the background ahead of its expiration. The automatic renewal is controlled by RefreshAhead property. The information that follows describes the steps to use the specific user identity and does not apply to using instance principal or resource principal. To use the specific user's identity, you must provide the following credentials: Tenancy OCID. This is Oracle Cloud ID (OCID) for your tenancy. See Resource Identifiers for information on OCIDs. User's OCID. This is Oracle Cloud ID (OCID) for the user in your tenancy. See Resource Identifiers for information on OCIDs. API Signing Key. This is public-private key pair used to sign the API requests. See Required Keys and OCIDs for details. In particular, the private key is needed to generate the request signature. Public Key Fingerprint. This is an identifier of the public key of the API Signing Key pair. Passphrase for the private key of API Signing Key pair if the private key is encrypted. To enable signing of API requests, perform the following steps: Generate the key pair described above. Upload the public key. Obtain the tenancy and user OCIDs and the public key fingerprint. Required Keys and OCIDs describes these steps in detail. You may set the credentials using one of the following, in order of increasing security: As IAMCredentials object set as Credentials or using IAMAuthorizationProvider(IAMCredentials) constructor. You must set the properties TenantId , UserId , Fingerprint and one of PrivateKey , PrivateKeyPEM or PrivateKeyFile . In addition, you must set Passphrase if the private key is encrypted. As part of the OCI configuration file. See SDK and CLI Configuration File for information on the OCI configuration file format. Set properties ConfigFile and ProfileName or use IAMAuthorizationProvider(String, String) constructor. Because both of these properties have default values, the default instance of IAMAuthorizationProvider is configured to use credentials from the default OCI configuration file with the default profile name. In fact, the driver will create this default instance if you don't set AuthorizationProvider . Note that the driver will load the credentials from the OCI configuration file only once. Note that if using an OCI configuration file, you may also specify region identifier in the same profile as your credentials. In this case, you need not specify either region or endpoint in NoSQLConfig . In particular, if you use the default OCI config file ( ~/.oci/config ) and default profile name ( DEFAULT ) and do not need to customize any other configuration properties, you may create NoSQLClient instance without providing any arguments to the NoSQLClient constructor. See NoSQLClient(NoSQLConfig) for more information. Specify your own credentials provider delegate as CredentialsProvider or use IAMAuthorizationProvider(Func<CancellationToken, Task<IAMCredentials>>) constructor. This is the most secure option because you can choose where the credentials are stored and how they are accessed. The credentials provider delegate will be called every time the credentials are needed (when the request signature is renewed). The private key, if provided in a file or as a string, must be in PEM format. It can be either in PKCS#8 format (starts with -----BEGIN PRIVATE KEY----- or -----BEGIN ENCRYPTED PRIVATE KEY----- ) or PKCS#1 format (starts with -----BEGIN RSA PRIVATE KEY----- ). PKCS#8 format is preferred. There is a limitation for encrypted private keys in PKCS#1 format in that it must use AES encryption (with key sizes of 128, 192 or 256 bits). Otherwise, if you have an encrypted private key in PKCS#1 format, you can convert it to PKCS#8 using openssl: <!-- ReSharper disable MarkupTextTypo --> openssl pkcs8 -topk8 -inform PEM -outform PEM -in encrypted_pkcs1_key.pem -out encrypted_pkcs8_key.pem <!-- ReSharper restore MarkupTextTypo --> The examples show the ways to instantiate IAMAuthorizationProvider for different authorization scenarios outlined above. Examples Instantiating IAMAuthorizationProvider with specified credentials. var config = new NoSQLConfig { Region = Region.AP_SYDNEY_1, AuthorizationProvider = new IAMAuthorizationProvider( new IAMCredentials { TenantId = \"ocid1.tenancy.oc...................\", UserId = \"ocid1.user.oc........................\", Fingerprint = \"aa:aa:aa:aa:....................\", PrivateKeyFile = \"~/my_app/security/oci_api_key.pem\", Passphrase = \".................................\" } }; Specifying IAMAuthorizationProvider with specified credentials in JSON configuration file (note that storing the passphrase in the configuration file is not secure, use this for development/testing only). { \"Region\": \"ap-sydney-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"Credentials\": { \"TenantId\": \"ocid1.tenancy.oc...................\", \"UserId\": \"ocid1.user.oc........................\", \"Fingerprint\": \"aa:aa:aa:aa:....................\", \"PrivateKeyFile\": \"~/my_app/security/oci_api_key.pem\", \"Passphrase\": \".................................\" } } } Instantiating IAMAuthorizationProvider using the credentials in the OCI configuration file var config = new NoSQLConfig { Region = Region.AP_TOKYO_1, AuthorizationProvider = new IAMAuthorizationProvider( \"~/my_app/.oci/config\", \"Jane\") }; Specifying IAMAuthorizationProvider in JSON configuration file using the credentials in OCI configuration file. { \"Region\": \"ap-tokyo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"ConfigFile\": \"~/my_app/.oci/config\", \"ProfileName\": \"Jane\" } } Instantiating IAMAuthorizationProvider using credentials supplied by the credentials provider delegate. ... public static async Task<IAMCredentials> LoadCredentialsAsync( CancellationToken cancellationToken) { // Load the credentials from a secure location. return new IAMCredentials { TenantId = \"...\", UserId = \"...\", ... }; } ... var config = new NoSQLConfig { Region = Region.US_SANJOSE_1, AuthorizationProvider = new IAMAuthorizationProvider( LoadCredentialsAsync) }; Instantiating IAMAuthorizationProvider using instance principal. var config = new NoSQLConfig { Region = Region.SA_SAOPAULO_1, AuthorizationProvider = IAMAuthorizationProvider.CreateWithInstancePrincipal() }; Specifying IAMAuthorizationProvider using instance principal in JSON configuration file. { \"Region\": \"sa-saopaulo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseInstancePrincipal\": true } Instantiating IAMAuthorizationProvider using instance principal with delegation token. // Obtain delegation token somehow. var delegationToken = GetDelegationToken(); var config = new NoSQLConfig { Region = Region.SA_SAOPAULO_1, AuthorizationProvider = IAMAuthorizationProvider .CreateWithInstancePrincipalForDelegation( delegationToken); }; Specifying IAMAuthorizationProvider using instance principal with delegation token in JSON configuration file (the delegation token is stored in a separate file \"delegation_token_file\"). { \"Region\": \"sa-saopaulo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseInstancePrincipal\": true, \"DelegationTokenFile\": \"path/to/delegation_token_file\" } } Instantiating IAMAuthorizationProvider using resource principal. var config = new NoSQLConfig { Region = Region.SA_SAOPAULO_1, AuthorizationProvider = IAMAuthorizationProvider.CreateWithResourcePrincipal() }; Specifying IAMAuthorizationProvider using resource principal in JSON configuration file. { \"Region\": \"sa-saopaulo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseResourcePrincipal\": true } } Instantiating IAMAuthorizationProvider using OKE workload identity. var config = new NoSQLConfig { Region = Region.AP_MUMBAI_1, AuthorizationProvider = IAMAuthorizationProvider .CreateWithOKEWorkloadIdentity() }; Specifying IAMAuthorizationProvider using OKE workload identity in JSON configuration file. { \"Region\": \"sa-saopaulo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseOKEWorkloadIdentity\": true } } Instantiating IAMAuthorizationProvider using OKE workload identity and provided service account token. // Obtain service account token somehow. var serviceAccountToken = GetServiceAccountToken(); var config = new NoSQLConfig { Region = Region.AP_MUMBAI_1, AuthorizationProvider = IAMAuthorizationProvider .CreateWithOKEWorkloadIdentity(serviceAccountToken) }; Specifying IAMAuthorizationProvider using OKE workload identity with provided service account token in JSON configuration file (service account token is stored in a separate file \"service_account_token_file\"). { \"Region\": \"sa-saopaulo-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseOKEWorkloadIdentity\": true, \"ServiceAccountTokenFile\": \"path/to/service_account_token_file\" } } Instantiating IAMAuthorizationProvider using session token. var config = new NoSQLConfig { Region = Region.AP_SYDNEY_1, AuthorizationProvider = IAMAuthorizationProvider.CreateWithSessionToken( \"~/my_app/.oci/config\", \"Jane\") }; Specifying IAMAuthorizationProvider using session token in JSON configuration file. { \"Region\": \"ap-sydney-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseSessionToken\": true, \"ConfigFile\": \"~/my_app/.oci/config\", \"ProfileName\": \"Jane\" } } Constructors Name Description IAMAuthorizationProvider() Initializes a new instance of IAMAuthorizationProvider with default configuration. IAMAuthorizationProvider(IAMCredentials) Initializes a new instance of IAMAuthorizationProvider with the specified credentials. IAMAuthorizationProvider(Func<CancellationToken, Task<IAMCredentials>>) Initializes a new instance of IAMAuthorizationProvider using specified credentials provider delegate. IAMAuthorizationProvider(String) Initializes a new instance of IAMAuthorizationProvider using the default OCI configuration file and the specified profile name. IAMAuthorizationProvider(String, String) Initializes a new instance of IAMAuthorizationProvider using specified OCI configuration file and profile name. Properties Name Description CacheDuration Gets or sets the duration of the request signature in the cache. ConfigFile Gets or sets the path of the OCI configuration file. Credentials Gets or sets the credentials for the specific user identity. CredentialsProvider Gets or sets the credentials provider delegate. DelegationTokenFile Gets or sets the delegation token file path. DelegationTokenProvider Gets or sets the delegation token provider delegate. FederationEndpoint Gets or sets the federation endpoint for use with instance principal. ProfileName Gets or sets the profile name in the OCI configuration file. RefreshAhead Gets or sets the value indicating when to automatically refresh the request signature before its expiration. RequestTimeout Gets or sets the timeout for requests made to the authorization service. ServiceAccountTokenFile Gets or sets the service account token file path. UseInstancePrincipal Gets or sets the value that determines whether to use an instance principal. UseOKEWorkloadIdentity Gets or sets a value that determines whether to use authorization for Oracle Container Engine for Kubernetes (OKE) workload identity. This authorization can only be used inside Kubernetes pods. UseResourcePrincipal Gets or sets the value that determines whether to use a resource principal. UseSessionToken Gets or sets the value that determines whether to use a session token. Methods Name Description ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and adds the required HTTP headers for authorization with IAM. ConfigureAuthorization(NoSQLConfig) Validates and configures the authorization provider. CreateWithInstancePrincipal(String) Creates a new instance of IAMAuthorizationProvider using the instance principal. CreateWithInstancePrincipalForDelegation(Func<CancellationToken, Task<String>>, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token using the specified delegation token provider delegate. CreateWithInstancePrincipalForDelegation(String, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token. CreateWithInstancePrincipalForDelegationFromFile(String, String) Creates a new instance of IAMAuthorizationProvider using an instance principal with a delegation token using the specified delegation file. CreateWithOKEWorkloadIdentity(Func<CancellationToken, Task<String>>) Creates a new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token provider delegate. CreateWithOKEWorkloadIdentity(String) Creates a new instance of IAMAuthorizationProvider using OKE workload identity. CreateWithOKEWorkloadIdentityAndTokenFile(String) Creates a new instance of IAMAuthorizationProvider using OKE workload identity and specified service account token file. CreateWithResourcePrincipal() Creates a new instance of IAMAuthorizationProvider using the resource principal. CreateWithSessionToken() Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the default OCI configuration file and the default profile name. CreateWithSessionToken(String) Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the default OCI configuration file and the specified profile name. CreateWithSessionToken(String, String) Creates a new instance of IAMAuthorizationProvider using session token-based authentication with the specified OCI configuration file and profile name. Dispose() Releases resources used by this IAMAuthorizationProvider instance. Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ProfileName.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ProfileName.html",
    "title": "Property ProfileName | NoSQL SDK for .NET",
    "keywords": "Property ProfileName ProfileName Gets or sets the profile name in the OCI configuration file. Declaration public string ProfileName { get; set; } Property Value Type Description String The profile name in the OCI configuration file if the OCI configuration file is used to supply the credentials. The default profile name is DEFAULT . This property is exclusive with Credentials , CredentialsProvider , UseInstancePrincipal , UseResourcePrincipal and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.RefreshAhead.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.RefreshAhead.html",
    "title": "Property RefreshAhead | NoSQL SDK for .NET",
    "keywords": "Property RefreshAhead RefreshAhead Gets or sets the value indicating when to automatically refresh the request signature before its expiration. Declaration public TimeSpan RefreshAhead { get; set; } Property Value Type Description TimeSpan The time interval indicating how long before the signature expiration the signature should be refreshed. The default value is 10 seconds. To disable automatic refresh, set this value to Zero . Remarks The default value of 10 seconds will suffice for most applications."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.RequestTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.RequestTimeout.html",
    "title": "Property RequestTimeout | NoSQL SDK for .NET",
    "keywords": "Property RequestTimeout RequestTimeout Gets or sets the timeout for requests made to the authorization service. Declaration public TimeSpan RequestTimeout { get; set; } Property Value Type Description TimeSpan The timeout for requests made to the authorization service. The default is 2 minutes (120 seconds). Remarks Currently the driver needs to make requests to the authorization service only when using instance principal or OKE workload identity. The default value will suffice for most applications."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ServiceAccountTokenFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.ServiceAccountTokenFile.html",
    "title": "Property ServiceAccountTokenFile | NoSQL SDK for .NET",
    "keywords": "Property ServiceAccountTokenFile ServiceAccountTokenFile Gets or sets the service account token file path. Declaration public string ServiceAccountTokenFile { get; set; } Property Value Type Description String The service account token file path (absolute or relative to the current directory). Defaults to /var/run/secrets/kubernetes.io/serviceaccount/token . Remarks This property is only used with OKE workload identity. Use this property to provide a path to service account token file. Service account token will be reloaded from this file when obtaining IAM security token. You may also use this property in JSON configuration file (see examples). This property is exclusive with using service account token string or service account token provider with Oracle.NoSQL.SDK.IAMAuthorizationProvider.CreateWithOKEWorkloadIdentity . Alternative to this property, you may also create IAMAuthorizationProvider instance via CreateWithOKEWorkloadIdentityAndTokenFile(String) See Also UseOKEWorkloadIdentity CreateWithOKEWorkloadIdentityAndTokenFile(String)"
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseInstancePrincipal.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseInstancePrincipal.html",
    "title": "Property UseInstancePrincipal | NoSQL SDK for .NET",
    "keywords": "Property UseInstancePrincipal UseInstancePrincipal Gets or sets the value that determines whether to use an instance principal. Declaration public bool UseInstancePrincipal { get; set; } Property Value Type Description Boolean true to use an instance principal, otherwise false . The default is false . The true value is exclusive with Credentials , ConfigFile , ProfileName , CredentialsProvider , UseResourcePrincipal , UseSessionToken and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseOKEWorkloadIdentity.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseOKEWorkloadIdentity.html",
    "title": "Property UseOKEWorkloadIdentity | NoSQL SDK for .NET",
    "keywords": "Property UseOKEWorkloadIdentity UseOKEWorkloadIdentity Gets or sets a value that determines whether to use authorization for Oracle Container Engine for Kubernetes (OKE) workload identity. This authorization can only be used inside Kubernetes pods. Declaration public bool UseOKEWorkloadIdentity { get; set; } Property Value Type Description Boolean true to use an OKE workload identity, otherwise false . The default is false . The true value is exclusive with Credentials , ConfigFile , ProfileName , CredentialsProvider , UseResourcePrincipal , UseInstancePrincipal and UseSessionToken . Remarks For information on Container Engine for Kubernetes, see Overview of Container Engine for Kubernetes . Also see Granting Workloads Access to OCI Resources for more details on OKE workload identity. Using OKE workload identity requires service account token. By default, the provider will load service account token from the default file path /var/run/secrets/kubernetes.io/serviceaccount/token . You may override this and provide your own service account token by creating IAMAuthorizationProvider in 3 different ways: By calling CreateWithOKEWorkloadIdentity(String) and passing service account token string. By calling CreateWithOKEWorkloadIdentityAndTokenFile(String) and passing a path to service account token file. Alternatively, you may set ServiceAccountTokenFile property. This file will be read every time the SDK needs to obtain security token from IAM. By calling CreateWithOKEWorkloadIdentity(Func<CancellationToken, Task<String>>) and passing a custom provider delegate to load service account token. This delegate will be invoked every time the SDK needs to obtain security token from IAM."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseResourcePrincipal.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseResourcePrincipal.html",
    "title": "Property UseResourcePrincipal | NoSQL SDK for .NET",
    "keywords": "Property UseResourcePrincipal UseResourcePrincipal Gets or sets the value that determines whether to use a resource principal. Declaration public bool UseResourcePrincipal { get; set; } Property Value Type Description Boolean true to use a resource principal, otherwise false . The default is false . The true value is exclusive with Credentials , ConfigFile , ProfileName , CredentialsProvider , UseInstancePrincipal , UseSessionToken and UseOKEWorkloadIdentity ."
  },
  "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseSessionToken.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMAuthorizationProvider.UseSessionToken.html",
    "title": "Property UseSessionToken | NoSQL SDK for .NET",
    "keywords": "Property UseSessionToken UseSessionToken Gets or sets the value that determines whether to use a session token. Declaration public bool UseSessionToken { get; set; } Property Value Type Description Boolean true to use session token, otherwise false . The default is false . The true value is exclusive with Credentials , CredentialsProvider , UseInstancePrincipal , UseResourcePrincipal and UseOKEWorkloadIdentity . Remarks Because this method uses OCI Configuration File, you may specify the path to the configuration file and the profile within the configuration file using one of the CreateWithSessionToken methods or properties ConfigFile and ProfileName . The same defaults apply."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.-ctor.html",
    "title": "Constructor IAMCredentials | NoSQL SDK for .NET",
    "keywords": "Constructor IAMCredentials IAMCredentials() Declaration public IAMCredentials()"
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.Fingerprint.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.Fingerprint.html",
    "title": "Property Fingerprint | NoSQL SDK for .NET",
    "keywords": "Property Fingerprint Fingerprint Gets or sets the public key fingerprint. Declaration public string Fingerprint { get; set; } Property Value Type Description String Public key fingerprint."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.html",
    "title": "Class IAMCredentials | NoSQL SDK for .NET",
    "keywords": "Class IAMCredentials Represents the credentials used by IAMAuthorizationProvider when authenticating using the specific user identity. Inheritance Object IAMCredentials Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IAMCredentials : Object Remarks See Required Keys and OCIDs on how to obtained the required credentials. For private key, supply only one of the properties PrivateKey , PrivateKeyPEM or PrivateKeyFile . Note that if the private key is encrypted, it must be in PKCS#8 format. See IAMAuthorizationProvider for details. Constructors Name Description IAMCredentials() Properties Name Description Fingerprint Gets or sets the public key fingerprint. Passphrase Gets or sets the private key passphrase if private key is encrypted. PrivateKey Gets or sets the private key as an RSA object. PrivateKeyFile Gets or sets the path to the PEM private key file. PrivateKeyPEM Gets or sets the private key in PEM format. TenantId Gets or sets the tenancy OCID. UserId Gets or sets the user OCID. See Also IAMAuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.Passphrase.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.Passphrase.html",
    "title": "Property Passphrase | NoSQL SDK for .NET",
    "keywords": "Property Passphrase Passphrase Gets or sets the private key passphrase if private key is encrypted. Declaration public char[] Passphrase { get; set; } Property Value Type Description Char [] The private key passphrase if the private key is encrypted, otherwise null . Remarks For added security, the application may erase the passphrase from memory after NoSQLClient instance is disposed of. This erase is done by the driver for credentials returned as the result of CredentialsProvider delegate."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKey.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKey.html",
    "title": "Property PrivateKey | NoSQL SDK for .NET",
    "keywords": "Property PrivateKey PrivateKey Gets or sets the private key as an RSA object. Declaration public RSA PrivateKey { get; set; } Property Value Type Description RSA The value of the private key as loaded into an RSA algorithm object. This property is exclusive with PrivateKeyPEM and PrivateKeyFile . Remarks This property is for advanced usage. Most applications should use PrivateKeyPEM or PrivateKeyFile . Note that the driver will not call Dispose() on the RSA object. The application should dispose of the RSA object after the NoSQLClient instance is disposed."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKeyFile.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKeyFile.html",
    "title": "Property PrivateKeyFile | NoSQL SDK for .NET",
    "keywords": "Property PrivateKeyFile PrivateKeyFile Gets or sets the path to the PEM private key file. Declaration public string PrivateKeyFile { get; set; } Property Value Type Description String The path (absolute or relative) to the file containing the private key in PEM format. This property is exclusive with PrivateKey and PrivateKeyPEM ."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKeyPEM.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.PrivateKeyPEM.html",
    "title": "Property PrivateKeyPEM | NoSQL SDK for .NET",
    "keywords": "Property PrivateKeyPEM PrivateKeyPEM Gets or sets the private key in PEM format. Declaration public string PrivateKeyPEM { get; set; } Property Value Type Description String Private key in PEM format. This property is exclusive with PrivateKey and PrivateKeyFile ."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.TenantId.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.TenantId.html",
    "title": "Property TenantId | NoSQL SDK for .NET",
    "keywords": "Property TenantId TenantId Gets or sets the tenancy OCID. Declaration public string TenantId { get; set; } Property Value Type Description String Tenancy OCID."
  },
  "api/Oracle.NoSQL.SDK.IAMCredentials.UserId.html": {
    "href": "api/Oracle.NoSQL.SDK.IAMCredentials.UserId.html",
    "title": "Property UserId | NoSQL SDK for .NET",
    "keywords": "Property UserId UserId Gets or sets the user OCID. Declaration public string UserId { get; set; } Property Value Type Description String User OCID."
  },
  "api/Oracle.NoSQL.SDK.IAuthorizationProvider.ApplyAuthorizationAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.IAuthorizationProvider.ApplyAuthorizationAsync.html",
    "title": "Method ApplyAuthorizationAsync | NoSQL SDK for .NET",
    "keywords": "Method ApplyAuthorizationAsync ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and supplies the authorization information to the request. Declaration Task ApplyAuthorizationAsync(Request request, HttpRequestMessage message, CancellationToken cancellationToken) Parameters Type Name Description Request request The Request object representing the running operation. HttpRequestMessage message HTTP request message for the request. CancellationToken cancellationToken Cancellation token. Returns Type Description Task Task that completes when the required authorization information is obtained and added to the request message . Remarks message parameter is the HTTP request message and contains both the headers and the content of the request message. Modify this message to supply the required authorization information. Normally this involves adding authorization headers, for which you can use Headers property of HttpRequestMessage to access the HttpRequestHeaders collection of the request message. Obtaining the required authorization information may be an asynchronous operation, thus this method is asynchronous. Exceptions Type Condition AuthorizationException If failed to obtain the required authorization information. Use this exception to wrap any provider-specific exception."
  },
  "api/Oracle.NoSQL.SDK.IAuthorizationProvider.ConfigureAuthorization.html": {
    "href": "api/Oracle.NoSQL.SDK.IAuthorizationProvider.ConfigureAuthorization.html",
    "title": "Method ConfigureAuthorization | NoSQL SDK for .NET",
    "keywords": "Method ConfigureAuthorization ConfigureAuthorization(NoSQLConfig) Configures the provider. Declaration void ConfigureAuthorization(NoSQLConfig config) Parameters Type Name Description NoSQLConfig config The initial configuration. Remarks This method allows you to configure the provider by optionally using the information provided in the initial configuration used to create NoSQLClient instance such as the service endpoint, region, etc. It is called by the driver only once when the NoSQLClient instance is created. Exceptions Type Condition ArgumentException If the initialization fails because any of the required information is missing or invalid."
  },
  "api/Oracle.NoSQL.SDK.IAuthorizationProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.IAuthorizationProvider.html",
    "title": "Interface IAuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Interface IAuthorizationProvider Represents a provider used to authorize requests to the Oracle NoSQL Database service. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public interface IAuthorizationProvider Remarks The authorization provider is set as AuthorizationProvider in the initial configuration used to create NoSQLClient instance. The authorization is required when using Oracle NoSQL Cloud Service as well as on-premise Oracle NoSQL Database in secure mode. Most applications do not need to implement this interface and can use one of the supplied authorization providers, IAMAuthorizationProvider for the Cloud Service or KVStoreAuthorizationProvider for on-premise NoSQL Database in secure mode. Alternatively, you may also create your own authorization provider by creating a class that implements this interface and setting its instance as AuthorizationProvider . Normally, the authorization is supplied as part of HTTP headers in the request which includes the header names and values. In general, multiple headers may be required. For a common case where authorization is supplied via a single Authorization HTTP header, you may choose to extend AuthorizationStringProvider class. If you are implementing a custom authorization provider that uses disposable resources, you can also implement the IDisposable interface. The driver will call Dispose() of the provider when NoSQLClient instance is disposed. Methods Name Description ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Obtains and supplies the authorization information to the request. ConfigureAuthorization(NoSQLConfig) Configures the provider. See Also AuthorizationProvider AuthorizationStringProvider IAMAuthorizationProvider KVStoreAuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.IndexExistsException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexExistsException.-ctor.html",
    "title": "Constructor IndexExistsException | NoSQL SDK for .NET",
    "keywords": "Constructor IndexExistsException IndexExistsException() Initializes a new instance of IndexExistsException . Declaration public IndexExistsException() IndexExistsException(String) Initializes a new instance of IndexExistsException with the message that describes the current exception. Declaration public IndexExistsException(string message) Parameters Type Name Description String message A message that describes the current exception. IndexExistsException(String, Exception) Initializes a new instance of IndexExistsException with the message that describes the current exception and an inner exception. Declaration public IndexExistsException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexExistsException.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexExistsException.html",
    "title": "Class IndexExistsException | NoSQL SDK for .NET",
    "keywords": "Class IndexExistsException The exception that is thrown when attempting to create an index for a table when an index with the same name already exists. Inheritance Object NoSQLException IndexExistsException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IndexExistsException : NoSQLException Constructors Name Description IndexExistsException() Initializes a new instance of IndexExistsException . IndexExistsException(String) Initializes a new instance of IndexExistsException with the message that describes the current exception. IndexExistsException(String, Exception) Initializes a new instance of IndexExistsException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexLimitException.-ctor.html",
    "title": "Constructor IndexLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor IndexLimitException IndexLimitException() Initializes a new instance of IndexLimitException . Declaration public IndexLimitException() IndexLimitException(String) Initializes a new instance of IndexLimitException with the message that describes the current exception. Declaration public IndexLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. IndexLimitException(String, Exception) Initializes a new instance of IndexLimitException with the message that describes the current exception and an inner exception. Declaration public IndexLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexLimitException.html",
    "title": "Class IndexLimitException | NoSQL SDK for .NET",
    "keywords": "Class IndexLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create more indexes on a table than allowed by the system defined limit. Inheritance Object NoSQLException IndexLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IndexLimitException : NoSQLException Constructors Name Description IndexLimitException() Initializes a new instance of IndexLimitException . IndexLimitException(String) Initializes a new instance of IndexLimitException with the message that describes the current exception. IndexLimitException(String, Exception) Initializes a new instance of IndexLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexNotFoundException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexNotFoundException.-ctor.html",
    "title": "Constructor IndexNotFoundException | NoSQL SDK for .NET",
    "keywords": "Constructor IndexNotFoundException IndexNotFoundException() Initializes a new instance of IndexNotFoundException . Declaration public IndexNotFoundException() IndexNotFoundException(String) Initializes a new instance of IndexNotFoundException with the message that describes the current exception. Declaration public IndexNotFoundException(string message) Parameters Type Name Description String message A message that describes the current exception. IndexNotFoundException(String, Exception) Initializes a new instance of IndexNotFoundException with the message that describes the current exception and an inner exception. Declaration public IndexNotFoundException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexNotFoundException.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexNotFoundException.html",
    "title": "Class IndexNotFoundException | NoSQL SDK for .NET",
    "keywords": "Class IndexNotFoundException The exception that is thrown when an operation attempted to access an index that does not exist or is not in a visible state. Inheritance Object NoSQLException IndexNotFoundException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IndexNotFoundException : NoSQLException Constructors Name Description IndexNotFoundException() Initializes a new instance of IndexNotFoundException . IndexNotFoundException(String) Initializes a new instance of IndexNotFoundException with the message that describes the current exception. IndexNotFoundException(String, Exception) Initializes a new instance of IndexNotFoundException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.IndexResult.Fields.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexResult.Fields.html",
    "title": "Property Fields | NoSQL SDK for .NET",
    "keywords": "Property Fields Fields Gets the list of field names that define the index. Declaration public IReadOnlyList<string> Fields { get; } Property Value Type Description IReadOnlyList < String > List of field names."
  },
  "api/Oracle.NoSQL.SDK.IndexResult.FieldTypes.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexResult.FieldTypes.html",
    "title": "Property FieldTypes | NoSQL SDK for .NET",
    "keywords": "Property FieldTypes FieldTypes Gets the list of field types corresponding to the list of field names. Declaration public IReadOnlyList<string> FieldTypes { get; } Property Value Type Description IReadOnlyList < String > The list of field types. Remarks The type in the list is only non-null if the index is on a field of type JSON and is explicitly typed. If using a server that does not support this information, this property will be null ."
  },
  "api/Oracle.NoSQL.SDK.IndexResult.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexResult.html",
    "title": "Class IndexResult | NoSQL SDK for .NET",
    "keywords": "Class IndexResult Represents the information about a single index including its name and field names. Inheritance Object IndexResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IndexResult : Object Remarks A list of IndexResult objects is the result of GetIndexesAsync(String, GetIndexOptions, CancellationToken) API and a single IndexResult object is the result of GetIndexAsync(String, String, GetIndexOptions, CancellationToken) API. Properties Name Description Fields Gets the list of field names that define the index. FieldTypes Gets the list of field types corresponding to the list of field names. IndexName Gets the name of the index. See Also GetIndexesAsync(String, GetIndexOptions, CancellationToken) GetIndexAsync(String, String, GetIndexOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.IndexResult.IndexName.html": {
    "href": "api/Oracle.NoSQL.SDK.IndexResult.IndexName.html",
    "title": "Property IndexName | NoSQL SDK for .NET",
    "keywords": "Property IndexName IndexName Gets the name of the index. Declaration public string IndexName { get; } Property Value Type Description String The name of the index."
  },
  "api/Oracle.NoSQL.SDK.InstanceMetadataClient.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.InstanceMetadataClient.-ctor.html",
    "title": "Constructor InstanceMetadataClient | NoSQL SDK for .NET",
    "keywords": "Constructor InstanceMetadataClient InstanceMetadataClient() Initializes a new instance of InstanceMetadataClient . Declaration public InstanceMetadataClient() Remarks This constructor will initialize InstanceMetadataClient with default request timeout of 120 seconds (2 minutes). InstanceMetadataClient(TimeSpan) Initializes a new instance of InstanceMetadataClient with specified request timeout. Declaration public InstanceMetadataClient(TimeSpan requestTimeout) Parameters Type Name Description TimeSpan requestTimeout Request timeout."
  },
  "api/Oracle.NoSQL.SDK.InstanceMetadataClient.Dispose.html": {
    "href": "api/Oracle.NoSQL.SDK.InstanceMetadataClient.Dispose.html",
    "title": "Method Dispose | NoSQL SDK for .NET",
    "keywords": "Method Dispose Dispose() Releases resources held by this InstanceMetadataClient instance. Declaration public void Dispose()"
  },
  "api/Oracle.NoSQL.SDK.InstanceMetadataClient.GetRegionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.InstanceMetadataClient.GetRegionAsync.html",
    "title": "Method GetRegionAsync | NoSQL SDK for .NET",
    "keywords": "Method GetRegionAsync GetRegionAsync(CancellationToken) Gets the region of the running instance. Declaration public Task<Region> GetRegionAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < Region > Task returning the region of the OCI instance. Remarks When using Instance Principal or OKE workload authentication, you can provide the return region as Region property of NoSQLConfig to create NoSQLClient connected to the same region. Exceptions Type Condition AuthorizationException If failed to retrieve the region metadata. ArgumentException If the retrieved region code does not match any region defined in the SDK."
  },
  "api/Oracle.NoSQL.SDK.InstanceMetadataClient.html": {
    "href": "api/Oracle.NoSQL.SDK.InstanceMetadataClient.html",
    "title": "Class InstanceMetadataClient | NoSQL SDK for .NET",
    "keywords": "Class InstanceMetadataClient Cloud Service only. A class that allows to retrieve OCI instance metadata. Inheritance Object InstanceMetadataClient Implements IDisposable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class InstanceMetadataClient : Object Remarks This class is used internally by IAMAuthorizationProvider to retrieve OCI instance metadata when using Instance Principal authentication. You can use this class to retrieve the region of the running instance when using Instance Principal or OKE workload authentication and when you want to use the region of the running instance to connect to the NoSQL service. Constructors Name Description InstanceMetadataClient() Initializes a new instance of InstanceMetadataClient . InstanceMetadataClient(TimeSpan) Initializes a new instance of InstanceMetadataClient with specified request timeout. Methods Name Description Dispose() Releases resources held by this InstanceMetadataClient instance. GetRegionAsync(CancellationToken) Gets the region of the running instance."
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.AsInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.AsInt32.html",
    "title": "Property AsInt32 | NoSQL SDK for .NET",
    "keywords": "Property AsInt32 AsInt32 Gets the value of this instance as int . Declaration public override int AsInt32 { get; } Property Value Type Description Int32 The int value that this instance represents. Overrides FieldValue.AsInt32"
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.-ctor.html",
    "title": "Constructor IntegerValue | NoSQL SDK for .NET",
    "keywords": "Constructor IntegerValue IntegerValue(Int32) Initializes a new instance of the IntegerValue with the specified int value. Declaration public IntegerValue(int value) Parameters Type Name Description Int32 value The value which this instance will represent."
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Integer Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.html",
    "title": "Class IntegerValue | NoSQL SDK for .NET",
    "keywords": "Class IntegerValue Represents a 32-bit signed integer value. Inheritance Object FieldValue IntegerValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class IntegerValue : FieldValue Remarks This class is used to represent values of NoSQL data type Integer . This value is represented by a C# type int . Constructors Name Description IntegerValue(Int32) Initializes a new instance of the IntegerValue with the specified int value. Properties Name Description AsInt32 Gets the value of this instance as int . DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToDateTime() Converts the value represented by this instance to a DateTime object. ToDecimal() Converts the value represented by this instance to a decimal number. ToDouble() Converts the value represented by this instance to a double precision floating point number. ToInt64() Converts the value represented by this instance to a 64-bit signed integer. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.ToDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.ToDateTime.html",
    "title": "Method ToDateTime | NoSQL SDK for .NET",
    "keywords": "Method ToDateTime ToDateTime() Converts the value represented by this instance to a DateTime object. Declaration public override DateTime ToDateTime() Returns Type Description DateTime A DateTime value constructed from the value represented by this instance as a number of milliseconds since the Unix Epoch. Overrides FieldValue.ToDateTime() Remarks This method performs the same conversion as ToDateTime() . See Also ToDateTime()"
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.ToDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.ToDecimal.html",
    "title": "Method ToDecimal | NoSQL SDK for .NET",
    "keywords": "Method ToDecimal ToDecimal() Converts the value represented by this instance to a decimal number. Declaration public override Decimal ToDecimal() Returns Type Description Decimal A decimal number equivalent to the value represented by this instance. Overrides FieldValue.ToDecimal() Remarks This method performs implicit conversion from int to decimal ."
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.ToDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.ToDouble.html",
    "title": "Method ToDouble | NoSQL SDK for .NET",
    "keywords": "Method ToDouble ToDouble() Converts the value represented by this instance to a double precision floating point number. Declaration public override double ToDouble() Returns Type Description Double A double precision floating point number equivalent to the value represented by this instance. Overrides FieldValue.ToDouble() Remarks This method performs implicit conversion from int to double ."
  },
  "api/Oracle.NoSQL.SDK.IntegerValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.IntegerValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts the value represented by this instance to a 64-bit signed integer. Declaration public override long ToInt64() Returns Type Description Int64 A 64-bit signed integer equivalent to the value represented by this instance. Overrides FieldValue.ToInt64() Remarks This method performs implicit conversion from int to long ."
  },
  "api/Oracle.NoSQL.SDK.InvalidAuthorizationException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.InvalidAuthorizationException.-ctor.html",
    "title": "Constructor InvalidAuthorizationException | NoSQL SDK for .NET",
    "keywords": "Constructor InvalidAuthorizationException InvalidAuthorizationException() Initializes a new instance of InvalidAuthorizationException . Declaration public InvalidAuthorizationException() InvalidAuthorizationException(String) Initializes a new instance of InvalidAuthorizationException with the message that describes the current exception. Declaration public InvalidAuthorizationException(string message) Parameters Type Name Description String message A message that describes the current exception. InvalidAuthorizationException(String, Exception) Initializes a new instance of InvalidAuthorizationException with the message that describes the current exception and an inner exception. Declaration public InvalidAuthorizationException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.InvalidAuthorizationException.html": {
    "href": "api/Oracle.NoSQL.SDK.InvalidAuthorizationException.html",
    "title": "Class InvalidAuthorizationException | NoSQL SDK for .NET",
    "keywords": "Class InvalidAuthorizationException The exception that is thrown when a request presents invalid authorization information to the service. Inheritance Object NoSQLException RetryableException InvalidAuthorizationException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class InvalidAuthorizationException : RetryableException Remarks Note that this is different from AuthorizationException which indicates failure to obtain the authorization information. In most cases, InvalidAuthorizationException is due to presenting expired authorization information and thus it can be retried, at which time the driver will renew the authorization information. The NoSQLRetryHandler will always retry InvalidAuthorizationException once but will not retry again if InvalidAuthorizationException occurs twice in a row, because this means that renewing of authorization information did not solve the problem and the error is due to some other reason. Constructors Name Description InvalidAuthorizationException() Initializes a new instance of InvalidAuthorizationException . InvalidAuthorizationException(String) Initializes a new instance of InvalidAuthorizationException with the message that describes the current exception. InvalidAuthorizationException(String, Exception) Initializes a new instance of InvalidAuthorizationException with the message that describes the current exception and an inner exception. See Also NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.IRateLimiter.ConsumeUnitsAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.IRateLimiter.ConsumeUnitsAsync.html",
    "title": "Method ConsumeUnitsAsync | NoSQL SDK for .NET",
    "keywords": "Method ConsumeUnitsAsync ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) Consumes the specified number of units and blocks (sleeps) asynchronously if required before an operation can proceed. Declaration Task<TimeSpan> ConsumeUnitsAsync(int units, TimeSpan timeout, bool consumeOnTimeout, CancellationToken cancellationToken) Parameters Type Name Description Int32 units Number of units to consume. TimeSpan timeout Timeout. The resulting amount of time to sleep should not exceed this timeout. If the sleep time exceeds this timeout, the behavior should be according to consumeOnTimeout parameter. Boolean consumeOnTimeout Defines how rate limiter behaves when the timeout is reached. If false , this method should throw TimeoutException and the units should not be consumed. If true , the units should be consumed even when timeout is reached and this method should return successfully. In either case, if the computed wait time exceeds timeout, this method should still block (sleep) for the amount of time equal to the timeout before either throwing an exception or returning successfully (depending on the value of this parameter). The driver uses the value true when calling ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) after an operation completes successfully (see description in remarks), in which case the exception should not be thrown and the result of the operation should be returned to the application. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < TimeSpan > Task returning TimeSpan of the amount of time blocked (slept) by this method. Exceptions Type Condition TimeoutException If the specified timeout is reached and consumeOnTimeout is false ."
  },
  "api/Oracle.NoSQL.SDK.IRateLimiter.HandleThrottlingException.html": {
    "href": "api/Oracle.NoSQL.SDK.IRateLimiter.HandleThrottlingException.html",
    "title": "Method HandleThrottlingException | NoSQL SDK for .NET",
    "keywords": "Method HandleThrottlingException HandleThrottlingException(RetryableException) Defines the behavior of the rate limiter when throttling exception occurs. Declaration void HandleThrottlingException(RetryableException ex) Parameters Type Name Description RetryableException ex An exception, which is instance of either ReadThrottlingException or WriteThrottlingException Remarks If throttling exception has occurred, this usually means that current rate limiter state does not correctly reflect the rate of incoming operations and needs to be adjusted. For example, you may remove any unused credits that were previously used to allow operations to proceed without waiting."
  },
  "api/Oracle.NoSQL.SDK.IRateLimiter.html": {
    "href": "api/Oracle.NoSQL.SDK.IRateLimiter.html",
    "title": "Interface IRateLimiter | NoSQL SDK for .NET",
    "keywords": "Interface IRateLimiter Cloud Service or Cloud Simulator only. An interface to handle rate limiting in the SDK. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public interface IRateLimiter Remarks Rate limiting is used to provide efficient access to Oracle NoSQL Database Cloud Service, maximize throughput and protect from resource starvation. The SDK provides built-in rate limiting functionality for data operations on tables such as GetAsync(String, MapValue, GetOptions, CancellationToken) , PutAsync(String, MapValue, PutOptions, CancellationToken) , DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) , DeleteRangeAsync , WriteManyAsync , PrepareAsync(String, PrepareOptions, CancellationToken) , QueryAsync and their variants. Rate limiting in the driver allows spreading the operations over time thus maximizing throughput by avoiding costly throttling exceptions (see ReadThrottlingException and WriteThrottlingException ) and the associated retry handling. Each operation listed above does reads and/or writes on a table and thus consumes certain number of read and write units (see ConsumedCapacity ). Each table in NoSQL Database Cloud Service defines limits on the maximum number of read and write units that can be consumed by all clients accessing the table, per 1 second time. For provisioned tables (see Provisioned ) these limits are defined in TableLimits , for on-demand tables (see OnDemand ), higher predefined limits are used. Thus, the total rate of operations on a given table is limited. If a client tries to perform the operations at faster rate, the service will respond with a read or write throttling exception, in which case the client can retry the operation after certain time (this behavior may be defined by NoSQLRetryHandler ). Handling throttling exceptions and their retries is costly both for the service and the client application since the application has to wait before an operation can be retried (retrying immediately or not waiting enough will only result in another throttling exception and more load on the service). A much better strategy for a client is to spread out the operations over time to an extent that the table limits for a given table are not exceeded and thus avoiding throttling errors and their retries. Rate limiting built in to the SDK provides this functionality. Enable rate limiting by setting the property RateLimitingEnabled of the initial configuration to true . An instance of IRateLimiter is used to enforce one table limit. Thus the driver will instantiate two instances of IRateLimiter for each table in use, one for read limit and another for write limit. You have a choice of using a default implementation of rate limiter provided by the SDK or providing a custom implementation of IRateLimiter interface. See NoSQLRateLimiter for details on default rate limiter used by the SDK. To use custom rate limiter implementation, set property RateLimiterCreator of the initial configuration, which is factory function to create your custom instances of IRateLimiter . In order to create pair of rate limiters for a table, the driver will need to know its table limits. The table limits are already known if one of table APIs have been called, such as ExecuteTableDDLAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) , GetTableAsync , WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) or any of their variants. Otherwise, the driver will call GetTableAsync(String, GetTableOptions, CancellationToken) in the background to obtain the table limits as soon as any data operation is issued for that table. This means that enabling rate limiting for a table may be delayed until its table limits are obtained successfully in the background. The main operation of rate limiting in the driver is to call ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) to consume a number of (read or write) units for a given operation. Depending on rate limiting implementation, its current state and the number of units to consume, this call may asynchronously block (sleep) for certain amount of time (and return Task returning this amount of time) before letting the operation proceed. This API also needs to correctly operate in the presence of timeout set by the caller. Note that it may be possible to consume certain amount of units without blocking (e.g. if there has been no or very little recent activity). In this state the rate limiter is said to be under its limit. Conversely, even consuming 0 units may block as a result of consuming units for recent past operations. In this state the rate limiter is said to be over its limit. Rate limiting works best when we know in advance how many units each operation will consume, which would allow to know precisely how long to wait before issuing each operation. Unfortunately, we don't know how many units an operation requires until we get the result back, with this information returned as part of ConsumedCapacity . It may be difficult or impossible to estimate number of units required before the operation completes. The approach is taken where ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) is called twice, once before the operation passing 0 units to (possibly) wait until the rate limiter is under its limit and then after the operation passing the number of units returned as part of ConsumedCapacity of the result. This will allow to delay subsequent operations and stagger subsequent concurrent operations over time. Note that by default the rate limiting only works as expected when used within one NoSQLClient instance. When using multiple NoSQLClient instances against the same service, whether in the same process, different process or even running on different machines, rate limiters in one instance will not be aware of operations performed by other instances and thus will not correctly rate limit the operations. If multiple concurrent NoSQLClient instances are required, you can set RateLimiterPercent property of the initial configuration to allocate only a percentage of each table's limits to each NoSQLClient instance. Although not optimal (not accounting for under-utilization at some instances), this will allow to rate limit operations on multiple concurrent instances. Unfortunately, there is no perfect driver-side rate limiting strategy so it is still possible for throttling exceptions to occur. IRateLimiter provides HandleThrottlingException(RetryableException) method that the driver will call when an operation results in throttling error. When creating custom rate limiter, implementing this method will allow you to adjust the rate limiter's state to account for this information. Instances of IRateLimiter are used by multiple concurrent threads and thus must be thread-safe. Methods Name Description ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) Consumes the specified number of units and blocks (sleeps) asynchronously if required before an operation can proceed. HandleThrottlingException(RetryableException) Defines the behavior of the rate limiter when throttling exception occurs. SetLimit(Double) Configures rate limiter by setting its limit in units per second. See Also NoSQLRateLimiter RateLimitingEnabled RateLimiterCreator"
  },
  "api/Oracle.NoSQL.SDK.IRateLimiter.SetLimit.html": {
    "href": "api/Oracle.NoSQL.SDK.IRateLimiter.SetLimit.html",
    "title": "Method SetLimit | NoSQL SDK for .NET",
    "keywords": "Method SetLimit SetLimit(Double) Configures rate limiter by setting its limit in units per second. Declaration void SetLimit(double limitPerSecond) Parameters Type Name Description Double limitPerSecond Limit in units per second Remarks Note that this method is called both when rate limiter is configured for the first time and also if/when table limits change, so it may need to account for the current state due to outstanding operations already rate-limited by this instance, however there is no need to change state or block (sleep) time of these outstanding operations and the new limit only needs to apply to the new operations issued."
  },
  "api/Oracle.NoSQL.SDK.IRetryHandler.GetRetryDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.IRetryHandler.GetRetryDelay.html",
    "title": "Method GetRetryDelay | NoSQL SDK for .NET",
    "keywords": "Method GetRetryDelay GetRetryDelay(Request) Determines how long to wait between successive retries. Declaration TimeSpan GetRetryDelay(Request request) Parameters Type Name Description Request request The Request object describing the running operation. Returns Type Description TimeSpan A time interval to wait before the next retry. Remarks This method is called after ShouldRetry(Request) if ShouldRetry(Request) returned true. It determines how long to delay before the operation is retried. The delay is non-blocking (asynchronous). The delay returned may vary depending on the current state of the operation, e.g. RetryCount , LastException , etc. For example, the delay could increase with the number of retries performed so far. See Also ShouldRetry ( Request )"
  },
  "api/Oracle.NoSQL.SDK.IRetryHandler.html": {
    "href": "api/Oracle.NoSQL.SDK.IRetryHandler.html",
    "title": "Interface IRetryHandler | NoSQL SDK for .NET",
    "keywords": "Interface IRetryHandler An interface to handle automatic operation retries. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public interface IRetryHandler Remarks The driver supports automatic retrying of operations that fail with retryable exceptions. The following exceptions can be retried: All subclasses of RetryableException . Their IsRetryable property is always true . Instances of other subclasses of NoSQLException that have IsRetryable equal true . Currently these include instances of ServiceResponseException with retryable HTTP status codes. See ServiceResponseException . All network-related errors. Currently those are instances of HttpRequestException . The driver uses the retry handler to control the number of retries as well as the frequency of retries (via the duration of a delay before the retry happens). For most applications, it is sufficient to use built-in retry handler implemented by NoSQLRetryHandler . It uses exponential back-off algorithm with special cases for certain operations and has customizable parameters. See NoSQLRetryHandler . The retry handler instance is specified as RetryHandler in the initial configuration. You have the following options: Leave RetryHandler unset, in which case the driver will use an instance of NoSQLRetryHandler with default property values. This should be sufficient for most applications. Set RetryHandler to a new instance of NoSQLRetryHandler created with customized property values. This will allow you to customize such parameters as maximum number of retries, base delay between retries and retry delays for special situations. Create your own custom class implementing IRetryHandler and set its instance as RetryHandler . This allows for most customization of operation retries. If you want to disable operation retries altogether, set RetryHandler to NoRetries . It is not recommended that applications rely on the retry handler for regulating provisioned throughput as this will result in low efficiency. It is best to add rate limiting to the application based on a table's capacity and access patterns to avoid throttling exceptions. Instances of this interface will be shared between threads, so they must be immutable or otherwise thread-safe. Methods Name Description GetRetryDelay(Request) Determines how long to wait between successive retries. ShouldRetry(Request) Determines whether the operation should be retried. See Also RetryHandler NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.IRetryHandler.ShouldRetry.html": {
    "href": "api/Oracle.NoSQL.SDK.IRetryHandler.ShouldRetry.html",
    "title": "Method ShouldRetry | NoSQL SDK for .NET",
    "keywords": "Method ShouldRetry ShouldRetry(Request) Determines whether the operation should be retried. Declaration bool ShouldRetry(Request request) Parameters Type Name Description Request request The Request object describing the running operation. Returns Type Description Boolean true to retry the operation, otherwise false . Remarks This method is called every time after an operation fails with a retryable exception. The operations may be retried multiple times. This method is called before each retry. The retries will continue until one of the following occurs: The operation is successful. This method returns false . The operation timeout elapses. The Request object includes information on the number of retries done so far (see RetryCount ) as well as all the exceptions occurred during previous retries (see Exceptions and LastException ). You may decide whether the operation should be retried based on this information as well as any operation-specific information provided by the Request instance. See Also Request"
  },
  "api/Oracle.NoSQL.SDK.IWriteOperation.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.IWriteOperation.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. Declaration bool AbortIfUnsuccessful { get; } Property Value Type Description Boolean true to abort the transaction if this operation fails, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.IWriteOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.IWriteOperation.html",
    "title": "Interface IWriteOperation | NoSQL SDK for .NET",
    "keywords": "Interface IWriteOperation Represents a Put or Delete operation that is part of WriteOperationCollection . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public interface IWriteOperation Remarks The operations represented by this interface are part of WriteOperationCollection which is used as input to WriteManyAsync method. The operations are added to the collection using methods of WriteOperationCollection , so you don't need to be familiar with classes implementing this interface in order to use WriteManyAsync APIs. These interface and classes implementing it are for informational purpose only if you choose to iterate through WriteOperationCollection . Properties Name Description AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. TableName Gets the table name, if available. See Also WriteOperationCollection WriteManyAsync"
  },
  "api/Oracle.NoSQL.SDK.IWriteOperation.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.IWriteOperation.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the table name, if available. Declaration string TableName { get; } Property Value Type Description String Table name if available, otherwise null. Remarks Table name is required if this operation is used by WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) method that requires you to provide table name for each operation. If using WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) , PutManyAsync or DeleteManyAsync , table name should be provided as a parameter to these methods rather than per-operation and thus this property should be null ."
  },
  "api/Oracle.NoSQL.SDK.JsonInputOptions.AllowComments.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonInputOptions.AllowComments.html",
    "title": "Property AllowComments | NoSQL SDK for .NET",
    "keywords": "Property AllowComments AllowComments Gets or sets a value indicating whether comments are allowed in the JSON input. Declaration public bool AllowComments { get; set; } Property Value Type Description Boolean true to allow comments, false to disallow comments. The default is false . Remarks If allowed, comments follow the C# syntax, using // for single-line comments and /* */ for single-line and multi-line comments. If comments are not allowed and comments are encountered in JSON input, FromJsonString(String, JsonInputOptions) will throw JsonParseException . This option does not apply to DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) (instead use JsonReaderOptions when creating Utf8JsonReader ). Examples JSON with comments. { \"key1\": \"string value\", // single-line comment \"key2\": 10, /* another single-line comment */ /* Multi-line comment. */ \"key3\": null }"
  },
  "api/Oracle.NoSQL.SDK.JsonInputOptions.AllowTrailingCommas.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonInputOptions.AllowTrailingCommas.html",
    "title": "Property AllowTrailingCommas | NoSQL SDK for .NET",
    "keywords": "Property AllowTrailingCommas AllowTrailingCommas Gets or sets a value indicating whether trailing commas are allowed in the JSON input. Declaration public bool AllowTrailingCommas { get; set; } Property Value Type Description Boolean true to allow trailing commas, false to disallow trailing commas. The default is false . Remarks Trailing commas are extra commas at the end of a list of JSON values in an object or array. If allowed, they are ignored. If not allowed and they are encountered in JSON input, FromJsonString(String, JsonInputOptions) will throw JsonParseException . This option does not apply to DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) (instead use JsonReaderOptions when creating Utf8JsonReader ). Examples JSON with trailing commas. { \"key1\": \"string value\", \"key2\": [ 1, 2, 3, 4, 5 ], \"key2\": true, }"
  },
  "api/Oracle.NoSQL.SDK.JsonInputOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonInputOptions.-ctor.html",
    "title": "Constructor JsonInputOptions | NoSQL SDK for .NET",
    "keywords": "Constructor JsonInputOptions JsonInputOptions() Declaration public JsonInputOptions()"
  },
  "api/Oracle.NoSQL.SDK.JsonInputOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonInputOptions.html",
    "title": "Class JsonInputOptions | NoSQL SDK for .NET",
    "keywords": "Class JsonInputOptions Represents options passed to FromJsonString(String, JsonInputOptions) and DeserializeFromJson(ref Utf8JsonReader, JsonInputOptions) . Inheritance Object JsonInputOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class JsonInputOptions : Object Remarks These options allow you to customize how the JSON input is parsed to create FieldValue instances. For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description JsonInputOptions() Properties Name Description AllowComments Gets or sets a value indicating whether comments are allowed in the JSON input. AllowTrailingCommas Gets or sets a value indicating whether trailing commas are allowed in the JSON input. PreferDecimal Gets or sets a value indicating whether to prefer using NumberValue over DoubleValue to deserialize JSON numbers. See Also FromJsonString ( String , JsonInputOptions ) DeserializeFromJson ( Utf8JsonReader , JsonInputOptions )"
  },
  "api/Oracle.NoSQL.SDK.JsonInputOptions.PreferDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonInputOptions.PreferDecimal.html",
    "title": "Property PreferDecimal | NoSQL SDK for .NET",
    "keywords": "Property PreferDecimal PreferDecimal Gets or sets a value indicating whether to prefer using NumberValue over DoubleValue to deserialize JSON numbers. Declaration public bool PreferDecimal { get; set; } Property Value Type Description Boolean true to prefer using NumberValue over DoubleValue to deserialize fractional numbers as well as whole numbers outside of the range of long type, false to prefer using DoubleValue . The default is false . Remarks When deserializing JSON Number values, the whole numbers are usually instantiated as IntegerValue or LongValue . By default, fractional numbers are instantiated as DoubleValue . In some cases, you may prefer to use NumberValue instead, which stores decimal value. decimal has bigger precision (although smaller range) than double . In addition, double store its value in binary format and thus may not represent all decimal values precisely. If PreferDecimal is set to true , the fractional numbers will be deserialized as NumberValue , unless they are outside of the range of Decimal in which case DoubleValue will still be used. In addition to fractional numbers, the above also applies to whole numbers that are outside of the range of long type."
  },
  "api/Oracle.NoSQL.SDK.JsonNullValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonNullValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType JsonNull Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.JsonNullValue.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonNullValue.html",
    "title": "Class JsonNullValue | NoSQL SDK for .NET",
    "keywords": "Class JsonNullValue Represents a JSON NULL value. Inheritance Object FieldValue JsonNullValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class JsonNullValue : FieldValue Remarks Oracle NoSQL Database uses a special value JSON NULL, which represents a value of JSON type NULL . JSON NULL may occur as a value of a field of data type Json or one of its sub-fields that has a value null . JSON NULL value is different and separate from SQL NULL. For example, if table MyTable has a field info of type JSON, a query such as SELECT info.name from MyTable will yield different results for records where the value of info.name is null (e.g. if the value of info is { \"name\": null } ) with the result being JSON NULL and for records where the value of the info field itself is NULL (SQL NULL), with result being a SQL NULL. In addition, the info field itself may take values of SQL NULL or JSON NULL which are distinct values, the latter being a value of a JSON type NULL (i.e.the value of info is JSON value null ). For more details, please see the Oracle NoSQL Database SQL Reference Guide. The only value of this class is JsonNull , which is the only immutable singleton instance of this class. No other values are instantiated. On output, JSON NULL values returned by the driver will always be JsonNull . On input, when using MapValue to create a value for a JSON field, it is acceptable to use either JsonNull or Null as value of the sub-field inside the MapValue . However, JsonNull and Null will be treated as different values (JSON NULL and SQL NULL) if used as a value for the whole JSON field as described above. Examples Instantiating the row value with fields id and info where info is field of data type Json and has value of { \"name\": null } . var row = new MapValue { [\"id\"] = 1000, [\"info\"] = new MapValue { [\"name\"] = FieldValue.JsonNull } }; Properties Name Description DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . See Also FieldValue NullValue"
  },
  "api/Oracle.NoSQL.SDK.JsonNullValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonNullValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.-ctor.html",
    "title": "Constructor JsonOutputOptions | NoSQL SDK for .NET",
    "keywords": "Constructor JsonOutputOptions JsonOutputOptions() Declaration public JsonOutputOptions()"
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.DateTimeAsMillis.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.DateTimeAsMillis.html",
    "title": "Property DateTimeAsMillis | NoSQL SDK for .NET",
    "keywords": "Property DateTimeAsMillis DateTimeAsMillis Gets or sets a value indicating whether to output DateTime values as a number of milliseconds since the Unix Epoch. Declaration public bool DateTimeAsMillis { get; set; } Property Value Type Description Boolean true to output DateTime values as a number of milliseconds since the Unix Epoch, false to output DateTime values as strings. The default is false . Remarks By default, DateTime values represented by TimestampValue instances will be represented in JSON as ISO8601-formatted strings. This option allows representing them instead as a number equal to the number of milliseconds since the Unix Epoch, 00:00:00 UTC, January 1, 1970. See ToInt64() for more information. See Also TimestampValue"
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.DateTimeFormatString.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.DateTimeFormatString.html",
    "title": "Property DateTimeFormatString | NoSQL SDK for .NET",
    "keywords": "Property DateTimeFormatString DateTimeFormatString Gets or sets a date and time format string to represent DateTime values in JSON. Declaration public string DateTimeFormatString { get; set; } Property Value Type Description String Date and time format string. The default is DefaultDateTimeFormatString . Remarks This option specifies the date and time format string to use to represent DateTime values in JSON. It is passed as an argument to ToString(String) method. The default is The default is DefaultDateTimeFormatString . If set to null , the general date and time format specifier 'G' will be used as if calling ToString() . If DateTimeAsMillis is true , this option has no effect. See Also Standard date and time format strings Custom date and time format strings"
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.DefaultDateTimeFormatString.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.DefaultDateTimeFormatString.html",
    "title": "Field DefaultDateTimeFormatString | NoSQL SDK for .NET",
    "keywords": "Field DefaultDateTimeFormatString Default date and time format string used to represent DateTime values in JSON. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const string DefaultDateTimeFormatString = \"yyyy-MM-ddTHH:mm:ss.FFFFFFFZ\" Returns Type Description String Remarks This format string is in ISO8601 format that is always represented in UTC time zone. The fractions of a second are displayed if not 0."
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.html",
    "title": "Class JsonOutputOptions | NoSQL SDK for .NET",
    "keywords": "Class JsonOutputOptions Represents options passed to ToJsonString(JsonOutputOptions) and SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) . Inheritance Object JsonOutputOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class JsonOutputOptions : Object Remarks These options allow you to customize how FieldValue instances are represented in JSON. For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description JsonOutputOptions() Fields Name Description DefaultDateTimeFormatString Default date and time format string used to represent DateTime values in JSON. Properties Name Description DateTimeAsMillis Gets or sets a value indicating whether to output DateTime values as a number of milliseconds since the Unix Epoch. DateTimeFormatString Gets or sets a date and time format string to represent DateTime values in JSON. Indented Gets or sets a value indicating whether the JSON output should be formatted. See Also ToJsonString ( JsonOutputOptions ) SerializeAsJson ( Utf8JsonWriter , JsonOutputOptions )"
  },
  "api/Oracle.NoSQL.SDK.JsonOutputOptions.Indented.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonOutputOptions.Indented.html",
    "title": "Property Indented | NoSQL SDK for .NET",
    "keywords": "Property Indented Indented Gets or sets a value indicating whether the JSON output should be formatted. Declaration public bool Indented { get; set; } Property Value Type Description Boolean true to format JSON output, false to write without any extra white space. The default is false . Remarks Formatting includes indenting nested JSON tokens, adding new lines, and adding white space between property names and values. This option does not apply to SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) (instead use JsonWriterOptions when creating Utf8JsonWriter )."
  },
  "api/Oracle.NoSQL.SDK.JsonParseException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonParseException.-ctor.html",
    "title": "Constructor JsonParseException | NoSQL SDK for .NET",
    "keywords": "Constructor JsonParseException JsonParseException() Initializes a new instance of JsonParseException . Declaration public JsonParseException() JsonParseException(String) Initializes a new instance of JsonParseException with the message that describes the current exception. Declaration public JsonParseException(string message) Parameters Type Name Description String message A message that describes the current exception. JsonParseException(String, Exception) Initializes a new instance of JsonParseException with the message that describes the current exception and an inner exception. Declaration public JsonParseException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.JsonParseException.html": {
    "href": "api/Oracle.NoSQL.SDK.JsonParseException.html",
    "title": "Class JsonParseException | NoSQL SDK for .NET",
    "keywords": "Class JsonParseException The exception that is thrown by FromJsonString(String, JsonInputOptions) when failed to parse JSON. Inheritance Object NoSQLException JsonParseException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class JsonParseException : NoSQLException Remarks This exception encapsulates the implementation-specific JSON parse exception as InnerException property. Constructors Name Description JsonParseException() Initializes a new instance of JsonParseException . JsonParseException(String) Initializes a new instance of JsonParseException with the message that describes the current exception. JsonParseException(String, Exception) Initializes a new instance of JsonParseException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.KeySizeLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.KeySizeLimitException.-ctor.html",
    "title": "Constructor KeySizeLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor KeySizeLimitException KeySizeLimitException() Initializes a new instance of KeySizeLimitException . Declaration public KeySizeLimitException() KeySizeLimitException(String) Initializes a new instance of KeySizeLimitException with the message that describes the current exception. Declaration public KeySizeLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. KeySizeLimitException(String, Exception) Initializes a new instance of KeySizeLimitException with the message that describes the current exception and an inner exception. Declaration public KeySizeLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.KeySizeLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.KeySizeLimitException.html",
    "title": "Class KeySizeLimitException | NoSQL SDK for .NET",
    "keywords": "Class KeySizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create a row with a primary key or index key size that exceeds the system defined limit. Inheritance Object NoSQLException KeySizeLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class KeySizeLimitException : NoSQLException Constructors Name Description KeySizeLimitException() Initializes a new instance of KeySizeLimitException . KeySizeLimitException(String) Initializes a new instance of KeySizeLimitException with the message that describes the current exception. KeySizeLimitException(String, Exception) Initializes a new instance of KeySizeLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.AutoRenew.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.AutoRenew.html",
    "title": "Property AutoRenew | NoSQL SDK for .NET",
    "keywords": "Property AutoRenew AutoRenew Gets or sets the value that determines whether the login token should be automatically renewed. Declaration public bool AutoRenew { get; set; } Property Value Type Description Boolean true to automatically renew the login token when it reaches half of its life-time, otherwise false . The default is true ."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.ConfigureAuthorization.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.ConfigureAuthorization.html",
    "title": "Method ConfigureAuthorization | NoSQL SDK for .NET",
    "keywords": "Method ConfigureAuthorization ConfigureAuthorization(NoSQLConfig) Validates and configures the authorization provider. Declaration public override void ConfigureAuthorization(NoSQLConfig config) Parameters Type Name Description NoSQLConfig config The initial configuration. Overrides AuthorizationStringProvider.ConfigureAuthorization(NoSQLConfig) Remarks This method will be called when NoSQLClient instance is created. You do not need to call this method. Exceptions Type Condition ArgumentException If neither of the properties Credentials , CredentialsFile and CredentialsProvider is set or more then one of them is set, or if Credentials are provided and either user name or password is null or empty."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.Credentials.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.Credentials.html",
    "title": "Property Credentials | NoSQL SDK for .NET",
    "keywords": "Property Credentials Credentials Gets or sets user credentials. Declaration public KVStoreCredentials Credentials { get; set; } Property Value Type Description KVStoreCredentials The credentials consisting of the user name and password. This property is exclusive with CredentialsFile and CredentialsProvider properties."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.CredentialsFile.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.CredentialsFile.html",
    "title": "Property CredentialsFile | NoSQL SDK for .NET",
    "keywords": "Property CredentialsFile CredentialsFile Gets or sets the path to the JSON credentials file. Declaration public string CredentialsFile { get; set; } Property Value Type Description String The path (absolute or relative) to a file used to store the user credentials in JSON format. This property is exclusive with Credentials and CredentialsProvider properties."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.CredentialsProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.CredentialsProvider.html",
    "title": "Property CredentialsProvider | NoSQL SDK for .NET",
    "keywords": "Property CredentialsProvider CredentialsProvider Gets or sets the credentials provider delegate. Declaration public Func<CancellationToken, Task<KVStoreCredentials>> CredentialsProvider { get; set; } Property Value Type Description Func < CancellationToken , Task < KVStoreCredentials >> The same cancellation token passed to the method of NoSQLClient performing the operation will be passed to this delegate. Asynchronous delegate used to obtain the user credentials. It returns the credentials as a Task of KVStoreCredentials . This property is exclusive with Credentials and CredentialsFile properties."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.-ctor.html",
    "title": "Constructor KVStoreAuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Constructor KVStoreAuthorizationProvider KVStoreAuthorizationProvider() Initializes a new instance of KVStoreAuthorizationProvider . Declaration public KVStoreAuthorizationProvider() Remarks You must set one of Credentials , CredentialsFile or CredentialsProvider properties. KVStoreAuthorizationProvider(String, Char[]) Initializes a new instance of KVStoreAuthorizationProvider with the specified user credentials. Declaration public KVStoreAuthorizationProvider(string userName, char[] password) Parameters Type Name Description String userName User name of the kvstore user. System.Char [] password Password of the kvstore user. KVStoreAuthorizationProvider(KVStoreCredentials) Initializes a new instance of KVStoreAuthorizationProvider with the specified user credentials. Declaration public KVStoreAuthorizationProvider(KVStoreCredentials credentials) Parameters Type Name Description KVStoreCredentials credentials The credentials of the kvstore user. KVStoreAuthorizationProvider(String) Initializes a new instance of KVStoreAuthorizationProvider with the specified path to the JSON credentials file. Declaration public KVStoreAuthorizationProvider(string credentialsFile) Parameters Type Name Description String credentialsFile The path (absolute or relative) to the JSON credentials file. KVStoreAuthorizationProvider(Func<CancellationToken, Task<KVStoreCredentials>>) Initializes a new instance of KVStoreAuthorizationProvider with the specified credentials provider delegate. Declaration public KVStoreAuthorizationProvider(Func<CancellationToken, Task<KVStoreCredentials>> credentialsProvider) Parameters Type Name Description Func < CancellationToken , Task < KVStoreCredentials >> credentialsProvider Credentials provider delegate."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.Dispose.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.Dispose.html",
    "title": "Method Dispose | NoSQL SDK for .NET",
    "keywords": "Method Dispose Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources, false to release only unmanaged resources. Remarks This method is called by the public Dispose() method and the Finalize() method. See Also Implementing a Dispose Method Dispose() Releases resources used by this KVStoreAuthorizationProvider instance. Declaration public void Dispose() Remarks Applications should not call this method. The driver will call this method when NoSQLClient instance is disposed. If the provider has the login token, this method will also log out of the kvstore."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.GetAuthorizationStringAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.GetAuthorizationStringAsync.html",
    "title": "Method GetAuthorizationStringAsync | NoSQL SDK for .NET",
    "keywords": "Method GetAuthorizationStringAsync GetAuthorizationStringAsync(Request, CancellationToken) Gets the authorization string. Declaration public override Task<string> GetAuthorizationStringAsync(Request request, CancellationToken cancellationToken) Parameters Type Name Description Request request The Request object representing the running operation. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < String > Task that returning the authorization string. Overrides AuthorizationStringProvider.GetAuthorizationStringAsync(Request, CancellationToken) Remarks This method is called by the driver to obtain the authorization information. You do not need to call this method. This method will perform the login operation for the first time and also if the previous operation failed with InvalidAuthorizationException . After login, a renew operation will be optionally scheduled, which will update the login token in the background. In all other cases, this method will return the existing authorization string. Exceptions Type Condition AuthorizationException If the login failed."
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.html",
    "title": "Class KVStoreAuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Class KVStoreAuthorizationProvider Authorization provider for the secure On-Premise Oracle NoSQL Database. Inheritance Object AuthorizationStringProvider KVStoreAuthorizationProvider Implements IAuthorizationProvider IDisposable Inherited Members AuthorizationStringProvider.ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class KVStoreAuthorizationProvider : AuthorizationStringProvider, IAuthorizationProvider Remarks Applications should use this provider to authenticate against the secure on-premise kvstore. The instance of this class should be set as AuthorizationProvider in the initial configuration. The authorization for the database operations requires the kvstore login token. The authorization provider is used to perform the following functions: The driver will log in to kvstore using the provided credentials and obtain the login token. The login is only performed the first time the authorization is needed (for the first database operation) and may also be performed after the login token expires. In the latter case the operation will throw InvalidAuthorizationException and will be automatically retried by the default retry handler, which will involve obtaining the new login token. If the AutoRenew property is set to true (which is the default), then after the initial login, the driver will renew the login token when it reaches half of its lifetime (half-point between acquisition and expiration). Renew request requires only the existing login token and does not require user credentials. If the renew request fails, the token will eventually expire and the driver will perform another login as described above. The driver will log out of the kvstore using the existing login token when the NoSQLClient instance is disposed. To obtain the login token the driver needs user name and password of existing kvstore user that has required permissions to perform needed database operations. These credentials are only used for the login operation as described above and are not needed for every database operation. The are 3 ways in which you may set these credentials, in order of increased security: You may provide credentials explicitly as Credentials property. The user name and password are provided as KVStoreCredentials object. This option is not very secure because the password is stored in main memory in plain text. You can erase the password after you finish using NoSQLClient instance and the password is no longer needed. Note that it is also possible to provide clear text credentials if you are storing NoSQLConfig in JSON file, in which case credentials may be stored as the sub-field within the value of AuthorizationProvider field. This latter option is not secure and should only be used during development/testing. You may store the user name and password in separate JSON file and set the path to this file as CredentialsFile property. This file should contain JSON representation of KVStoreCredentials object in the same format as NoSQLConfig is stored in JSON as discussed in the remarks section of NoSQLConfig . This option is more secure because the credentials file may be restricted by the appropriate permissions. The driver will load the credentials from this file on demand every time they are needed and it will erase the password from the main memory every time after the credentials are used. You can define your own credentials provider delegate and set it as CredentialsProvider . This is the most secure option because you can choose where the credentials are stored and how they are accessed. The credentials provider delegate will be called every time the credentials are needed and the password will be erased from the main memory every time after the credentials are used. Instead of specifying one of the properties described above you may also use one of KVStoreAuthorizationProvider constructors that initialize one of these properties, as shown in the examples. Note that secure on-premise NoSQL Database uses the same endpoint for the authentication and to perform the database operations. This endpoint must be using HTTPS protocol. See Endpoint . Examples Creating KVStoreAuthorizationProvider with the explicitly provided credentials. var config = new NoSQLConfig { Endpoint = \"https://myhost:8888\", AuthorizationProvider = new KVStoreAuthorizationProvider( userName, password) { RequestTimeout = TimeSpan.FromSeconds(15) } }; Credentials in a JSON file ~/my_app/credentials.json . { \"UserName\": \"John\", \"Password\": \"...\" } Initial configuration in JSON file using the KVStoreAuthorizationProvider with the credentials file. { \"Endpoint\": \"https://myhost:8888\", \"AuthorizationProvider\": { \"AuthorizationType\": \"KVStore\", \"CredentialsFile\": \"~/my_app/credentials.json\" } } Using the credentials provider delegate. ... public static async Task<KVStoreCredentials> LoadCredentialsAsync( CancellationToken cancellationToken) { // Load user name and password from a secure location. ... return new KVStoreCredentials(userName, password); } ... var config = new NoSQLConfig { Endpoint = \"https://myhost:8888\", AuthorizationProvider = new KVStoreAuthorizationProvider( LoadCredentialsAsync); }; Constructors Name Description KVStoreAuthorizationProvider() Initializes a new instance of KVStoreAuthorizationProvider . KVStoreAuthorizationProvider(KVStoreCredentials) Initializes a new instance of KVStoreAuthorizationProvider with the specified user credentials. KVStoreAuthorizationProvider(Func<CancellationToken, Task<KVStoreCredentials>>) Initializes a new instance of KVStoreAuthorizationProvider with the specified credentials provider delegate. KVStoreAuthorizationProvider(String) Initializes a new instance of KVStoreAuthorizationProvider with the specified path to the JSON credentials file. KVStoreAuthorizationProvider(String, Char[]) Initializes a new instance of KVStoreAuthorizationProvider with the specified user credentials. Properties Name Description AutoRenew Gets or sets the value that determines whether the login token should be automatically renewed. Credentials Gets or sets user credentials. CredentialsFile Gets or sets the path to the JSON credentials file. CredentialsProvider Gets or sets the credentials provider delegate. RequestTimeout Gets or sets the timeout for login, renew and logout requests. Methods Name Description ConfigureAuthorization(NoSQLConfig) Validates and configures the authorization provider. Dispose() Releases resources used by this KVStoreAuthorizationProvider instance. Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources. GetAuthorizationStringAsync(Request, CancellationToken) Gets the authorization string. See Also IAuthorizationProvider AuthorizationStringProvider KVStoreCredentials"
  },
  "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.RequestTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreAuthorizationProvider.RequestTimeout.html",
    "title": "Property RequestTimeout | NoSQL SDK for .NET",
    "keywords": "Property RequestTimeout RequestTimeout Gets or sets the timeout for login, renew and logout requests. Declaration public TimeSpan RequestTimeout { get; set; } Property Value Type Description TimeSpan The request timeout used for login, renew and logout operations. The default is 30 seconds."
  },
  "api/Oracle.NoSQL.SDK.KVStoreCredentials.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreCredentials.-ctor.html",
    "title": "Constructor KVStoreCredentials | NoSQL SDK for .NET",
    "keywords": "Constructor KVStoreCredentials KVStoreCredentials() Initializes a new instance of KVStoreCredentials . Declaration public KVStoreCredentials() Remarks You must set valid user name and password via UserName and Password properties. KVStoreCredentials(String, Char[]) Initializes a new instance of KVStoreCredentials using specified user name and password. Declaration public KVStoreCredentials(string userName, char[] password) Parameters Type Name Description String userName User name of the kvstore user. Char [] password Password of the kvstore user."
  },
  "api/Oracle.NoSQL.SDK.KVStoreCredentials.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreCredentials.html",
    "title": "Class KVStoreCredentials | NoSQL SDK for .NET",
    "keywords": "Class KVStoreCredentials Represents user credentials used by KVStoreAuthorizationProvider . Inheritance Object KVStoreCredentials Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class KVStoreCredentials : Object Remarks The credentials must have valid user name and password that are not null and not empty. Constructors Name Description KVStoreCredentials() Initializes a new instance of KVStoreCredentials . KVStoreCredentials(String, Char[]) Initializes a new instance of KVStoreCredentials using specified user name and password. Properties Name Description Password Gets or sets the password. UserName Gets or sets the user name. See Also KVStoreAuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.KVStoreCredentials.Password.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreCredentials.Password.html",
    "title": "Property Password | NoSQL SDK for .NET",
    "keywords": "Property Password Password Gets or sets the password. Declaration public char[] Password { get; set; } Property Value Type Description Char [] Password of the kvstore user."
  },
  "api/Oracle.NoSQL.SDK.KVStoreCredentials.UserName.html": {
    "href": "api/Oracle.NoSQL.SDK.KVStoreCredentials.UserName.html",
    "title": "Property UserName | NoSQL SDK for .NET",
    "keywords": "Property UserName UserName Gets or sets the user name. Declaration public string UserName { get; set; } Property Value Type Description String User name of the kvstore user."
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.-ctor.html",
    "title": "Constructor ListTablesOptions | NoSQL SDK for .NET",
    "keywords": "Constructor ListTablesOptions ListTablesOptions() Declaration public ListTablesOptions()"
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.FromIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.FromIndex.html",
    "title": "Property FromIndex | NoSQL SDK for .NET",
    "keywords": "Property FromIndex FromIndex Gets or sets the index to use to start returning table names. Declaration public Nullable<int> FromIndex { get; set; } Property Value Type Description Nullable < Int32 > Starting index to return table names. Cannot be a negative value. The default is 0 (start from the beginning of the list). Remarks This property can be used to page table names over multiple calls to ListTablesAsync(ListTablesOptions, CancellationToken) in order to avoid returning a very large list in a single result. To page table names, set this value to 0 on the first call to ListTablesAsync(ListTablesOptions, CancellationToken) and on subsequent calls to NextIndex returned from the previous call. These operations are best done in a loop. However, the recommended and more simple way to page table names is to use GetListTablesAsyncEnumerable in which case you need not use this property. See Also GetListTablesAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.html",
    "title": "Class ListTablesOptions | NoSQL SDK for .NET",
    "keywords": "Class ListTablesOptions Represents options passed to ListTablesAsync(ListTablesOptions, CancellationToken) and GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) APIs. Inheritance Object ListTablesOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ListTablesOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. If you expect the number of tables to be very large, you may page the returned list of table names over multiple calls to ListTablesAsync(ListTablesOptions, CancellationToken) using FromIndex and Limit properties as shown in the example below. However, the recommended way is to call GetListTablesAsyncEnumerable and iterate over its result, in which case you only need to use the Limit property. Examples Asynchronously paging and printing table names using ListTablesAsync(ListTablesOptions, CancellationToken) and FromIndex and Limit properties. We iterate until the number of returned table names becomes less than the limit (and possibly 0), which means that the last partial result has been received. var options = new ListTablesOptions { Timeout = TimeSpan.FromSeconds(10) Limit = 100 }; do { var result = await client.ListTablesAsync(options); foreach(var tableName in result.TableNames) { Console.WriteLine(tableName); } options.FromIndex = result.NextIndex; } while(result.TableNames.Count == options.Limit); Constructors Name Description ListTablesOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. FromIndex Gets or sets the index to use to start returning table names. Limit Gets or sets the maximum number of tables to return. Namespace On-premise NoSQL database only. Gets or sets the namespace to use for the operation. Timeout Gets or sets the timeout for the request. See Also ListTablesAsync(ListTablesOptions, CancellationToken) GetListTablesAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.Limit.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.Limit.html",
    "title": "Property Limit | NoSQL SDK for .NET",
    "keywords": "Property Limit Limit Gets or sets the maximum number of tables to return. Declaration public Nullable<int> Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. If set, must be a positive value. If not set, there is no limit. Remarks Represents maximum number of tables to return in one call to ListTablesAsync(ListTablesOptions, CancellationToken) or when iterating with GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) ."
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premise NoSQL database only. Gets or sets the namespace to use for the operation. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace name. Remarks If the value is set, only tables from the given namespace are listed, otherwise all tables for the user are listed."
  },
  "api/Oracle.NoSQL.SDK.ListTablesOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.ListTablesRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesRequest.html",
    "title": "Class ListTablesRequest | NoSQL SDK for .NET",
    "keywords": "Class ListTablesRequest Represents information about operation performed by ListTablesAsync and GetListTablesAsyncEnumerable APIs. Inheritance Object Request ListTablesRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ListTablesRequest : Request Properties Name Description Options Gets the options for ListTablesAsync and GetListTablesAsyncEnumerable operations. See Also ListTablesAsync GetListTablesAsyncEnumerable Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.ListTablesRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for ListTablesAsync and GetListTablesAsyncEnumerable operations. Declaration public ListTablesOptions Options { get; } Property Value Type Description ListTablesOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.ListTablesResult.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesResult.html",
    "title": "Class ListTablesResult | NoSQL SDK for .NET",
    "keywords": "Class ListTablesResult Represents the result of ListTables operation. Inheritance Object ListTablesResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ListTablesResult : Object Remarks This class represents the result of ListTablesAsync API and partial results when iterating with GetListTablesAsyncEnumerable . On a successful operation the table names are available as well as the index of the last returned table. Table names are sorted alphabetically. Properties Name Description NextIndex Gets the next index after the last table name returned. TableNames Gets the list of table names. See Also ListTablesAsync GetListTablesAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.ListTablesResult.NextIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesResult.NextIndex.html",
    "title": "Property NextIndex | NoSQL SDK for .NET",
    "keywords": "Property NextIndex NextIndex Gets the next index after the last table name returned. Declaration public int NextIndex { get; } Property Value Type Description Int32 Next table name index. Remarks If you are paging table names manually with ListTablesAsync assign this value to FromIndex . See the example in ListTablesOptions . This property is not needed if you are using GetListTablesAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.ListTablesResult.TableNames.html": {
    "href": "api/Oracle.NoSQL.SDK.ListTablesResult.TableNames.html",
    "title": "Property TableNames | NoSQL SDK for .NET",
    "keywords": "Property TableNames TableNames Gets the list of table names. Declaration public IReadOnlyList<string> TableNames { get; } Property Value Type Description IReadOnlyList < String > List of table names. Remarks Note that the list may be empty if either no tables are found matching the Compartment or Namespace or you are paging table names manually with ListTablesAsync and no more partial results remain. See the example in ListTablesOptions ."
  },
  "api/Oracle.NoSQL.SDK.LongValue.AsInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.AsInt64.html",
    "title": "Property AsInt64 | NoSQL SDK for .NET",
    "keywords": "Property AsInt64 AsInt64 Gets the value of this instance as long . Declaration public override long AsInt64 { get; } Property Value Type Description Int64 The long value that this instance represents. Overrides FieldValue.AsInt64"
  },
  "api/Oracle.NoSQL.SDK.LongValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.-ctor.html",
    "title": "Constructor LongValue | NoSQL SDK for .NET",
    "keywords": "Constructor LongValue LongValue(Int64) Initializes a new instance of the LongValue with the specified long value. Declaration public LongValue(long value) Parameters Type Name Description Int64 value The value which this instance will represent."
  },
  "api/Oracle.NoSQL.SDK.LongValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Long Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.LongValue.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.html",
    "title": "Class LongValue | NoSQL SDK for .NET",
    "keywords": "Class LongValue Represents a 64-bit signed integer value. Inheritance Object FieldValue LongValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt64() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class LongValue : FieldValue Remarks This class is used to represent values of NoSQL data type Long . This value is represented by a C# type long . Constructors Name Description LongValue(Int64) Initializes a new instance of the LongValue with the specified long value. Properties Name Description AsInt64 Gets the value of this instance as long . DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToDateTime() Converts the value represented by this instance to a DateTime object. ToDecimal() Converts the value represented by this instance to a decimal number. ToDouble() Converts the value represented by this instance to a double precision floating point number. ToInt32() Converts the value represented by this instance to a 32-bit signed integer. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.LongValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.LongValue.ToDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.ToDateTime.html",
    "title": "Method ToDateTime | NoSQL SDK for .NET",
    "keywords": "Method ToDateTime ToDateTime() Converts the value represented by this instance to a DateTime object. Declaration public override DateTime ToDateTime() Returns Type Description DateTime A DateTime value constructed from the value represented by this instance as a number of milliseconds since the Unix Epoch. Overrides FieldValue.ToDateTime() Remarks This method constructs DateTime object from the value represented by this instance interpreted as a number of milliseconds since the Unix Epoch, 00:00:00 UTC, January 1, 1970. If the value represented by this instance is negative, it is then interpreted as a number of milliseconds before the Unix Epoch. Exceptions Type Condition OverflowException If the given number of milliseconds produces a TimeSpan value less than MinValue or greater than MaxValue . ArgumentOutOfRangeException If the resulting DateTime value is less than MinValue or greater than MaxValue See Also UnixEpoch"
  },
  "api/Oracle.NoSQL.SDK.LongValue.ToDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.ToDecimal.html",
    "title": "Method ToDecimal | NoSQL SDK for .NET",
    "keywords": "Method ToDecimal ToDecimal() Converts the value represented by this instance to a decimal number. Declaration public override Decimal ToDecimal() Returns Type Description Decimal A decimal number equivalent to the value represented by this instance. Overrides FieldValue.ToDecimal() Remarks This method performs implicit conversion from long to decimal ."
  },
  "api/Oracle.NoSQL.SDK.LongValue.ToDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.ToDouble.html",
    "title": "Method ToDouble | NoSQL SDK for .NET",
    "keywords": "Method ToDouble ToDouble() Converts the value represented by this instance to a double precision floating point number. Declaration public override double ToDouble() Returns Type Description Double A double precision floating point number equivalent to the value represented by this instance. Overrides FieldValue.ToDouble() Remarks This method performs implicit conversion from long to double ."
  },
  "api/Oracle.NoSQL.SDK.LongValue.ToInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.LongValue.ToInt32.html",
    "title": "Method ToInt32 | NoSQL SDK for .NET",
    "keywords": "Method ToInt32 ToInt32() Converts the value represented by this instance to a 32-bit signed integer. Declaration public override int ToInt32() Returns Type Description Int32 A 32-bit signed integer that is equivalent to the value represented by this instance. Overrides FieldValue.ToInt32() Remarks This method performs the same conversion as ToInt32(Int64) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToInt32(Int64)"
  },
  "api/Oracle.NoSQL.SDK.MapValue.Add.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Add.html",
    "title": "Method Add | NoSQL SDK for .NET",
    "keywords": "Method Add Add(String, FieldValue) Adds the specified key and value to the dictionary represented by this instance. Declaration public void Add(string key, FieldValue value) Parameters Type Name Description String key The key to add. FieldValue value The value to add. If null , Null will be added instead. Exceptions Type Condition ArgumentNullException If key is null . ArgumentException The value with the specified key already exists in the dictionary."
  },
  "api/Oracle.NoSQL.SDK.MapValue.Clear.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Clear.html",
    "title": "Method Clear | NoSQL SDK for .NET",
    "keywords": "Method Clear Clear() Remove all keys and values from the dictionary represented by this instance. Declaration public void Clear() Remarks Count is set to 0, but the capacity of the dictionary is not changed by this operation."
  },
  "api/Oracle.NoSQL.SDK.MapValue.ContainsKey.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.ContainsKey.html",
    "title": "Method ContainsKey | NoSQL SDK for .NET",
    "keywords": "Method ContainsKey ContainsKey(String) Determines whether the specified key exists in the dictionary represented by this instance. Declaration public bool ContainsKey(string key) Parameters Type Name Description String key The key to locate. Returns Type Description Boolean true if the dictionary contains an element with the specified key, otherwise false . Exceptions Type Condition ArgumentNullException The key is null ."
  },
  "api/Oracle.NoSQL.SDK.MapValue.Count.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Count.html",
    "title": "Property Count | NoSQL SDK for .NET",
    "keywords": "Property Count Count Gets the number of key/value pairs in the dictionary represented by this MapValue instance. Declaration public override int Count { get; } Property Value Type Description Int32 The number of key/value pairs in the dictionary which this instance represents. Overrides FieldValue.Count"
  },
  "api/Oracle.NoSQL.SDK.MapValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.-ctor.html",
    "title": "Constructor MapValue | NoSQL SDK for .NET",
    "keywords": "Constructor MapValue MapValue() Initializes a new instance of MapValue that is empty and has the default initial capacity. Declaration public MapValue() See Also MapValue(Int32) MapValue(Int32) Initializes a new instance of MapValue that is empty and has the specified initial capacity. Declaration public MapValue(int capacity) Parameters Type Name Description Int32 capacity The number of elements that the new MapValue can initially hold. Remarks The capacity of MapValue is the number of key/value pairs that MapValue can hold. As key and values are added to MapValue , the capacity is automatically increased as required. MapValue(IEnumerable<KeyValuePair<String, FieldValue>>) Initializes a new instance of MapValue that contains elements from the specified collection of key-value pairs. Declaration public MapValue(IEnumerable<KeyValuePair<string, FieldValue>> collection) Parameters Type Name Description IEnumerable < KeyValuePair < String , FieldValue >> collection The collection whose elements are copied into the new MapValue . Exceptions Type Condition ArgumentNullException If collection is null ."
  },
  "api/Oracle.NoSQL.SDK.MapValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Map Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.MapValue.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.html",
    "title": "Class MapValue | NoSQL SDK for .NET",
    "keywords": "Class MapValue Represents an unordered dictionary with string keys and values of type FieldValue . Inheritance Object FieldValue MapValue RecordValue Implements IComparable < FieldValue > IEquatable < FieldValue > IDictionary < String , FieldValue > ICollection < KeyValuePair < String , FieldValue >> IEnumerable < KeyValuePair < String , FieldValue >> IEnumerable Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class MapValue : FieldValue Remarks This class is used to represent values of NoSQL data types Map and Json . On input, for operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) and WriteManyAsync this class also represents table rows. In addition, this class also represents primary key values used for operations such as GetAsync(String, MapValue, GetOptions, CancellationToken) and DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) . For the cases listed above the key ordering is not required. When the key ordering is required, e.g. for the results of operations such as GetAsync(String, MapValue, GetOptions, CancellationToken) and QueryAsync , RecordValue is used which represents the ordered dictionary and is a subclass of this class. The instances of MapValue may have a nested structure as the values it represents may be of any subclass of FieldValue including complex types such as ArrayValue , MapValue and RecordValue . On input, e.g. when inserting a row via PutAsync(String, MapValue, PutOptions, CancellationToken) , the mapping between the keys of MapValue instance and table fields is case-insensitive. The same is true for keys/fields inside the values of data types Map and Record . However, for fields inside a value of data type Json the mapping is case-sensitive. This class supports all the functionality of IDictionary<TKey,TValue> interface, including enumeration with foreach loop. Examples Creating an instance of MapValue to represent a row with fields \"id\" and \"info\" of data types Long and Json respectively. var row = new MapValue { [\"id\"] = 1000, [\"info\"] = new MapValue { [\"myArray\"] = new ArrayValue { 1, 2, 3, 4, 5 }, [\"myObject\"] = new MapValue { [\"myString\"] = \"abc\", [\"myBinary\"] = Convert.FromBase64String(\"xyz\") } } }; Constructors Name Description MapValue() Initializes a new instance of MapValue that is empty and has the default initial capacity. MapValue(IEnumerable<KeyValuePair<String, FieldValue>>) Initializes a new instance of MapValue that contains elements from the specified collection of key-value pairs. MapValue(Int32) Initializes a new instance of MapValue that is empty and has the specified initial capacity. Properties Name Description Count Gets the number of key/value pairs in the dictionary represented by this MapValue instance. DbType Gets DbType of this instance which represents the type of this value. Item[String] Gets or sets the value associated with the specified key. Keys Gets the collection containing the keys in the dictionary represented by this MapValue instance. Values Gets the collection containing the values in the dictionary represented by this MapValue instance. Methods Name Description Add(String, FieldValue) Adds the specified key and value to the dictionary represented by this instance. Clear() Remove all keys and values from the dictionary represented by this instance. ContainsKey(String) Determines whether the specified key exists in the dictionary represented by this instance. Remove(String) Removes the value with the specified key from the dictionary represented by this instance. SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . TryGetValue(String, out FieldValue) Gets the value associated with the specified key. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.MapValue.Item.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Item.html",
    "title": "Property Item | NoSQL SDK for .NET",
    "keywords": "Property Item Item[String] Gets or sets the value associated with the specified key. Declaration public override FieldValue this[string key] { get; set; } Parameters Type Name Description String key The key. Property Value Type Description FieldValue The value associated with the key . If the key is not found, a get operation throws a KeyNotFoundException , and a set operation creates a new value for the key . For set operation, if value is null , Null will be used. Overrides FieldValue.Item[String] Exceptions Type Condition ArgumentNullException The key is null . KeyNotFoundException The value is retrieved and the key is not found in the dictionary."
  },
  "api/Oracle.NoSQL.SDK.MapValue.Keys.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Keys.html",
    "title": "Property Keys | NoSQL SDK for .NET",
    "keywords": "Property Keys Keys Gets the collection containing the keys in the dictionary represented by this MapValue instance. Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection < String > Collection containing the keys in the dictionary represented by this instance."
  },
  "api/Oracle.NoSQL.SDK.MapValue.Remove.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Remove.html",
    "title": "Method Remove | NoSQL SDK for .NET",
    "keywords": "Method Remove Remove(String) Removes the value with the specified key from the dictionary represented by this instance. Declaration public bool Remove(string key) Parameters Type Name Description String key The key to remove. Returns Type Description Boolean true if the value was found and removed, false if key was not found in the dictionary. Exceptions Type Condition ArgumentNullException The key is null ."
  },
  "api/Oracle.NoSQL.SDK.MapValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.MapValue.TryGetValue.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.TryGetValue.html",
    "title": "Method TryGetValue | NoSQL SDK for .NET",
    "keywords": "Method TryGetValue TryGetValue(String, out FieldValue) Gets the value associated with the specified key. Declaration public bool TryGetValue(string key, out FieldValue val) Parameters Type Name Description String key The key. FieldValue val When this method returns, this parameter will contain the value associated with the specified key if the key was found, otherwise it will be null . Returns Type Description Boolean true if key was found in the dictionary, otherwise false ."
  },
  "api/Oracle.NoSQL.SDK.MapValue.Values.html": {
    "href": "api/Oracle.NoSQL.SDK.MapValue.Values.html",
    "title": "Property Values | NoSQL SDK for .NET",
    "keywords": "Property Values Values Gets the collection containing the values in the dictionary represented by this MapValue instance. Declaration public ICollection<FieldValue> Values { get; } Property Value Type Description ICollection < FieldValue > Collection containing the values in the dictionary represented by this instance."
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.AddReplicaAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.AddReplicaAsync.html",
    "title": "Method AddReplicaAsync | NoSQL SDK for .NET",
    "keywords": "Method AddReplicaAsync AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table. Declaration public Task<TableResult> AddReplicaAsync(string tableName, Region region, AddReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Region region Region where to add the replica. AddReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This operation adds replica to a Global Active table. If performed on a regular table (singleton), it will be converted to Global Active table, provided that the singleton table schema conforms to certain restrictions. For more information, see Global Active Tables in NDCS . Note that TableLimits for the replica table will default to the table limits for the existing table, however you can override the values of ReadUnits and WriteUnits for the replica by using options ReadUnits and WriteUnits . The storage capacity of the replica will always be the same as that of the existing table. As with ExecuteTableDDLAsync , the result returned from this API does not imply operation completion. Same considerations as described in ExecuteTableDDLAsync about long-running operations apply here, including the need to use WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to asynchronously wait for operation completion. Note that even after this operation is completed (as described above), the replica table in the receiver region may still be in the process of being initialized with the data from the sender region, during which time the data operations on the replica table will fail with TableNotReadyException . Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also AddReplicaOptions TableResult ExecuteTableDDLAsync AddReplicaAsync(String, String, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table. Declaration public Task<TableResult> AddReplicaAsync(string tableName, string regionId, AddReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String regionId Region id of the region where to add the replica. AddReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is equivalent to AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) except that it takes the region id as regionId parameter instead of Region instance. E.g. \"ap-mumbai-1\", \"us-ashburn-1\", etc. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) RegionId"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.AddReplicaWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.AddReplicaWithCompletionAsync.html",
    "title": "Method AddReplicaWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method AddReplicaWithCompletionAsync AddReplicaWithCompletionAsync(String, Region, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table and waits asynchronously for the operation completion. Declaration public Task<TableResult> AddReplicaWithCompletionAsync(string tableName, Region region, AddReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Region region Region where to add the replica. AddReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to calling AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned TableResult object. If the operation is successful, the table state in the resulting TableResult object should be Active . For this operation, Timeout covers the total time interval including waiting for the DDL operation completion. If not specified, separate default timeouts are used for issuing the operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify poll delay as PollDelay which otherwise defaults to TablePollDelay . Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) AddReplicaWithCompletionAsync(String, String, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table and waits asynchronously for the operation completion. Declaration public Task<TableResult> AddReplicaWithCompletionAsync(string tableName, string regionId, AddReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String regionId Region id of the region where to add the replica. AddReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is equivalent to AddReplicaWithCompletionAsync(String, Region, AddReplicaOptions, CancellationToken) except that it takes the region id as regionId parameter instead of Region instance. E.g. \"ap-mumbai-1\", \"us-ashburn-1\", etc. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also AddReplicaWithCompletionAsync(String, Region, AddReplicaOptions, CancellationToken) RegionId"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.-ctor.html",
    "title": "Constructor NoSQLClient | NoSQL SDK for .NET",
    "keywords": "Constructor NoSQLClient NoSQLClient(NoSQLConfig) Initializes new instance of NoSQLClient using provided configuration object. You may omit Declaration public NoSQLClient(NoSQLConfig config = null) Parameters Type Name Description NoSQLConfig config (Optional) Client configuration object. Remarks You may omit config parameter or pass null if using the cloud service with the default OCI configuration file that contains credentials and region identifier. In this case, a default NoSQLConfig instance will be created. In all other cases, a valid NoSQLConfig object must be provided. See NoSQLConfig() for more details. Note that NoSQLConfig will be copied when creating NoSQLClient instance, so that the modifications to NoSQLConfig will have no effect on existing NoSQLClient instances which are immutable. Exceptions Type Condition ArgumentException If config is invalid or inconsistent, or config is not provided and default NoSQLConfig instance cannot be used as described above. See Also NoSQLConfig NoSQLClient(String) Initializes new instance of NoSQLClient using provided path to JSON configuration file. Declaration public NoSQLClient(string configFile) Parameters Type Name Description String configFile Path to JSON configuration file as either absolute path or relative to the current directory of the application. Remarks This is equivalent to using NoSQLClient(NoSQLConfig) constructor and passing the result of FromJsonFile(String) as parameter. Exceptions Type Condition ArgumentException If failed to parse provided configFile (file is not found, cannot be read, does not contain valid JSON or valid data to instantiate NoSQLConfig ) or if resulting NoSQLConfig is invalid or inconsistent. See Also NoSQLConfig"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteAsync.html",
    "title": "Method DeleteAsync | NoSQL SDK for .NET",
    "keywords": "Method DeleteAsync DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) Deletes a row from a table. Declaration public Task<DeleteResult<RecordValue>> DeleteAsync(string tableName, MapValue primaryKey, DeleteOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue primaryKey Primary key of the row as MapValue representing names and values of the primary key fields. DeleteOptions options (Optional) Options for the Delete operation. If not specified or null , appropriate defaults will be used. See DeleteOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < DeleteResult < RecordValue >> Task returning DeleteResult<TRow> . Remarks The row is identified using a primary key value. By default a delete operation is unconditional and will succeed if the specified row exists. Delete operations can be made conditional based on whether the RowVersion of an existing row matches that supplied by MatchVersion . Instead of using MatchVersion you may also use DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) API to perform the same conditional operation. It is also possible, on failure, to return information about the existing row. The row and its version can be optionally returned as part of DeleteResult<TRow> if a delete operation fails because of a version mismatch.The existing row information will only be returned if ReturnExisting is true and MatchVersion is set and the operation fails because the row exists and its RowVersion does not match the one provided. Use of ReturnExisting may result in additional consumed read capacity and may affect the operation's latency. If the operation is successful there will be no information returned about the deleted row. Note that the failures of conditional Delete operation as discussed above will not result in an exception and the DeleteResult<TRow> will still be returned. Examples Executing Delete operation on table with schema MyTable(id LONG, name STRING, PRIMARY KEY(id)). var result = await client.DeleteAsync( \"MyTable\", new MapValue { [\"id\"] = 1000 }); // true if the delete succeeded, false if the row was not found Console.WriteLine(result.Success); Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteOptions DeleteResult <TRow> DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteIfVersionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteIfVersionAsync.html",
    "title": "Method DeleteIfVersionAsync | NoSQL SDK for .NET",
    "keywords": "Method DeleteIfVersionAsync DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) Deletes a row from a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. Declaration public Task<DeleteResult<RecordValue>> DeleteIfVersionAsync(string tableName, MapValue primaryKey, RowVersion version, DeleteOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue primaryKey Primary key of the row. RowVersion version Row version to match. DeleteOptions options (Optional) Options for the Delete operation. Note that the value of MatchVersion is not used for this API. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < DeleteResult < RecordValue >> Task returning DeleteResult<TRow> . Remarks This API is a shorthand for DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) with MatchVersion specified. Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or invalid or version is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteAsync(String, MapValue, DeleteOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteManyAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteManyAsync.html",
    "title": "Method DeleteManyAsync | NoSQL SDK for .NET",
    "keywords": "Method DeleteManyAsync DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) Atomically executes a sequence of Delete operations on a table. Declaration public Task<WriteManyResult<RecordValue>> DeleteManyAsync(string tableName, IReadOnlyCollection<MapValue> primaryKeys, DeleteManyOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. IReadOnlyCollection < MapValue > primaryKeys A collection of primary keys that identify the rows to delete in a single transaction (can be an array, list or any other class implementing IReadOnlyCollection<T> ) DeleteManyOptions options (Optional) Options for the DeleteMany operation. If not specified or null , appropriate defaults will be used. See DeleteManyOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < WriteManyResult < RecordValue >> Task returning WriteManyResult<TRow> . Remarks This API is a shorthand for WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) and can be used instead of it when all of the following is true: All operations are on a single table. All operations in the sequence are Delete (no Put operations). You don't need to specify separate DeleteOptions for each operation in the sequence and instead it is sufficient to specify the same options for all operations in DeleteManyOptions . There are no Delete operations in the sequence conditional on RowVersion (because the version has to be specified individually for each row). Other than the above, this API is the same as WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Examples Performing DeleteMany operation. var primaryKey1 = new MapValue { [\"id\"] = 1000 }; var primaryKey2 = new MapValue { [\"id\"] = 1001 }; var primaryKey3 = new MapValue { [\"id\"]= 1002 }; var result = await client.DeleteManyAsync( \"myTable\", new[] { primaryKey1, primaryKey2, primaryKey3 }); Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKeys is null or contains invalid values or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteRangeAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DeleteRangeAsync.html",
    "title": "Method DeleteRangeAsync | NoSQL SDK for .NET",
    "keywords": "Method DeleteRangeAsync DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) Deletes multiple rows from a table in an atomic operation. Declaration public Task<DeleteRangeResult> DeleteRangeAsync(string tableName, object partialPrimaryKey, DeleteRangeOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. DeleteRangeOptions options (Optional) Options for the DeleteRange operation. If not specified or null , appropriate defaults will be used. See DeleteRangeOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < DeleteRangeResult > Task returning DeleteRangeResult . Remarks This operation deletes multiple rows from a table residing on the same shard in an atomic operation. A range of rows is specified using a partial primary key plus a field range based on the portion of the key that is not provided.The partial primary key must contain all of the fields that are in the shard key. For example if a table's primary key is <id, timestamp> and its shard key is the id, it is possible to delete a range of timestamp values for a specific id by providing a key with an id value but no timestamp value and providing a range of timestamp values as FieldRange . If the field range is not provided, the operation will delete all rows matching the partial primary key. Because this operation can exceed the maximum amount of data modified in a single operation as specified by MaxWriteKB or the system limit, it is possible that it will delete only part of the range of rows and a continuation key (provided as ContinuationKey ) can be used to continue the operation. In this case, call DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) in a loop until ContinuationKey is null as shown in the example below. Alternatively, you can call GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) and iterate over resulting IAsyncEnumerable<T> . Note that when the DeleteRange operation requires multiple calls with the continuation key or iteration with GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) , the operation is no longer atomic as a whole, although each call to DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) and each iteration of the loop over GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) is still atomic. Examples Executing DeleteRange operation on table with schema myTable( storeId LONG, itemId LONG, itemName STRING, PRIMARY KEY( SHARD(storeId), itemId)). This operation will delete all items for a given store because we do not provide the field range. This operation is performed in a loop using the continuation key to allow deleting large quantity of the table rows. var partialPrimaryKey = new MapValue { [\"storeId\"] = 50 }; var options = new DeleteRangeOptions(); do { var result = await client.DeleteRangeAsync(\"myTable\", partialPrimaryKey, options); Console.WriteLine($\"Deleted {result.DeletedCount} row(s)\"); options.ContinuationKey = result.ContinuationKey; } while(options.ContinuationKey != null); Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteRangeOptions DeleteRangeResult GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) DeleteRangeAsync(String, Object, FieldRange, CancellationToken) Deletes multiple rows from a table in an atomic operation. Declaration public Task<DeleteRangeResult> DeleteRangeAsync(string tableName, object partialPrimaryKey, FieldRange fieldRange, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. FieldRange fieldRange Field range for the DeleteRange operation, see FieldRange . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < DeleteRangeResult > Task returning DeleteRangeResult . Remarks This API is a shorthand for DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) that takes fieldRange instead of the options and can be used when no other options are required. Examples Executing DeleteRange operation on table with schema myTable( storeId LONG, itemId LONG, itemName STRING, PRIMARY KEY( SHARD(storeId), itemId)). This operation will delete a range of items in a given store which should not be large. var result = await client.DeleteRangeAsync( \"myTable\", new MapValue // partial primary key { [\"storeId\"] = 50 }, new FieldRange(\"itemId\") { StartsWith = 1000, EndsBefore = 1010 }); Console.WriteLine($\"Deleted {result.DeletedCount} row(s)\"); Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid or fieldRange is invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) DeleteRangeAsync(String, Object, CancellationToken) Deletes multiple rows from a table in an atomic operation. Declaration public Task<DeleteRangeResult> DeleteRangeAsync(string tableName, object partialPrimaryKey, CancellationToken cancellationToken) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < DeleteRangeResult > Task returning DeleteRangeResult . Remarks This API is a shorthand for DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) . Use this overload when you need to provide CancellationToken but you don't need to provide DeleteRangeOptions . Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.Dispose.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.Dispose.html",
    "title": "Method Dispose | NoSQL SDK for .NET",
    "keywords": "Method Dispose Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources. Declaration protected void Dispose(bool disposing) Parameters Type Name Description Boolean disposing true to release both managed and unmanaged resources, false to release only unmanaged resources. Remarks This method is called by the public Dispose() method and the Finalize() method. See Also Implementing a Dispose Method Dispose() Releases resources used by this NoSQLClient instance. Declaration public void Dispose() Remarks After this method is called, NoSQLClient can no longer be used. Applications must dispose of NoSQLClient instance when done with it by calling this method or via using statement."
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DropReplicaAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DropReplicaAsync.html",
    "title": "Method DropReplicaAsync | NoSQL SDK for .NET",
    "keywords": "Method DropReplicaAsync DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table. Declaration public Task<TableResult> DropReplicaAsync(string tableName, Region region, DropReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Region region Region from where to drop the replica. DropReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This operation drops replica from a Global Active table. For more information, see Global Active Tables in NDCS . As with ExecuteTableDDLAsync , the result returned from this API does not imply operation completion. Same considerations as described in ExecuteTableDDLAsync about long-running operations apply here, including the need to use WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to asynchronously wait for operation completion. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DropReplicaOptions TableResult ExecuteTableDDLAsync DropReplicaAsync(String, String, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table. Declaration public Task<TableResult> DropReplicaAsync(string tableName, string regionId, DropReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String regionId Region id of the region from where to drop the replica. DropReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is equivalent to DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) except that it takes the region id as regionId parameter instead of Region instance. E.g. \"ap-mumbai-1\", \"us-ashburn-1\", etc. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) RegionId"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.DropReplicaWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.DropReplicaWithCompletionAsync.html",
    "title": "Method DropReplicaWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method DropReplicaWithCompletionAsync DropReplicaWithCompletionAsync(String, Region, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table and waits asynchronously for the operation completion. Declaration public Task<TableResult> DropReplicaWithCompletionAsync(string tableName, Region region, DropReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Region region Region from where to drop the replica. DropReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to calling DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned TableResult object. If the operation is successful, the table state in the resulting TableResult object should be Active . For this operation, Timeout covers the total time interval including waiting for the DDL operation completion. If not specified, separate default timeouts are used for issuing the operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify poll delay as PollDelay which otherwise defaults to TablePollDelay . Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) DropReplicaWithCompletionAsync(String, String, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table and waits asynchronously for the operation completion. Declaration public Task<TableResult> DropReplicaWithCompletionAsync(string tableName, string regionId, DropReplicaOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String regionId Region id of the region where to add the replica. DropReplicaOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is equivalent to DropReplicaWithCompletionAsync(String, Region, DropReplicaOptions, CancellationToken) except that it takes the region id as regionId parameter instead of Region instance. E.g. \"ap-mumbai-1\", \"us-ashburn-1\", etc. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DropReplicaWithCompletionAsync(String, Region, DropReplicaOptions, CancellationToken) RegionId"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteAdminAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteAdminAsync.html",
    "title": "Method ExecuteAdminAsync | NoSQL SDK for .NET",
    "keywords": "Method ExecuteAdminAsync ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system. Declaration public Task<AdminResult> ExecuteAdminAsync(char[] statement, AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description Char [] statement The statement. AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult . Remarks The operations allowed are defined by Data Definition Language (DDL) portion of the query language that do not affect a specific table.For table-specific DLL operations use ExecuteTableDDLAsync . Examples of statements passed to this method include: CREATE NAMESPACE my_namespace CREATE USER some_user IDENTIFIED BY password CREATE ROLE some_role GRANT ROLE some_role TO USER some_user Some operations initiated by this API are performed by the service asynchronously and can be potentially long-running. For these operations, getting the result returned by this API does not imply operation completion. Call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on returned AdminResult to asynchronously wait for the operation completion. Alternatively, you may check the status of the running DDL operation by calling GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) . Other operations are immediate and are completed when the result from is returned. The readonly operations that don't modify system state but only return back information are immediate and will have State as Complete and non-null Output . When an admin DDL operation is completed, the status of the operation should be Complete . To get only the final result, instead of this API, call ExecuteAdminWithCompletionAsync(Char[], AdminOptions, CancellationToken) , which is equivalent to calling ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) and then WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) (you can do this regardless of the type of the admin operation because WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) is a no-op if the operation has already completed). This API takes the statement as char[] because some statements will include passwords and using an array allows the application to clear the memory to avoid keeping sensitive information in memory. For statements that don't include sensitive information, you may also use ExecuteAdminAsync(String, AdminOptions, CancellationToken) . Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also AdminOptions AdminResult ExecuteAdminAsync(String, AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system. Declaration public Task<AdminResult> ExecuteAdminAsync(string statement, AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement The statement. AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult . Remarks This API is the same as ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) but takes the statement as a string and thus can be used if the statement does not contain sensitive information. Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync(Char[], AdminOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteAdminWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteAdminWithCompletionAsync.html",
    "title": "Method ExecuteAdminWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method ExecuteAdminWithCompletionAsync ExecuteAdminWithCompletionAsync(Char[], AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system and asynchronously waits for its completion. Declaration public Task<AdminResult> ExecuteAdminWithCompletionAsync(char[] statement, AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description Char [] statement The statement. AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult . Remarks This method is equivalent to calling ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned AdminResult object. If the operation is successful, the state in the resulting AdminResult object should be Complete . For this operation, Timeout covers the total time interval including waiting for the admin operation completion. If not specified, separate default timeouts are used for issuing the admin operation and waiting for its completion, with values of AdminTimeout and AdminPollTimeout correspondingly (the latter defaults to no timeout if AdminPollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify the poll delay as PollDelay which otherwise defaults to AdminPollDelay . Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) ExecuteAdminWithCompletionAsync(String, AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system and asynchronously waits for its completion. Declaration public Task<AdminResult> ExecuteAdminWithCompletionAsync(string statement, AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement The statement. AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult . Remarks This API is the same as ExecuteAdminWithCompletionAsync(Char[], AdminOptions, CancellationToken) but takes the statement as a string and thus can be used if the statement does not contain sensitive information. Examples Create a namespace. We can ignore the return value since the result would represent the final state of successful operation (or an exception will be thrown). try { await client.ExecuteAdminWithCompletionAsync( \"CREATE NAMESPACE my_namespace\"); Console.WriteLine(\"Namespace created.\"); } catch(Exception e) { Console.WriteLine($\"Got exception: {e.Message}\"); } Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminWithCompletionAsync(Char[], AdminOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteTableDDLAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteTableDDLAsync.html",
    "title": "Method ExecuteTableDDLAsync | NoSQL SDK for .NET",
    "keywords": "Method ExecuteTableDDLAsync ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) Executes a DDL operation on a table. Declaration public Task<TableResult> ExecuteTableDDLAsync(string statement, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement SQL statement. TableDDLOptions options (Optional) Options for table DDL operation. If not specified or null , appropriate defaults will be used. See TableDDLOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks The operations allowed are defined by the Data Definition Language (DDL) portion of the query language related to tables such as table creation and drop, index add and drop, and the ability to alter table schema and table limits. Operations using table DDL statements infer the table name from the statement itself, e.g. CREATE TABLE MyTable(...) . Table creation requires a valid TableLimits object to define the throughput and storage desired for the table. It is an error for TableLimits to be specified with a statement other than create or alter table. Note that these are potentially long-running operations, so the result returned by this API does not imply operation completion and the table may be in an intermediate state (see TableState for more details). Call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on returned TableResult to asynchronously wait for the operation completion. Alternatively, you may check the status of the running DDL operation by calling GetTableAsync(TableResult, GetTableOptions, CancellationToken) . When the DDL operation is completed, the table state should be either Active or Dropped (only if the operation was DROP TABLE ). To get only the final result, instead of this API, call ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) , which is equivalent to calling ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) and then WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) . Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also TableDDLOptions TableResult ExecuteTableDDLAsync(String, TableLimits, CancellationToken) Executes DDL operation on a table. Declaration public Task<TableResult> ExecuteTableDDLAsync(string statement, TableLimits tableLimits, CancellationToken cancellationToken = null) Parameters Type Name Description String statement SQL statement. TableLimits tableLimits Table limits for table creation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is a shorthand for ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) that takes TableLimits instead of TableDDLOptions and can be used for table creation when you don't need to pass any other options. Exceptions Type Condition ArgumentException If statement is null or invalid or tableLimits is null or contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) ExecuteTableDDLAsync(String, CancellationToken) Executes DDL operation on a table. Declaration public Task<TableResult> ExecuteTableDDLAsync(string statement, CancellationToken cancellationToken) Parameters Type Name Description String statement SQL statement. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This API is a shorthand for ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) . Use this overload when you need to provide CancellationToken but you don't need to provide TableDDLOptions . Exceptions Type Condition ArgumentException If statement is null or invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteTableDDLWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ExecuteTableDDLWithCompletionAsync.html",
    "title": "Method ExecuteTableDDLWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method ExecuteTableDDLWithCompletionAsync ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) Executes DDL operation on a table and asynchronously waits for its completion. Declaration public Task<TableResult> ExecuteTableDDLWithCompletionAsync(string statement, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement SQL statement. TableDDLOptions options (Optional) Options for table DDL operation. If not specified or null , appropriate defaults will be used. See TableDDLOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to calling ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned TableResult object. If the operation is successful, the table state in the resulting TableResult object should be either Active or Dropped (only if the operation was DROP TABLE ). For this operation, Timeout covers the total time interval including waiting for the DDL operation completion. If not specified, separate default timeouts are used for issuing the DDL operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify poll delay as PollDelay which otherwise defaults to TablePollDelay . Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) ExecuteTableDDLWithCompletionAsync(String, TableLimits, CancellationToken) Executes DDL operation on a table and waits asynchronously for its completion. Declaration public Task<TableResult> ExecuteTableDDLWithCompletionAsync(string statement, TableLimits tableLimits, CancellationToken cancellationToken = null) Parameters Type Name Description String statement SQL statement. TableLimits tableLimits Table limits for table creation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is a shorthand for ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) that takes TableLimits instead of TableDDLOptions and can be used for table creation when you don't need to pass any other options. Examples Create a table. We can ignore the return value since the result will represent successful completion of the table DDL operation ( Active ) or an exception will be thrown. try { await client.ExecuteTableDDLWithCompletionAsync( \"CREATE TABLE foo(id INTEGER, name STRING, PRIMARY KEY(id))\", new TableLimits(100, 100, 50)); Console.WriteLine(\"Table created.\"); } catch(Exception e) { Console.WriteLine($\"Got exception: {e.Message}\"); } Exceptions Type Condition ArgumentException If statement is null or invalid or tableLimits is null or contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) ExecuteTableDDLWithCompletionAsync(String, CancellationToken) Executes DDL operation on a table and waits asynchronously for its completion. Declaration public Task<TableResult> ExecuteTableDDLWithCompletionAsync(string statement, CancellationToken cancellationToken) Parameters Type Name Description String statement SQL statement. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is a shorthand for ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) . Use this overload when you need to provide CancellationToken but you don't need to provide TableDDLOptions . Exceptions Type Condition ArgumentException If statement is null or invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetAdminStatusAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetAdminStatusAsync.html",
    "title": "Method GetAdminStatusAsync | NoSQL SDK for .NET",
    "keywords": "Method GetAdminStatusAsync GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) On-premise only. Gets the status of the operation performed by ExecuteAdminAsync . Declaration public Task<AdminResult> GetAdminStatusAsync(AdminResult adminResult, GetAdminStatusOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description AdminResult adminResult Result returned by ExecuteAdminAsync . GetAdminStatusOptions options (Optional) Options for this operation. If not specified or null , appropriate defaults will be used. See GetAdminStatusOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < AdminResult > Task returning AdminResult that reflects the current state of the operation. Remarks This API is used to get information about the current state of the admin DDL operation that was issued by ExecuteAdminAsync and is performed by the service asynchronously. You do not need to use this API for the immediate operations or after calling ExecuteAdminWithCompletionAsync because the the returned AdminResult will already reflect the final completed state. Exceptions Type Condition ArgumentException If adminResult is null or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync AdminResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetAsync.html",
    "title": "Method GetAsync | NoSQL SDK for .NET",
    "keywords": "Method GetAsync GetAsync(String, MapValue, GetOptions, CancellationToken) Gets the row associated with a primary key. Declaration public Task<GetResult<RecordValue>> GetAsync(string tableName, MapValue primaryKey, GetOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue primaryKey Primary key of the row as MapValue representing names and values of the primary key fields. GetOptions options (Optional) Options for the Get operation. If not specified or null , appropriate defaults will be used. See GetOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < GetResult < RecordValue >> Task returning GetResult<TRow> of RecordValue . If there is no matching row, Row is null . Remarks On success the value of the row is available as Row property. If matching row does not exist, the operation is still successful and Row property will be set to null . Examples Executing Get operation on table with schema MyTable(id LONG, name STRING, PRIMARY KEY(id)). var result = await client.GetAsync( \"MyTable\", new MapValue { [\"id\"] = 1000 }); if (result.Row != null) { // result.Row.ToString() will produce JSON string: // { id: 1000, name: \"John\" } Console.WriteLine(result.Row); } Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetOptions GetResult <TRow>"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetDeleteRangeAsyncEnumerable.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetDeleteRangeAsyncEnumerable.html",
    "title": "Method GetDeleteRangeAsyncEnumerable | NoSQL SDK for .NET",
    "keywords": "Method GetDeleteRangeAsyncEnumerable GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. Declaration public IAsyncEnumerable<DeleteRangeResult> GetDeleteRangeAsyncEnumerable(string tableName, object partialPrimaryKey, DeleteRangeOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. DeleteRangeOptions options (Optional) Options for the DeleteRange operation. If not specified or null , appropriate defaults will be used. See DeleteRangeOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < DeleteRangeResult > Async enumerable to iterate over DeleteRangeResult objects. Remarks Use this API when the number of rows to delete is large and they cannot be deleted in one atomic operation because of the limitation on the maximum amount of data modified as specified by MaxWriteKB or the system limit. This API is similar to DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) but creates IAsyncEnumerable<T> that allows you to delete range of rows in multiple successive atomic operations using await foreach construct, when the DeleteRange operation cannot be performed in one atomic operation because of the limitations discussed above. Each iteration is equivalent to calling DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) with a continuation key and returns DeleteRangeResult containing the number of deleted rows during this iteration. The quantity of rows deleted during each iteration is thus determined in the same way as for DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) , using either MaxWriteKB or the system default. Note that this method itself may only throw ArgumentException . Other exceptions listed can only be thrown during the iteration process as per deferred execution semantics of enumerables. Examples Asynchronously iterating over GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) . var partialPrimaryKey = var options = new DeleteRangeOptions { Compartment = \"my_compartment\", FieldRange = new FieldRange(\"itemId\") { StartAfter = 1000 } }; await foreach(var result in client.GetDeleteRangeAsyncEnumerable( \"myTable\", partialPrimaryKey, options)) { Console.WriteLine($\"Deleted {result.DeletedCount} row(s)\"); } Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) DeleteRangeOptions DeleteRangeResult Iterating with Async Enumerables in C# GetDeleteRangeAsyncEnumerable(String, Object, FieldRange, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. Declaration public IAsyncEnumerable<DeleteRangeResult> GetDeleteRangeAsyncEnumerable(string tableName, object partialPrimaryKey, FieldRange fieldRange, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. FieldRange fieldRange Field range for the DeleteRange operation, see FieldRange . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < DeleteRangeResult > Async enumerable to iterate over DeleteRangeResult objects. Remarks This API is a shorthand for GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) that takes fieldRange instead of the options and can be used when no other options are required. Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid or fieldRange is invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) GetDeleteRangeAsyncEnumerable(String, Object, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. Declaration public IAsyncEnumerable<DeleteRangeResult> GetDeleteRangeAsyncEnumerable(string tableName, object partialPrimaryKey, CancellationToken cancellationToken) Parameters Type Name Description String tableName The name of the table. Object partialPrimaryKey Partial primary key. Currently must be provided as MapValue representing names and values of the partial primary key fields. CancellationToken cancellationToken Cancellation token. Returns Type Description IAsyncEnumerable < DeleteRangeResult > Task returning DeleteRangeResult . Remarks This API is a shorthand for GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) . Use this overload when you need to provide CancellationToken but you don't need to provide DeleteRangeOptions . Exceptions Type Condition ArgumentException If tableName is null or invalid or partialPrimaryKey is null or invalid. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetIndexAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetIndexAsync.html",
    "title": "Method GetIndexAsync | NoSQL SDK for .NET",
    "keywords": "Method GetIndexAsync GetIndexAsync(String, String, GetIndexOptions, CancellationToken) Retrieves the information about specific index of the table. Declaration public Task<IndexResult> GetIndexAsync(string tableName, string indexName, GetIndexOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String indexName Name of the index. GetIndexOptions options (Optional) Options for this operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < IndexResult > Task returning IndexResult object. Remarks This information is retrieved as IndexResult object. If provided index name is not found, IndexNotFoundException is thrown. Exceptions Type Condition ArgumentException If tableName is null or invalid or indexName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetIndexOptions IndexResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetIndexesAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetIndexesAsync.html",
    "title": "Method GetIndexesAsync | NoSQL SDK for .NET",
    "keywords": "Method GetIndexesAsync GetIndexesAsync(String, GetIndexOptions, CancellationToken) Retrieves the information about indexes of the table. Declaration public Task<IReadOnlyList<IndexResult>> GetIndexesAsync(string tableName, GetIndexOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. GetIndexOptions options (Optional) Options for this operation. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < IReadOnlyList < IndexResult >> Task returning a list of IndexResult objects for each index of the table. If there are no indexes, empty list is returned. Remarks This information is retrieved as a list of IndexResult objects. Examples Displaying table indexes. var results = await client.GetIndexesAsync(\"MyTable\"); foreach(var result in results) { var fields = string.Join(\", \", result.Fields); Console.WriteLine($\"{result.IndexName}({fields})\"); } Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetIndexOptions IndexResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetListTablesAsyncEnumerable.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetListTablesAsyncEnumerable.html",
    "title": "Method GetListTablesAsyncEnumerable | NoSQL SDK for .NET",
    "keywords": "Method GetListTablesAsyncEnumerable GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) Returns IAsyncEnumerable<T> to list table names. Declaration public IAsyncEnumerable<ListTablesResult> GetListTablesAsyncEnumerable(ListTablesOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description ListTablesOptions options Options for this operation. Specify Limit parameter to enable paging as well as other options as needed. CancellationToken cancellationToken (Optional) Cancellation token. You may also use System.Threading.Tasks.TaskAsyncEnumerableExtensions.WithCancellation``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken) extension to pass the cancellation token to the resulting IAsyncEnumerable<T> instead of cancellationToken parameter. Returns Type Description IAsyncEnumerable < ListTablesResult > Async enumerable to iterate over ListTablesResult objects. Remarks Use this API when a given identity has access to a large number of tables and you wish to page the results rather than returning the whole list at once. This API is similar to ListTablesAsync(ListTablesOptions, CancellationToken) but creates IAsyncEnumerable<T> that allows you to iterate over the results using await foreach construct. Each of the results is ListTablesResult containing partial list of table names. Note that you must specify Limit which will set a limit on the number table names in each partial result (otherwise the first partial result will contain the whole list). The table names are returned in alphabetical order. Note that this method may only throw ArgumentException . Other exceptions listed can only be thrown during the iteration process as per deferred execution semantics of enumerables. Examples Asynchronously paging and printing table names. var options = new ListTablesOptions { Compartment = \"my_compartment\", Limit = 100 }; await foreach(var result in client.GetListTablesAsyncEnumerable(options)) { foreach(var tableName in result.TableNames) { Console.WriteLine(tableName); } } Exceptions Type Condition ArgumentException If options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ListTablesAsync(ListTablesOptions, CancellationToken) ListTablesOptions ListTablesResult Iterating with Async Enumerables in C# GetListTablesAsyncEnumerable(Int32, String, CancellationToken) Returns IAsyncEnumerable<T> to list table names. Declaration public IAsyncEnumerable<ListTablesResult> GetListTablesAsyncEnumerable(int limit, string compartmentOrNamespace = null, CancellationToken cancellationToken = null) Parameters Type Name Description Int32 limit Limit on number of tables in each partial result. Equivalent to Limit . Must be a positive value. String compartmentOrNamespace (Optional) For Cloud Service, pass either compartment id or compartment path (see remarks section for NoSQLClient ). For on-premise NoSQL database, pass namespace name. CancellationToken cancellationToken (Optional) Cancellation token. You may also use System.Threading.Tasks.TaskAsyncEnumerableExtensions.WithCancellation``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken) extension to pass the cancellation token to the resulting IAsyncEnumerable<T> instead of cancellationToken parameter. Returns Type Description IAsyncEnumerable < ListTablesResult > Async enumerable to iterate over ListTablesResult objects. Remarks This API is a shorthand for GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) that takes limit and optional compartmentOrNamespace to specify either compartment name or path (Cloud Service only) or namespace (on-premise NoSQL database only) and no other options are required. Examples Asynchronously paging and printing table names. await foreach(var result in client.GetListTablesAsyncEnumerable(100)) { foreach(var tableName in result.TableNames) { Console.WriteLine(tableName); } } Exceptions Type Condition ArgumentException If limit or compartmentOrNamespace are invalid. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetQueryAsyncEnumerable.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetQueryAsyncEnumerable.html",
    "title": "Method GetQueryAsyncEnumerable | NoSQL SDK for .NET",
    "keywords": "Method GetQueryAsyncEnumerable GetQueryAsyncEnumerable(String, QueryOptions, CancellationToken) Returns IAsyncEnumerable<T> to query a table based on the query statement. Declaration public IAsyncEnumerable<QueryResult<RecordValue>> GetQueryAsyncEnumerable(string statement, QueryOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement Query SQL statement. QueryOptions options (Optional) Options for the Query operation. If not specified or null , appropriate defaults will be used. See QueryOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < QueryResult < RecordValue >> Async enumerable to iterate over QueryResult<TRow> objects. Remarks This API facilitates iteration over the query results and is equivalent to executing QueryAsync(String, QueryOptions, CancellationToken) in a loop with the continuation key. The iteration over query results is necessary because of the limitations on the amount of data read during each query request as described in QueryAsync(String, QueryOptions, CancellationToken) . Use this API with await foreach construct to iterate over the resulting IAsyncEnumerable<T> . Each iteration of the loop produces QueryResult<TRow> which in turn may contain multiple result records, so a nested loop would be needed to iterate over each result record as shown in the example. Note that this method itself may only throw ArgumentException . Other exceptions listed can only be thrown during the iteration process as per deferred execution semantics of enumerables. Examples Asynchronously iterating over GetQueryAsyncEnumerable . await foreach(var result in client.GetQueryAsyncEnumerable( \"SELECT * FROM myTable\")) { foreach(var row in result.Rows) { // row is an instance of RecordValue Console.WriteLine($\"Id: {row[\"id\"]}, Name: {row[\"name\"]}\"); } } Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also QueryAsync(String, QueryOptions, CancellationToken) Iterating with Async Enumerables in C# 8 GetQueryAsyncEnumerable(PreparedStatement, QueryOptions, CancellationToken) Returns IAsyncEnumerable<T> to query a table based on the prepared query statement. Declaration public IAsyncEnumerable<QueryResult<RecordValue>> GetQueryAsyncEnumerable(PreparedStatement preparedStatement, QueryOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description PreparedStatement preparedStatement Prepared query statement. QueryOptions options (Optional) Options for the Query operation. If not specified or null , appropriate defaults will be used. See QueryOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < QueryResult < RecordValue >> Async enumerable to iterate over QueryResult<TRow> objects. Remarks This method is similar to GetQueryAsyncEnumerable(String, QueryOptions, CancellationToken) but it executes a query that has been prepared as PreparedStatement via PrepareAsync(String, PrepareOptions, CancellationToken) . Exceptions Type Condition ArgumentException If preparedStatement is null or invalid or options contains invalid values or if the statement uses external variables and there is a variable that was not bound or if a variable was bound that is not present in the query. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also QueryAsync"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetReplicaStatsAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetReplicaStatsAsync.html",
    "title": "Method GetReplicaStatsAsync | NoSQL SDK for .NET",
    "keywords": "Method GetReplicaStatsAsync GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. Declaration public Task<ReplicaStatsResult> GetReplicaStatsAsync(string tableName, GetReplicaStatsOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. GetReplicaStatsOptions options (Optional) Options for the operation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < ReplicaStatsResult > Task returning ReplicaStatsResult . Remarks This operation retrieves stats information for the replicas of a Global Active table.This information includes a time series of replica stats, as found in ReplicaStatsRecord . For more information on Global Active tables, see Global Active Tables in NDCS . It is possible to return a range of stats records or, by default, only the most recent stats records (up to the limit) for each replica if StartTime is not specified. Replica stats records are created on a regular basis and maintained for a period of time. Only records for time periods that have completed are returned so that a user never sees changing data for a specific range. This API returns stats for all replicas as a dictionary keyed by region id of each replica and values being a list of ReplicaStatsRecord instances for that replica (see StatsRecords ). You may limit the result to the stats of only one replica by using an overload that takes a region parameter (see GetReplicaStatsAsync(String, Region, GetReplicaStatsOptions, CancellationToken) and GetReplicaStatsAsync(String, String, GetReplicaStatsOptions, CancellationToken) ). Because the number of replica stats records can be very large, each call to GetReplicaStatsAsync returns a limited number of records (the default limit is 1000). You can customize this limit via Limit option. You can retrieve large number of replica stats records over multiple calls to GetReplicaStatsAsync by setting StartTime on each subsequent call to the value of NextStartTime returned by a previous call. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetReplicaStatsOptions ReplicaStatsResult AddReplicaAsync GetReplicaStatsAsync(String, Region, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. Declaration public Task<ReplicaStatsResult> GetReplicaStatsAsync(string tableName, Region region, GetReplicaStatsOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Region region Region from which to query replica stats information. GetReplicaStatsOptions options (Optional) Options for the operation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < ReplicaStatsResult > Task returning ReplicaStatsResult . Remarks This API is similar to GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) but allows to pass a region parameter to only get replica stats for that region. Note that the stats are returned in the same format as for GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) , in this case StatsRecords being a dictionary with one key for the specified region. If region is null , this API will behave identically to GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) and stats for all regions will be returned. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) GetReplicaStatsAsync(String, String, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. Declaration public Task<ReplicaStatsResult> GetReplicaStatsAsync(string tableName, string regionId, GetReplicaStatsOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. String regionId Region id of the region from which to query replica stats. GetReplicaStatsOptions options (Optional) Options for the operation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < ReplicaStatsResult > Task returning ReplicaStatsResult . Remarks This API is similar to GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) but allows to pass a regionId parameter to only get replica stats for that region. Note that the stats are returned in the same format as for GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) , in this case StatsRecords being a dictionary with one key for the specified region. If regionId is null , this API will behave identically to GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) and stats for all regions will be returned. Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableAsync.html",
    "title": "Method GetTableAsync | NoSQL SDK for .NET",
    "keywords": "Method GetTableAsync GetTableAsync(String, GetTableOptions, CancellationToken) Retrieves static information about a table in the form of TableResult . Declaration public Task<TableResult> GetTableAsync(string tableName, GetTableOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. GetTableOptions options (Optional) Options for GetTable operation. If not specified or null , appropriate defaults will be used. See GetTableOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This information includes the table state, provisioned throughput, capacity and schema. Dynamic information such as usage is obtained using GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) . Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetTableOptions TableResult GetTableAsync(TableResult, GetTableOptions, CancellationToken) Retrieves static information about a table in the form of TableResult . Declaration public Task<TableResult> GetTableAsync(TableResult tableResult, GetTableOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description TableResult tableResult Table result representing ongoing table DDL operation. GetTableOptions options (Optional) Options for GetTable operation. If not specified or null , appropriate defaults will be used. See GetTableOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This information includes the table state, provisioned throughput, capacity and schema. This method is similar to GetTableAsync(String, GetTableOptions, CancellationToken) but instead of table name it takes TableResult object returned by ExecuteTableDDLAsync . This allows, in addition to table information, to retrieve error information for the DDL operation. If DDL operation represented by tableResult failed, this follow-on call will throw exception containing the error information. Note that as with GetTableAsync(String, GetTableOptions, CancellationToken) this operation will only retrieve information at one point in time. If you wish to asynchronously wait for DDL operation completion, use WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) instead. Exceptions Type Condition ArgumentException If tableResult is null or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetTableOptions TableResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableUsageAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableUsageAsync.html",
    "title": "Method GetTableUsageAsync | NoSQL SDK for .NET",
    "keywords": "Method GetTableUsageAsync GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) Cloud Service Only. Retrieves dynamic information associated with a table in the form of TableUsageResult . Declaration public Task<TableUsageResult> GetTableUsageAsync(string tableName, GetTableUsageOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. GetTableUsageOptions options (Optional) Options for this operation, which allow specify a time range for usage records, limit on the number usage records returned and other parameters. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableUsageResult > Task returning TableUsageResult . Remarks This information includes a time series of usage snapshots, each indicating data such as read and write throughput, throttling events, etc, as found in TableUsageRecord . Note: this method is supported with the Cloud Service and Cloud Simulator but is not supported with on-premise NoSQL database (see KVStore ), where it will result in exception. Usage information is collected in time slices and returned in individual usage records. It is possible to return a range of usage records within a given time period. Unless the time period is specified, only one most recent usage record is returned. Usage records are created on a regular basis and maintained for a period of time. Only records for time periods that have completed are returned so that a user never sees changing data for a specific range. The usage record time slices are short (1 minute) and TableUsageResult will contain one TableUsageRecord per each time slice in a specified time range, regardless of whether the table was used at that time or was idle. Thus, care needs to be taken when specifying the time range (see StartTime and EndTime ) to avoid returning excessive number of table usage records. Another way is to specify Limit option to limit the number of usage records returned. See GetTableUsageOptions . Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or service is not in a valid state to perform this operation. NotSupportedException If this operation is invoked on on-premise NoSQL database (see KVStore ). NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetTableUsageOptions TableUsageResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableUsageAsyncEnumerable.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.GetTableUsageAsyncEnumerable.html",
    "title": "Method GetTableUsageAsyncEnumerable | NoSQL SDK for .NET",
    "keywords": "Method GetTableUsageAsyncEnumerable GetTableUsageAsyncEnumerable(String, GetTableUsageOptions, CancellationToken) Cloud Service only. Returns IAsyncEnumerable<T> to list table usage records. Declaration public IAsyncEnumerable<TableUsageResult> GetTableUsageAsyncEnumerable(string tableName, GetTableUsageOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. GetTableUsageOptions options (Optional) Options for this operation, which allow specify a time range for usage records, limit on the number usage records returned and other parameters. To retrieve multiple table usage records, the options must specify a time range. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < TableUsageResult > Async enumerable to iterate over TableUsageResult objects. Remarks Use this API when you need to retrieve a large number of table usage records and you wish to page the results rather than returning the whole list at once. This API is similar to GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) but creates IAsyncEnumerable<T> that allows you to iterate over the results using await foreach construct. Each of the results is TableUsageResult containing partial list of table usage records. Note that you must specify a time range (at least one of StartTime and EndTime ) for which to return table usage records, otherwise only one (the most recent) table usage record will be returned. You may optionally specify a limit on the number of table usage records returned in each partial result using Limit . If not specified, a default system limit will be used. Note that this method may only throw ArgumentException . Other exceptions listed can only be thrown during the iteration process as per deferred execution semantics of enumerables. Examples Asynchronously paging table usage records. var currentTime = DateTime.UtcNow; var options = new TableUsageOptions { StartTime = currentTime - TimeSpan.FromDays(1), EndTime = currentTime, Limit = 120 }; await foreach(var result in client.GetTableUsageAsyncEnumerable(options)) { foreach(var usageRecord in result.UsageRecords) { Console.WriteLine(usageRecord); } } Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or service is not in a valid state to perform this operation. NotSupportedException If this operation is invoked on on-premise NoSQL database (see KVStore ). NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) GetTableUsageOptions TableUsageResult Iterating with Async Enumerables in C# GetTableUsageAsyncEnumerable(String, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, CancellationToken) Cloud Service only. Returns IAsyncEnumerable<T> to list table usage records. Declaration public IAsyncEnumerable<TableUsageResult> GetTableUsageAsyncEnumerable(string tableName, Nullable<DateTime> startTime, Nullable<DateTime> endTime = null, Nullable<int> limit = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Nullable < DateTime > startTime Start time for the time period from which to return table usage records. Nullable < DateTime > endTime (Optional) End time for the time period from which to return table usage records. Nullable < Int32 > limit (Optional) Limit on the number of table usage records returned in each partial result of the iteration. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description IAsyncEnumerable < TableUsageResult > Async enumerable to iterate over TableUsageResult objects. Remarks This API is a shorthand for GetTableUsageAsyncEnumerable(String, GetTableUsageOptions, CancellationToken) that allows you to pass time range and limit as arguments without using GetTableUsageOptions when you do not require any other options specified by GetTableUsageOptions Exceptions Type Condition ArgumentException If tableName is null or invalid or startTime , endTime or limit contain invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or service is not in a valid state to perform this operation. NotSupportedException If this operation is invoked on on-premise NoSQL database (see KVStore ). NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also GetTableUsageAsyncEnumerable(String, GetTableUsageOptions, CancellationToken) GetTableUsageOptions"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.html",
    "title": "Class NoSQLClient | NoSQL SDK for .NET",
    "keywords": "Class NoSQLClient NoSQLClient class provides access to Oracle NoSQL Database and can be used both with Oracle NoSQL Database Cloud Service and with On-Premise Oracle NoSQL Database. Methods of this class are used to create and manage tables and indexes, and to read and write data. When used on-premise, they also support admin operations such as managing namespaces, users and roles. All operations are asynchronous and may be used with async/await . Inheritance Object NoSQLClient Implements IDisposable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NoSQLClient : Object Remarks To instantiate NoSQLClient, provide configuration in the form of NoSQLConfig object containing connection information, credentials and default values for operation options. Alternatively, you may provide a path to a JSON file containing this information. See NoSQLConfig for more details. The same interface is available to both users of Oracle NoSQL Database Cloud Service and on-premise Oracle NoSQL Database, however some methods and/or options are specific to each environment. For each such method or option, the documentation specifies which environment it is applicable to. NoSQLClient has memory and network resources associated with it. It implements IDisposable interface and must be disposed when application is done using it via calling Dispose() or via using statement. In most cases, an application only needs to create NoSQLClient instance once and dispose of it in the end. To minimize network activity as well as resource allocation and deallocation overheads, repeated creation and disposal of NoSQLClient instances is not recommended. NoSQLClient permits concurrent operations, so a single instance is sufficient to access tables in a multi-threaded application. The creation of multiple instances incurs additional resource overheads without providing any performance benefit. With the exception of Dispose() the operations on NoSQLClient follow a similar pattern. They accept a number of required parameters and and an optional options object providing optional parameters, with different options classes for different operations (e.g. TableDDLOptions , PutOptions , etc.). Note that you may reuse the same options object when performing the same operation multiple times. If an option or any of its values are not specified or set to null , corresponding values set in NoSQLConfig will be used as described in documentation for each option. For values not specified in NoSQLConfig appropriate defaults will be used. All operations are asynchronous and also accept optional CancellationToken parameter to cancel asynchronous operation. Each operation returns a Task<TResult> of corresponding operation result, with different result classes for different operations (e.g. TableResult , PutResult<TRow> etc.) Result objects returned are not thread safe and should be used by only one thread at a time unless synchronized externally. Operation failures throw exceptions. NoSQLClient may throw some standard exceptions such as ArgumentException , InvalidOperationException , TimeoutException , etc). All other exceptions are instances of NoSQLException which serves as a base class for NoSQL Database exceptions. Some exceptions allow an operation to be retried, with the expectation that it may succeed on retry, because they are caused by conditions that are temporary in nature. Examples of retryable exceptions are those which indicate resource consumption violation such as ReadThrottlingException , WriteThrottlingException and others. In addition, any network or IO errors are always retryable as the usually indicate temporary conditions. Other exceptions such as ArgumentException , TableNotFoundException , etc. are not retryable as they indicate a syntactic or semantic errors that require additional actions to be resolved. Exceptions that may be retried are those among the subclasses of NoSQLException and are indicated in the documentation for corresponding exception classes. For these subclasses the property IsRetryable is true . If a retryable exception is thrown, the driver will automatically retry the operation. The retry semantics is determined by retry handler provided as RetryHandler in the initial configuration. If not set, a default instance of NoSQLRetryHandler will be used. See IRetryHandler and NoSQLRetryHandler for details on retry behavior. This means that a result returned by an operation may be a result obtained after one or more retries (in case the initial attempt and previous retries have failed with retryable exceptions). When operation is retried by the driver, the operation timeout is considered cumulative over all retries (and not just for a single retry). The driver will keep retrying as long as retries are allowed by the retry handler and are within the specified timeout. TimeoutException is thrown once the timeout expires. TimeoutException may also be thrown even on a non-retryable operation (a single request) if the operation times out for other reasons such as network connectivity. If you are getting TimeoutException often and the service is operating properly, you may wish to adjust corresponding timeout values passed in the operation options or specified in NoSQLConfig . TimeoutException itself is not retryable automatically by the driver, although an application may choose to retry the operation. Note however that in general, TimeoutException only indicates inability for the driver to receive operation result within the specified timeout and thus it does not determine whether the operation itself was already started/completed by the service. Thus for non-idempotent operations, additional actions may need to be taken before retrying in this situation. Likewise, you may cancel operations on NoSQLClient instance for which you provided CancellationToken argument. In this case the operation may throw OperationCanceledException (or its subclass TaskCanceledException ). As with TimeoutException , catching this exception does not provide any guarantees as to whether the operation was performed by the service. Instances of NoSQLClient are thread-safe and expected to be shared among threads. For cloud service only: Each of the options classes contains Compartment property which specifies the compartment of given table (or compartment used to perform given operation). A default value to use for all operations may also be set as Compartment . If neither is set, the root compartment of the tenancy is assumed. The compartment is a string that may be either the id (OCID) of the compartment or a compartment name. Both are acceptable. If a name is used it can be either the name of a top-level compartment, or for nested compartments, it should be a compartment path to the nested compartment that does not include the root compartment name (tenant), e.g. compartmentA.compartmentB.compartmentC . Alternatively, instead of using Compartment property, you may prefix the table name with its compartment name (for top-level compartments) or compartment path (for nested compartments), e.g. compartmentA.compartmentB.compartmentC:myTable . Note that the table name cannot be prefixed with compartment id. Prefixing the table with compartment name/path takes precedence over other methods of specifying the compartment. Examples This example instantiates NoSQLClient and uses it to create table, put record into that table and then retrieve it. using Oracle.NoSQL.SDK; public class Example { public static async Task Main() { // This will ensure client is disposed on exit from Main() using var client = new NoSQLClient(\"config.json\"); // We can also use ExecuteTableDDLWithCompletionAsync() var tableResult = await client.ExecuteTableDDLAsync( \"CREATE TABLE foo(id INTEGER, name STRING, PRIMARY KEY(id))\", new TableLimits(100, 100, 50)); await tableResult.WaitForCompletionAsync(); Console.WriteLine(\"Table name: {0}, table state: {1}\", tableResult.TableName, tableResult.TableState); var putResult = await client.PutAsync(\"foo\", new MapValue { [\"id\"] = 1, [\"name\"] = \"John\" }); Console.WriteLine(\"Put succeeded: {0}\", putResult.Success); var getResult = await client.GetAsync(\"foo\", new MapValue { [\"id\"] = 1 }); Console.WriteLine(\"Get returned record:\"); // Check Row for null before converting to JSON string Console.WriteLine(getResult.Row?.ToJsonString()); } } Constructors Name Description NoSQLClient(NoSQLConfig) Initializes new instance of NoSQLClient using provided configuration object. You may omit NoSQLClient(String) Initializes new instance of NoSQLClient using provided path to JSON configuration file. Properties Name Description ServiceType Gets the service type used by this NoSQLClient instance. Methods Name Description AddReplicaAsync(String, Region, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table. AddReplicaAsync(String, String, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table. AddReplicaWithCompletionAsync(String, Region, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table and waits asynchronously for the operation completion. AddReplicaWithCompletionAsync(String, String, AddReplicaOptions, CancellationToken) Cloud Service only. Adds replica to a table and waits asynchronously for the operation completion. DeleteAsync(String, MapValue, DeleteOptions, CancellationToken) Deletes a row from a table. DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) Deletes a row from a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) Atomically executes a sequence of Delete operations on a table. DeleteRangeAsync(String, Object, DeleteRangeOptions, CancellationToken) Deletes multiple rows from a table in an atomic operation. DeleteRangeAsync(String, Object, FieldRange, CancellationToken) Deletes multiple rows from a table in an atomic operation. DeleteRangeAsync(String, Object, CancellationToken) Deletes multiple rows from a table in an atomic operation. Dispose() Releases resources used by this NoSQLClient instance. Dispose(Boolean) Releases the unmanaged resources used by this instance and optionally releases the managed resources. DropReplicaAsync(String, Region, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table. DropReplicaAsync(String, String, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table. DropReplicaWithCompletionAsync(String, Region, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table and waits asynchronously for the operation completion. DropReplicaWithCompletionAsync(String, String, DropReplicaOptions, CancellationToken) Cloud Service only. Drops replica from a table and waits asynchronously for the operation completion. ExecuteAdminAsync(Char[], AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system. ExecuteAdminAsync(String, AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system. ExecuteAdminWithCompletionAsync(Char[], AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system and asynchronously waits for its completion. ExecuteAdminWithCompletionAsync(String, AdminOptions, CancellationToken) On-premise only. Executes an administrative operation on the system and asynchronously waits for its completion. ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) Executes a DDL operation on a table. ExecuteTableDDLAsync(String, TableLimits, CancellationToken) Executes DDL operation on a table. ExecuteTableDDLAsync(String, CancellationToken) Executes DDL operation on a table. ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) Executes DDL operation on a table and asynchronously waits for its completion. ExecuteTableDDLWithCompletionAsync(String, TableLimits, CancellationToken) Executes DDL operation on a table and waits asynchronously for its completion. ExecuteTableDDLWithCompletionAsync(String, CancellationToken) Executes DDL operation on a table and waits asynchronously for its completion. GetAdminStatusAsync(AdminResult, GetAdminStatusOptions, CancellationToken) On-premise only. Gets the status of the operation performed by ExecuteAdminAsync . GetAsync(String, MapValue, GetOptions, CancellationToken) Gets the row associated with a primary key. GetDeleteRangeAsyncEnumerable(String, Object, DeleteRangeOptions, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. GetDeleteRangeAsyncEnumerable(String, Object, FieldRange, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. GetDeleteRangeAsyncEnumerable(String, Object, CancellationToken) Returns IAsyncEnumerable<T> to delete range of rows from a table in multiple successive atomic operations. GetIndexAsync(String, String, GetIndexOptions, CancellationToken) Retrieves the information about specific index of the table. GetIndexesAsync(String, GetIndexOptions, CancellationToken) Retrieves the information about indexes of the table. GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) Returns IAsyncEnumerable<T> to list table names. GetListTablesAsyncEnumerable(Int32, String, CancellationToken) Returns IAsyncEnumerable<T> to list table names. GetQueryAsyncEnumerable(PreparedStatement, QueryOptions, CancellationToken) Returns IAsyncEnumerable<T> to query a table based on the prepared query statement. GetQueryAsyncEnumerable(String, QueryOptions, CancellationToken) Returns IAsyncEnumerable<T> to query a table based on the query statement. GetReplicaStatsAsync(String, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. GetReplicaStatsAsync(String, Region, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. GetReplicaStatsAsync(String, String, GetReplicaStatsOptions, CancellationToken) Cloud Service only. Gets replica statistics information. GetTableAsync(TableResult, GetTableOptions, CancellationToken) Retrieves static information about a table in the form of TableResult . GetTableAsync(String, GetTableOptions, CancellationToken) Retrieves static information about a table in the form of TableResult . GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) Cloud Service Only. Retrieves dynamic information associated with a table in the form of TableUsageResult . GetTableUsageAsyncEnumerable(String, GetTableUsageOptions, CancellationToken) Cloud Service only. Returns IAsyncEnumerable<T> to list table usage records. GetTableUsageAsyncEnumerable(String, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int32>, CancellationToken) Cloud Service only. Returns IAsyncEnumerable<T> to list table usage records. ListNamespacesAsync(AdminOptions, CancellationToken) On-premise only. Returns the namespaces in the store as a list of strings. ListRolesAsync(AdminOptions, CancellationToken) On-premise only. Returns the roles in the store as a list of strings. ListTablesAsync(ListTablesOptions, CancellationToken) Lists tables, returning table names. ListTablesAsync(String, CancellationToken) Lists tables, returning table names. ListTablesAsync(CancellationToken) Lists tables, returning table names. ListUsersAsync(AdminOptions, CancellationToken) On-premise only. Returns the users in the store as a list of UserInfo objects. PrepareAsync(String, PrepareOptions, CancellationToken) Prepares a query for execution and reuse. PutAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table. PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table if there is no existing row that matches the primary key. PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table if there is an existing row that matches the primary key. PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) Puts a row into a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) Atomically executes a sequence of Put operations on a table. QueryAsync(PreparedStatement, QueryOptions, CancellationToken) Queries a table based on the prepared query statement. QueryAsync(String, QueryOptions, CancellationToken) Queries a table based on the query statement. SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) Cloud Service Only. Sets new limits of throughput and storage for existing table. SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) Cloud Service Only. Sets table limits on existing table and asynchronously waits for the operation completion. SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) Cloud Service Only. Sets defined and free-form tags on existing table. SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) Cloud Service Only. Sets defined and free-form tags on existing table and asynchronously waits for the operation completion. WaitForLocalReplicaInitAsync(String, TableCompletionOptions, CancellationToken) Cloud Service only. Waits asynchronously for local table replica to complete its initialization. WaitForLocalReplicaInitAsync(String, Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Cloud Service only. Waits asynchronously for local table replica to complete its initialization. WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) Waits asynchronously for a table to reach a desired state. WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) Atomically executes a sequence of Put and Delete operations on one or more tables that share the same shard key. WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) Atomically executes a sequence of Put and Delete operations on a table. See Also NoSQLConfig NoSQLException NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ListNamespacesAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ListNamespacesAsync.html",
    "title": "Method ListNamespacesAsync | NoSQL SDK for .NET",
    "keywords": "Method ListNamespacesAsync ListNamespacesAsync(AdminOptions, CancellationToken) On-premise only. Returns the namespaces in the store as a list of strings. Declaration public Task<IReadOnlyList<string>> ListNamespacesAsync(AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < IReadOnlyList < String >> Task returning a list of namespaces as strings. Remarks If no namespaces are found, empty list is returned. This operation involves performing admin DDL SHOW NAMESPACES command. Exceptions Type Condition ArgumentException If options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. BadProtocolException If received invalid output from the SHOW NAMESPACES command. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ListRolesAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ListRolesAsync.html",
    "title": "Method ListRolesAsync | NoSQL SDK for .NET",
    "keywords": "Method ListRolesAsync ListRolesAsync(AdminOptions, CancellationToken) On-premise only. Returns the roles in the store as a list of strings. Declaration public Task<IReadOnlyList<string>> ListRolesAsync(AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < IReadOnlyList < String >> Task returning a list of namespaces as strings. Remarks If no roles are found, empty list is returned. This operation involves performing admin DDL SHOW ROLES command. Exceptions Type Condition ArgumentException If options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. BadProtocolException If received invalid output from the SHOW ROLES command. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ListTablesAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ListTablesAsync.html",
    "title": "Method ListTablesAsync | NoSQL SDK for .NET",
    "keywords": "Method ListTablesAsync ListTablesAsync(ListTablesOptions, CancellationToken) Lists tables, returning table names. Declaration public Task<ListTablesResult> ListTablesAsync(ListTablesOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description ListTablesOptions options (Optional) Options for this operation, which allow specifying paging as well as other parameters. If not specified or null , appropriate defaults will be used. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < ListTablesResult > Task returning ListTablesResult object containing table names. Remarks If further information about a specific table is desired, GetTableAsync(String, GetTableOptions, CancellationToken) API may be used. If a given identity has access to a large number of tables the list may be paged by either using FromIndex and Limit or by calling GetListTablesAsyncEnumerable(ListTablesOptions, CancellationToken) instead of this API. The table names are returned as string list in ListTablesResult in alphabetical order to facilitate paging. Examples Listing all tables in a default compartment/tenancy. var result = await client.ListTablesAsync(); foreach(var tableName in result.TableNames) { Console.WriteLine(tableName); } Exceptions Type Condition ArgumentException If options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ListTablesOptions ListTablesResult ListTablesAsync(String, CancellationToken) Lists tables, returning table names. Declaration public Task<ListTablesResult> ListTablesAsync(string compartmentOrNamespace, CancellationToken cancellationToken = null) Parameters Type Name Description String compartmentOrNamespace For Cloud Service, pass either compartment id or compartment path (see remarks section for NoSQLClient ). For on-premise database, pass namespace name. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < ListTablesResult > Task returning ListTablesResult object containing table names. Remarks This API is a shorthand for ListTablesAsync(ListTablesOptions, CancellationToken) that takes compartmentOrNamespace as the only option to specify either compartment name or path (Cloud Service only) or namespace (on-premise database only). Examples Listing all tables in a given compartment. var result = await client.ListTablesAsync(\"my_compartment\"); foreach(var tableName in result.TableNames) { Console.WriteLine(tableName); } Exceptions Type Condition ArgumentException If compartmentOrNamespace is missing or invalid. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ListTablesAsync(ListTablesOptions, CancellationToken) ListTablesAsync(CancellationToken) Lists tables, returning table names. Declaration public Task<ListTablesResult> ListTablesAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Cancellation token. Returns Type Description Task < ListTablesResult > Task returning ListTablesResult object containing table names. Remarks This API is a shorthand for ListTablesAsync(ListTablesOptions, CancellationToken) . Use this overload when you need to provide CancellationToken but you don't need to provide ListTablesOptions . Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ListTablesAsync(ListTablesOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ListUsersAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ListUsersAsync.html",
    "title": "Method ListUsersAsync | NoSQL SDK for .NET",
    "keywords": "Method ListUsersAsync ListUsersAsync(AdminOptions, CancellationToken) On-premise only. Returns the users in the store as a list of UserInfo objects. Declaration public Task<IReadOnlyList<UserInfo>> ListUsersAsync(AdminOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description AdminOptions options (Optional) Options for admin DDL operation. If not specified or null , appropriate defaults will be used. See AdminOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < IReadOnlyList < UserInfo >> Task returning a list of UserInfo objects. Remarks If no users are found, empty list is returned. This operation involves performing admin DDL SHOW USERS command. Exceptions Type Condition ArgumentException If options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The system is not in a valid state to perform this operation. BadProtocolException If received invalid output from the SHOW USERS command. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteAdminAsync UserInfo"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PrepareAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PrepareAsync.html",
    "title": "Method PrepareAsync | NoSQL SDK for .NET",
    "keywords": "Method PrepareAsync PrepareAsync(String, PrepareOptions, CancellationToken) Prepares a query for execution and reuse. Declaration public Task<PreparedStatement> PrepareAsync(string statement, PrepareOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement Query SQL statement. PrepareOptions options (Optional) Options for the Prepare operation. If not specified or null , appropriate defaults will be used. See PrepareOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < PreparedStatement > Task returning PreparedStatement . Remarks Query preparation allows queries to be compiled(prepared) and reused, saving time and resources. Use of prepared queries vs direct execution of query strings is highly recommended. See QueryAsync for general information and restrictions. Prepared queries are implemented as PreparedStatement which supports bind variables in queries which can be used to more easily reuse a query by parameterization. Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also QueryAsync(PreparedStatement, QueryOptions, CancellationToken) PreparedStatement"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PutAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PutAsync.html",
    "title": "Method PutAsync | NoSQL SDK for .NET",
    "keywords": "Method PutAsync PutAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table. Declaration public Task<PutResult<RecordValue>> PutAsync(string tableName, MapValue row, PutOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue row Table row as MapValue representing names and values of the fields. Using RecordValue is not required as the field order doesn't matter for this operation. PutOptions options (Optional) Options for the Put operation. If not specified or null , appropriate defaults will be used. See PutOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < PutResult < RecordValue >> Task returning PutResult<TRow> . Remarks This method creates a new row or overwrites an existing row entirely. The value used for the put must contain a complete primary key and all required fields. It is not possible to put part of a row. Any fields that are not provided will be defaulted, overwriting any existing value. Fields that are not nullable or defaulted must be provided or the operation will fail. By default the Put operation is unconditional, but Put operations can also be conditional based on existence, or not, of a previous value as well as conditional on the RowVersion of the existing value. You may specify conditional Put via PutOptions as follows: Use IfAbsent to do a put only if there is no existing row that matches the primary key. Use IfPresent to do a put only if there is an existing row that matches the primary key. Use MatchVersion to do a put only if there is an existing row that matches the primary key and its RowVersion matches that provided. Note that the options listed above are mutually exclusive in that specify one will unset the others. Instead of specifying these options you may also use additional APIs provided as shorthands for conditional Put operations such as PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) , PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) and PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) . It is also possible, on failure, to return information about the existing row. The row and it's RowVersion can be optionally returned as part of PutResult<TRow> if a put operation fails because of a version mismatch or if the operation fails because the row already exists. The existing row information will only be returned if ReturnExisting is true and one of the following occurs: IfAbsent is true and the operation fails because the row already exists. MatchVersion is set and the operation fails because the row exists and its RowVersion does not match the one provided. Use of ReturnExisting may result in additional consumed read capacity and may affect the operation's latency. If the operation is successful there will be no information returned about the previous row. Note that the failures of conditional Put operations discussed above will not result in an exception and the PutResult<TRow> will still be returned. Examples Executing Put operation on table with schema MyTable(id LONG, name STRING, PRIMARY KEY(id)). var result = await client.PutAsync( \"MyTable\", new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }); // Will output true because unconditional Put operation is // always successful unless an exception is thrown. Console.WriteLine(result.Success); Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also PutOptions PutResult <TRow> PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfAbsentAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfAbsentAsync.html",
    "title": "Method PutIfAbsentAsync | NoSQL SDK for .NET",
    "keywords": "Method PutIfAbsentAsync PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table if there is no existing row that matches the primary key. Declaration public Task<PutResult<RecordValue>> PutIfAbsentAsync(string tableName, MapValue row, PutOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue row Table row. PutOptions options (Optional) Options for the Put operation. Note that the values of IfAbsent , IfPresent and MatchVersion are not used for this API. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < PutResult < RecordValue >> Task returning PutResult<TRow> . Remarks This API is a shorthand for PutAsync(String, MapValue, PutOptions, CancellationToken) with IfAbsent set to true . Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also PutAsync(String, MapValue, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfPresentAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfPresentAsync.html",
    "title": "Method PutIfPresentAsync | NoSQL SDK for .NET",
    "keywords": "Method PutIfPresentAsync PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) Puts a row into a table if there is an existing row that matches the primary key. Declaration public Task<PutResult<RecordValue>> PutIfPresentAsync(string tableName, MapValue row, PutOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue row Table row. PutOptions options (Optional) Options for the Put operation. Note that the values of IfAbsent , IfPresent and MatchVersion are not used for this API. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < PutResult < RecordValue >> Task returning PutResult<TRow> . Remarks This API is a shorthand for PutAsync(String, MapValue, PutOptions, CancellationToken) with IfPresent set to true . Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also PutAsync(String, MapValue, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfVersionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PutIfVersionAsync.html",
    "title": "Method PutIfVersionAsync | NoSQL SDK for .NET",
    "keywords": "Method PutIfVersionAsync PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) Puts a row into a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. Declaration public Task<PutResult<RecordValue>> PutIfVersionAsync(string tableName, MapValue row, RowVersion version, PutOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. MapValue row Table row. RowVersion version Row version to match. PutOptions options (Optional) Options for the Put operation. Note that the values of IfAbsent , IfPresent and MatchVersion are not used for this API. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < PutResult < RecordValue >> Task returning PutResult<TRow> . Remarks This API is a shorthand for PutAsync(String, MapValue, PutOptions, CancellationToken) with MatchVersion specified. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or invalid or version is null or invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also PutAsync(String, MapValue, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.PutManyAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.PutManyAsync.html",
    "title": "Method PutManyAsync | NoSQL SDK for .NET",
    "keywords": "Method PutManyAsync PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) Atomically executes a sequence of Put operations on a table. Declaration public Task<WriteManyResult<RecordValue>> PutManyAsync(string tableName, IReadOnlyCollection<MapValue> rows, PutManyOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. IReadOnlyCollection < MapValue > rows A collection of rows to put in a single transaction (can be an array, list or any other class implementing IReadOnlyCollection<T> ) PutManyOptions options (Optional) Options for the PutMany operation. If not specified or null , appropriate defaults will be used. See PutManyOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < WriteManyResult < RecordValue >> Task returning WriteManyResult<TRow> . Remarks This API is a shorthand for WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) and can be used instead of it when all of the following is true: All operations are on a single table. All operations in the sequence are Put (no Delete operations). You don't need to specify separate PutOptions for each operation in the sequence and instead it is sufficient to specify the same options for all operations in PutManyOptions . There are no Put operations in the sequence conditional on RowVersion (because the version has to be specified individually for each row). Other than the above, this API is the same as WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Examples Performing PutMany operation. var row1 = new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }; var row2 = new MapValue { [\"id\"] = 1001, [\"name\"] = \"Jane\" }; var row3 = new MapValue { [\"id\"]= 1002, [\"name\"] = \"Jill\" }; var result = await client.PutManyAsync( \"myTable\", new[] { row1, row2, row3 }); Exceptions Type Condition ArgumentException If tableName is null or invalid or rows is null or contains invalid values or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.QueryAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.QueryAsync.html",
    "title": "Method QueryAsync | NoSQL SDK for .NET",
    "keywords": "Method QueryAsync QueryAsync(String, QueryOptions, CancellationToken) Queries a table based on the query statement. Declaration public Task<QueryResult<RecordValue>> QueryAsync(string statement, QueryOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String statement Query SQL statement. QueryOptions options (Optional) Options for the Query operation. If not specified or null , appropriate defaults will be used. See QueryOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < QueryResult < RecordValue >> Task returning QueryResult<TRow> of RecordValue . Remarks Queries that include a full shard key will execute much more efficiently than more distributed queries that must go to multiple shards. DDL-style queries such as \"CREATE TABLE ...\" or \"DROP TABLE ..\" are not supported by this API. Those operations must be performed using ExecuteTableDDLAsync and similar APIs. For performance reasons prepared queries are preferred for queries that may be reused, so you may prefer to use QueryAsync(PreparedStatement, QueryOptions, CancellationToken) over QueryAsync(String, QueryOptions, CancellationToken) if you are executing the query multiple times. Prepared queries bypass compilation of the query. They also allow for parameterized queries using bind variables. The amount of data read by a single query request is limited by a system default and can be further limited by setting MaxReadKB . This limits the amount of data read and not the amount of data returned , which means that a query can return zero results but still have more data to read. This situation is detected by checking if ContinuationKey is returned. In addition, number of results returned by the query may be explicitly limited by setting Limit . For these reasons queries should always in a loop, acquiring more results, until ContinuationKey is null , indicating that the query is done. Inside the loop the continuation key is applied to QueryAsync by setting ContinuationKey . The example shows this pattern. Alternatively to this method, you may call GetQueryAsyncEnumerable(String, QueryOptions, CancellationToken) and iterate over resulting IAsyncEnumerable<T> . This is equivalent to the loop described above but allows you to avoid dealing with the continuation key explicitly. The only exception to the above are queries that definitely use a complete primary key and thus can read only a single row. These include INSERT statements as well as selects, updates or deletes of a single row based on the complete primary key. In these cases, the looping is not required, but you may still wish to check ContinuationKey to check for correctness. Examples Executing a query in a loop. var statement = \"SELECT * FROM myTable\"; var options = new QueryOptions(); do { var result = client.Query(statement, options); foreach(var row in result.Rows) { // row is an instance of RecordValue Console.WriteLine($\"Id: {row[\"id\"]}, Name: {row[\"name\"]}\"); } options.ContinuationKey = result.ContinuationKey; } while(options.ContinuationKey != null); Exceptions Type Condition ArgumentException If statement is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also QueryResult <TRow> PrepareAsync(String, PrepareOptions, CancellationToken) GetQueryAsyncEnumerable(String, QueryOptions, CancellationToken) QueryAsync(PreparedStatement, QueryOptions, CancellationToken) Queries a table based on the prepared query statement. Declaration public Task<QueryResult<RecordValue>> QueryAsync(PreparedStatement preparedStatement, QueryOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description PreparedStatement preparedStatement Prepared query statement. QueryOptions options (Optional) Options for the Query operation. If not specified or null , appropriate defaults will be used. See QueryOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < QueryResult < RecordValue >> Task returning QueryResult<TRow> of RecordValue . Remarks This method is similar to QueryAsync(String, QueryOptions, CancellationToken) but it executes a query that has been prepared as PreparedStatement via PrepareAsync(String, PrepareOptions, CancellationToken) . Exceptions Type Condition ArgumentException If preparedStatement is null or invalid or options contains invalid values or if the statement uses external variables and there is a variable that was not bound or if a variable was bound that is not present in the query. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also QueryAsync(String, QueryOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.ServiceType.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.ServiceType.html",
    "title": "Property ServiceType | NoSQL SDK for .NET",
    "keywords": "Property ServiceType ServiceType Gets the service type used by this NoSQLClient instance. Declaration public ServiceType ServiceType { get; } Property Value Type Description ServiceType Service type. Remarks This is the service type that was specified (or implicitly derived) in NoSQLConfig object used to create this instance."
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableLimitsAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableLimitsAsync.html",
    "title": "Method SetTableLimitsAsync | NoSQL SDK for .NET",
    "keywords": "Method SetTableLimitsAsync SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) Cloud Service Only. Sets new limits of throughput and storage for existing table. Declaration public Task<TableResult> SetTableLimitsAsync(string tableName, TableLimits tableLimits, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. TableLimits tableLimits The new table limits. TableDDLOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. This parameter should not be used to specify table limits, use tableLimits parameter instead. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks Note: this method is supported with the Cloud Service and Cloud Simulator but is not supported with on-premise NoSQL database (see KVStore ), where it is a no-op. This method is similar to ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) , so all considerations discussed apply here, including long running DDL operations and the need to use WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to asynchronously wait for operation completion. Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) TableDDLOptions TableResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableLimitsWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableLimitsWithCompletionAsync.html",
    "title": "Method SetTableLimitsWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method SetTableLimitsWithCompletionAsync SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) Cloud Service Only. Sets table limits on existing table and asynchronously waits for the operation completion. Declaration public Task<TableResult> SetTableLimitsWithCompletionAsync(string tableName, TableLimits tableLimits, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. TableLimits tableLimits The new table limits. TableDDLOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. This parameter should not be used to specify table limits, use tableLimits parameter instead. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to calling SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned TableResult object. If the operation is successful, the table state in the resulting TableResult object should be Active . Note: this method is supported with the Cloud Service and Cloud Simulator but is not supported with on-premise NoSQL database (see KVStore ), where it is a no-op. For this operation, Timeout covers the total time interval including waiting for the DDL operation completion. If not specified, separate default timeouts are used for issuing the DDL operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify poll delay as PollDelay which otherwise defaults to TablePollDelay . Examples Updating limits on a table. We can ignore the return value since the result would represent the final state of successful operation (or an exception will be thrown). try { await client.SetTableLimitsWithCompletionAsync( \"myTable\", new TableLimits(100, 100, 50)); Console.WriteLine(\"Table limits updated.\"); } catch(Exception e) { Console.WriteLine($\"Got exception: {e.Message}\"); } Exceptions Type Condition ArgumentException If tableName is null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableTagsAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableTagsAsync.html",
    "title": "Method SetTableTagsAsync | NoSQL SDK for .NET",
    "keywords": "Method SetTableTagsAsync SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) Cloud Service Only. Sets defined and free-form tags on existing table. Declaration public Task<TableResult> SetTableTagsAsync(string tableName, IDictionary<string, IDictionary<string, string>> definedTags, IDictionary<string, string> freeFormTags = null, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. IDictionary < String , IDictionary < String , String >> definedTags Defined tags, see DefinedTags IDictionary < String , String > freeFormTags Free-form tags, see FreeFormTags TableDDLOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. This parameter should not be used to specify defined or free-form tags, use definedTags and freeFormTags parameters instead. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks Note: this method is supported with the Cloud Service and Cloud Simulator but is not supported with on-premise NoSQL database (see KVStore ), where it is a no-op. See DefinedTags and FreeFormTags for more information on tagging. This method is similar to ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) , so all considerations discussed apply here, including long running DDL operations and the need to use WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to asynchronously wait for operation completion. To set only free-form tags, you may pass null for definedTags parameter. At least one of definedTags and freeFormTags must not be null . Exceptions Type Condition ArgumentException If tableName is null or invalid or both definedTags and freeFormTags are null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) TableDDLOptions TableResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableTagsWithCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.SetTableTagsWithCompletionAsync.html",
    "title": "Method SetTableTagsWithCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method SetTableTagsWithCompletionAsync SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) Cloud Service Only. Sets defined and free-form tags on existing table and asynchronously waits for the operation completion. Declaration public Task<TableResult> SetTableTagsWithCompletionAsync(string tableName, IDictionary<string, IDictionary<string, string>> definedTags, IDictionary<string, string> freeFormTags = null, TableDDLOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. IDictionary < String , IDictionary < String , String >> definedTags Defined tags, see DefinedTags IDictionary < String , String > freeFormTags Free-form tags, see FreeFormTags TableDDLOptions options (Optional) Options for the operation. If not specified or null , appropriate defaults will be used. This parameter should not be used to specify defined or free-form tags, use definedTags and freeFormTags parameters instead. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to calling SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) and then calling WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on the returned TableResult object. If the operation is successful, the table state in the resulting TableResult object should be Active . Note: this method is supported with the Cloud Service and Cloud Simulator but is not supported with on-premise NoSQL database (see KVStore ), where it is a no-op. For this operation, Timeout covers the total time interval including waiting for the DDL operation completion. If not specified, separate default timeouts are used for issuing the DDL operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set). Note that as with WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) you may specify poll delay as PollDelay which otherwise defaults to TablePollDelay . Exceptions Type Condition ArgumentException If tableName is null or invalid or both definedTags and freeFormTags are null or invalid or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.WaitForLocalReplicaInitAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.WaitForLocalReplicaInitAsync.html",
    "title": "Method WaitForLocalReplicaInitAsync | NoSQL SDK for .NET",
    "keywords": "Method WaitForLocalReplicaInitAsync WaitForLocalReplicaInitAsync(String, Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Cloud Service only. Waits asynchronously for local table replica to complete its initialization. Declaration public Task<TableResult> WaitForLocalReplicaInitAsync(string tableName, Nullable<TimeSpan> timeout = null, Nullable<TimeSpan> pollDelay = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. Nullable < TimeSpan > timeout Nullable < TimeSpan > pollDelay CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks After table replica is created, it needs to be initialized by copying the data (if any) from the sender region. During this initialization process, even though the table state of the replica table is Active , data operations cannot be performed on the replica table. This method is used to ensure that the replica table is ready for data operations by asynchronously waiting for the initialization process to complete. It works similar to WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) and WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) by polling the table state at regular intervals until IsLocalReplicaInitialized is true . Note that this operation must be performed in the receiver region where the table replica resides (not in the sender region from where the replica was created), meaning that this NoSQLClient instance must be configured with the receiver region (see Region ). Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also Global Active Tables in NDCS AddReplicaAsync IsLocalReplicaInitialized WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) WaitForLocalReplicaInitAsync(String, TableCompletionOptions, CancellationToken) Cloud Service only. Waits asynchronously for local table replica to complete its initialization. Declaration public Task<TableResult> WaitForLocalReplicaInitAsync(string tableName, TableCompletionOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. TableCompletionOptions options Options for the operation. CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This method is equivalent to WaitForLocalReplicaInitAsync(String, Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) except that it takes TableCompletionOptions parameter (thus allowing to specify Compartment in addition to Timeout and PollDelay ). Exceptions Type Condition TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also WaitForLocalReplicaInitAsync(String, Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) TableCompletionOptions"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.WaitForTableStateAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.WaitForTableStateAsync.html",
    "title": "Method WaitForTableStateAsync | NoSQL SDK for .NET",
    "keywords": "Method WaitForTableStateAsync WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) Waits asynchronously for a table to reach a desired state. Declaration public Task<TableResult> WaitForTableStateAsync(string tableName, TableState tableState, TableCompletionOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName Name of the table. TableState tableState Desired table state, usually Active or Dropped TableCompletionOptions options (Optional) Options for this operation. If not specified or null , defaults will be used. See TableCompletionOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks This is achieved by polling the table at specified interval. You can use this API to ensure that the table is ready for data operations after it has been created or altered. Note: the preferred way of ensuring that the table is ready for data operations after table DDL has been performed is to call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) on a TableResult object returned by ExecuteTableDDLAsync representing ongoing table DDL operation. Use this API only in a rare use case where DDL operation is performed outside your control and you don't have its TableResult . This API waits until the table has transitioned from an intermediate state like Creating or Updating to a stable state like Active , at which point it can be used. The result of this operation, if successful, is a TableResult that shows the table state from the last poll. If tableState is Dropped this method will return successfully once the table no longer exists and the resulting TableResult will contain only the table name and state (dropped), with other properties being null . Note that unlike other methods that return TableResult this method will not fail if the table doesn't exist and even if the target tableState is Active . Instead, it will keep polling until the table is created or the timeout is reached, which allows you to asynchronously wait for table creation done outside your control. Caution need to be exercised using this method to avoid excessive poll times. Exceptions Type Condition ArgumentException If tableName is null or invalid or tableState is invalid or or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also TableCompletionOptions TableResult"
  },
  "api/Oracle.NoSQL.SDK.NoSQLClient.WriteManyAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLClient.WriteManyAsync.html",
    "title": "Method WriteManyAsync | NoSQL SDK for .NET",
    "keywords": "Method WriteManyAsync WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) Atomically executes a sequence of Put and Delete operations on one or more tables that share the same shard key. Declaration public Task<WriteManyResult<RecordValue>> WriteManyAsync(WriteOperationCollection operations, WriteManyOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description WriteOperationCollection operations Collection of Put and Delete operations to execute in a single transaction. WriteManyOptions options (Optional) Options for the WriteMany operation. If not specified or null , appropriate defaults will be used. See WriteManyOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < WriteManyResult < RecordValue >> Task returning WriteManyResult<TRow> . Remarks This method executes a sequence of put and delete operations associated with one or more tables that share the same shard key portion of their primary keys. All the specified operations are executed within the scope of a single transaction, thus making the operation atomic. It is an efficient way to atomically modify multiple related rows. You can issue operations for multiple tables as long as these tables have the same shard key. This means that these tables must be part of the same parent/child table hierarchy that has a single ancestor table specifying the shard key. Thus you may include operations for this ancestor table and/or any of its descendants (for example, parent and child tables, sibling tables, etc.). All operations must be on rows that share the same shard key value. There are some size-based limitations on this operation: The max number of individual operations (Put, Delete) in a single call to this API is 50. The total request size is limited to 25 MB. The sequence of Put and Delete operations to execute is specified as WriteOperationCollection . Each operation must be on a distinct row in the table (you may not have multiple operations on the same table that share the same primary key). When you add an operation to the collection, you may also specify its PutOptions or DeleteOptions . You may share the same options object between different operations in the collection. You may not specify Compartment , Timeout or Durability properties in the options added to the collection, these can only be specified as part of WriteManyOptions . Using this method requires specifying table name for each operation. Thus, to add operations to WriteOperationCollection you must use methods of WriteOperationCollection that take table name as a parameter. See WriteOperationCollection for details. AbortIfUnsuccessful parameter specifies whether the whole transaction should be aborted if a particular operation fails. You may specify this parameter for any operation added to the WriteOperationCollection . In addition, if AbortIfUnsuccessful is set to true , this will enable this option for all operations in the collection. Note that the success or failure of an operation is defined here in the same way as indicated by Success and Success , that is the failure would occur if conditional Put operation fails or conditional Delete operation fails or Delete operation fails because the given row does not exist (other failures will cause an exception to be thrown and may also abort the transaction regardless of AbortIfUnsuccessful setting). On successful completion of this API, Results will contain a list of the execution results of all operations. If the transaction was aborted because of failure of an operation which has AbortIfUnsuccessful set to true (or if AbortIfUnsuccessful is set to true ) then the index and execution result of the failed operation will be available as FailedOperationIndex and FailedOperationResult respectively. If all operations are for single table, you may also use WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) method. If, in addition, the operations are all Put or all Delete and it is sufficient to specify the same options for all operations (instead of on per-operation basis), you may also opt to use simpler APIs PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) and DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) . Examples Performing WriteMany operation with parent table \"emp\" and child table \"emp.expenses\". var row = new MapValue { [\"id\"] = 1000, [\"name\"] = \"Jane\" }; var childRow = new MapValue { [\"id\"] = 1001, [\"name\"] = \"Jane\", [\"expenseId\"] = 100001, [\"expenseTitle\"] = \"Books\" }; var primaryKey = new MapValue { [\"id\"] = 2000 }; var result = await client.WriteManyAsync( new WriteOperationCollection() .AddPut(\"emp\", row) .AddPutIfAbsent(\"emp.expenses\", childRow, true) .AddDelete(\"emp\", primaryKey, true)); Exceptions Type Condition ArgumentException If operations is null or empty or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also WriteOperationCollection WriteManyOptions WriteManyResult <TRow> WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) Atomically executes a sequence of Put and Delete operations on a table. Declaration public Task<WriteManyResult<RecordValue>> WriteManyAsync(string tableName, WriteOperationCollection operations, WriteManyOptions options = null, CancellationToken cancellationToken = null) Parameters Type Name Description String tableName The name of the table. WriteOperationCollection operations Collection of Put and Delete operations to execute in a single transaction. WriteManyOptions options (Optional) Options for the WriteMany operation. If not specified or null , appropriate defaults will be used. See WriteManyOptions . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < WriteManyResult < RecordValue >> Task returning WriteManyResult<TRow> . Remarks This method is similar to WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) , and is used to execute sequence of Put and Delete operations on a single table. All other considerations and limitations of WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) apply to this method. This method takes tableName parameter. To use this method, when adding operations to WriteOperationCollection , use methods that do not take table name as a parameter (or pass null as table name). See WriteOperationCollection for details. Examples Performing WriteMany operation on a single table. var row1 = new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }; var row2 = new MapValue { [\"id\"] = 1001, [\"name\"] = \"Jane\" }; var primaryKey = new MapValue { [\"id\"] = 2000 }; var result = await client.WriteManyAsync( \"myTable\", new WriteOperationCollection() .AddPut(row1) .AddPutIfAbsent(row2, true) .AddDelete(primaryKey, true)); Exceptions Type Condition ArgumentException If tableName is null or invalid or operations is null or empty or options contains invalid values. TimeoutException Operation has timed out. InvalidOperationException The table or the service is not in a valid state to perform this operation. NoSQLException NoSQLException or one of its subclasses is thrown if operation cannot be performed for any other reason. See documentation for corresponding subclass of NoSQLException . See Also WriteOperationCollection WriteManyOptions WriteManyResult <TRow> PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminPollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminPollDelay.html",
    "title": "Property AdminPollDelay | NoSQL SDK for .NET",
    "keywords": "Property AdminPollDelay AdminPollDelay Gets or sets the delay between successive polls when waiting for completion of an DDL operation. Declaration public TimeSpan AdminPollDelay { get; set; } Property Value Type Description TimeSpan Delay between successive polls when waiting for completion of a an admin DDL operation. The default is 1 second. Remarks Method WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) waits for completion of an admin DDL operation by polling for the operation status at regular intervals. This property sets a delay between the successive polls and serves as a default value if the poll delay parameter is not passed to WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) as well as the default for PollDelay ."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminPollTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminPollTimeout.html",
    "title": "Property AdminPollTimeout | NoSQL SDK for .NET",
    "keywords": "Property AdminPollTimeout AdminPollTimeout Gets or sets the timeout to wait for completion of an admin DDL operation. Declaration public Nullable<TimeSpan> AdminPollTimeout { get; set; } Property Value Type Description Nullable < TimeSpan > Timeout to wait for completion of an admin DDL operation. If not set, the default is no timeout (infinity). Remarks Method WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) waits for completion of an admin DDL operation by polling for the operation status at regular intervals. This property sets a timeout on the duration of the call to WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) . Set this property to limit the duration of the polling operation. Because admin DDL operations may be potentially long running, there is no default timeout. This property serves as a default for WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) if the timeout parameter is not provided. If Timeout is not set, the value of this property is added to the the default timeout for ExecuteAdminWithCompletionAsync API because this operation already includes the polling for the operation status. If this property is not set, this operation will likewise have no timeout. See Also ExecuteAdminAsync WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.AdminTimeout.html",
    "title": "Property AdminTimeout | NoSQL SDK for .NET",
    "keywords": "Property AdminTimeout AdminTimeout Gets or sets a timeout for admin DDL operations. Declaration public TimeSpan AdminTimeout { get; set; } Property Value Type Description TimeSpan The timeout for admin DDL operations. The default is 10 seconds. Remarks Admin DDL operations are operations performed by ExecuteAdminAsync and ExecuteAdminWithCompletionAsync . This value serves as the default if Timeout is not set. Note that for operations performed by ExecuteAdminWithCompletionAsync , separate default timeouts are used for issuing the admin operation and waiting for its completion, with values of AdminTimeout and AdminPollTimeout correspondingly (the latter defaults to no timeout if AdminPollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.AuthorizationProvider.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.AuthorizationProvider.html",
    "title": "Property AuthorizationProvider | NoSQL SDK for .NET",
    "keywords": "Property AuthorizationProvider AuthorizationProvider Gets or sets the authorization provider. Declaration public IAuthorizationProvider AuthorizationProvider { get; set; } Property Value Type Description IAuthorizationProvider The authorization provider. The default depends on the value of ServiceType as described in the remarks section. Remarks The type of the authorization depends on the ServiceType that you are using. In particular: For Oracle NoSQL Cloud Service, set this property to an instance of IAMAuthorizationProvider . For on-premise Oracle NoSQL Database in secure mode, set this property to an instance of KVStoreAuthorizationProvider . For the Cloud Simulator or non-secure on-premise NoSQL Database, there is no authorization and this property should not be set. In addition, for the cloud service and secure on-premise NoSQL database you may create and use your own implementation of IAuthorizationProvider and possibly subclass one of IAMAuthorizationProvider or KVStoreAuthorizationProvider . If this property is not set, the driver will use default authorization provider depending on the value of ServiceType : For Cloud , the driver will use an instance of IAMAuthorizationProvider with default parameters. This instance will obtain credentials stored in the default OCI configuration file with the default profile. See IAuthorizationProvider for more information. For CloudSim no authorization is required. For KVStore , the driver will assume non-secure kvstore and thus no authorization required. For the secure kvstore there is no default and you must provide the authorization provider. When using JSON configuration file, you can specify an instance of IAMAuthorizationProvider or KVStoreAuthorizationProvider by specifying a JSON object that includes the following fields: Set the field AuthorizationType to either IAM or KVStore respectively (the value is case-insensitive). Set any other fields describing properties of IAMAuthorizationProvider or KVStoreAuthorizationProvider . The example shows this for IAMAuthorizationProvider . Examples Specifying AuthorizationProvider in JSON configuration. { \"Region\": \"US_ASHBURN_1\", ... \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"Credentials\": { \"TenantId\": \"ocid1.tenancy.oc...................\", \"UserId\": \"ocid1.user.oc.....................\", ... } } ... } See Also IAuthorizationProvider IAMAuthorizationProvider KVStoreAuthorizationProvider"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets a compartment id or a compartment name for operations with this NoSQLClient instance. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or compartment name. The default is the OCID of the root compartment of the tenancy. Remarks This property serves a a default value of Compartment property of all operation options classes. If compartment name is used it can be either the name of a top-level compartment or a path to a nested compartment, e.g. compartmentA.compartmentB.compartmentC . The path should not include the root compartment name (tenant). If this property is not specified either here or for an individual operation, the tenant OCID is used as the compartment id for the operation, which is the id of the root compartment for the tenancy. See See Also Setting Up Your Tenancy"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.ConnectionOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.ConnectionOptions.html",
    "title": "Property ConnectionOptions | NoSQL SDK for .NET",
    "keywords": "Property ConnectionOptions ConnectionOptions Gets or sets network connection options. Declaration public ConnectionOptions ConnectionOptions { get; set; } Property Value Type Description ConnectionOptions Options for network connections to Oracle NoSQL Database. See Also ConnectionOptions"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Consistency.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Consistency.html",
    "title": "Property Consistency | NoSQL SDK for .NET",
    "keywords": "Property Consistency Consistency Gets or sets a Consistency used for read operations. Declaration public Consistency Consistency { get; set; } Property Value Type Description Consistency Consistency used for read operations. The default is Eventual . Remarks This property serves as a default value for Consistency and Consistency . See Also Consistency"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.-ctor.html",
    "title": "Constructor NoSQLConfig | NoSQL SDK for .NET",
    "keywords": "Constructor NoSQLConfig NoSQLConfig() Declaration public NoSQLConfig()"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-Premise only. Gets or sets a Durability used for write operations. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for write operations. If not set, the default server-side durability settings are used. Remarks This property serves as a default value for Durability , Durability , Durability and Durability . See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Endpoint.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Endpoint.html",
    "title": "Property Endpoint | NoSQL SDK for .NET",
    "keywords": "Property Endpoint Endpoint Gets or sets the endpoint to use to connect to Oracle NoSQL Database Service. Declaration public string Endpoint { get; set; } Property Value Type Description String The region identifier. If not set, the Region or the region identifier in the OCI configuration file will be used, see Region . Remarks When using the cloud service, you may choose to set Region instead. Each region has its own endpoint. E.g. US_PHOENIX_1 has endpoint https://nosql.us-phoenix-1.oci.oraclecloud.com . The endpoint specifies the host to connect to but may optionally specify port and/or protocol. The protocol is usually not needed and is inferred from the host and port information. If no port is specified, port 443 and protocol https are assumed. If port 443 is specified, https is assumed. If the port is specified and it is not 443, http is assumed. If the protocol is specified, it must be either http or https . For example, https://nosql.ap-seoul-1.oci.oraclecloud.com or http://localhost:8080 . If the protocol is specified but not the port, 443 is assumed for https and 8080 for https (8080 is also the default port for the Cloud Simulator). Per described above, the examples of allowable endpoints would be: nosqlhost is equivalent to https://nosqlhost:443 . nosqlhost:443 is also equivalent to https://nosqlhost:443 . nosqlhost:8888 is equivalent to http://nosqlhost:8888 . http://localhost is equivalent to http://localhost:8080 . You may specify either Endpoint or Region but not both."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.FromJsonFile.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.FromJsonFile.html",
    "title": "Method FromJsonFile | NoSQL SDK for .NET",
    "keywords": "Method FromJsonFile FromJsonFile(String) Creates an instance of NoSQLConfig from a JSON file. Declaration public static NoSQLConfig FromJsonFile(string jsonFilePath) Parameters Type Name Description String jsonFilePath The path to the file containing the JSON representation of the configuration, either as absolute path or relative to the current directory of the application. Returns Type Description NoSQLConfig An instance of NoSQLConfig representing the configuration provided by jsonFilePath . Remarks See the remarks section of NoSQLConfig for the description of the JSON format of the configuration. Exceptions Type Condition ArgumentException If failed to read the file specified by jsonFilePath or failed to parse the JSON text. The InnerException property will specify the cause."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.FromJsonString.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.FromJsonString.html",
    "title": "Method FromJsonString | NoSQL SDK for .NET",
    "keywords": "Method FromJsonString FromJsonString(String) Creates an instance of NoSQLConfig from a JSON string. Declaration public static NoSQLConfig FromJsonString(string jsonString) Parameters Type Name Description String jsonString JSON representation of the configuration. Returns Type Description NoSQLConfig An instance of NoSQLConfig representing the configuration provided in jsonString . Remarks See the remarks section of NoSQLConfig for the description of the JSON format of the configuration. Exceptions Type Condition ArgumentException If failed to parse jsonString . The parser exception will be included as InnerException property."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.html",
    "title": "Class NoSQLConfig | NoSQL SDK for .NET",
    "keywords": "Class NoSQLConfig Represents configuration required to instantiate NoSQLClient instance. Inheritance Object NoSQLConfig Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NoSQLConfig : Object Remarks This class contains properties that are needed to create and configure NoSQLClient instance. Some properties are needed in order to establish the connection with the NoSQL service and their values are required to be provided. Most of the other properties serve as defaults for various options passed to NoSQLClient APIs. They are optional and have their own default values. The configuration may be stored in JSON format as a string or in a file and you may construct NoSQLClient instance by providing a path to a JSON file storing the configuration (see NoSQLClient(String) ). NoSQLConfig instance is represented as JSON object using the following rules: In general, every property is represented as JSON field with the field name being the same as the property name and the field value being the property value, unless otherwise specified in a documentation for a particular property. The field names are matched in a case-insensitive manner. Enumeration values are represented as string values of the corresponding enumeration constants, the match being case-insensitive, unless otherwise specified. Each TimeSpan value is represented as the number of milliseconds. Complex property values of properties such as RetryHandler and AuthorizationProvider are represented as JSON objects with the same rules as above applying within each such object. The examples show how the same configuration would be represented in C# code and in JSON. Examples Initializing NoSQLConfig instance. var config = new NoSQLConfig { ServiceType = ServiceType.Cloud, Region = Region.AP_MUMBAI_1, Timeout = TimeSpan.FromSeconds(15), RetryHandler = new NoSQLRetryHandler { MaxRetryAttempts = 20, BaseDelay = TimeSpan.FromSeconds(2), ControlOperationBaseDelay = TimeSpan.FromMinutes(2) }, AuthorizationProvider = new IAMAuthorizationProvider( \"~/my_app/.oci/config\", \"Jane\") }; Representing NoSQLConfig instance in JSON. This is the same configuration as in the first example. { \"ServiceType\": \"Cloud\", \"Region\": \"AP_MUMBAI_1\", \"Timeout\": 15000, \"RetryHandler\": { \"MaxRetryAttempts\": 20, \"BaseDelay\": 2000, \"ControlOperationBaseDelay\": 120000 }, \"AuthorizationType\": \"IAM\", \"AuthorizationProvider\": { \"ConfigFile\": \"~/my_app/.oci/config\", \"ProfileName\": \"Jane\" } } Constructors Name Description NoSQLConfig() Fields Name Description NoRetries Retry handler instance that disables all operation retries. Properties Name Description AdminPollDelay Gets or sets the delay between successive polls when waiting for completion of an DDL operation. AdminPollTimeout Gets or sets the timeout to wait for completion of an admin DDL operation. AdminTimeout Gets or sets a timeout for admin DDL operations. AuthorizationProvider Gets or sets the authorization provider. Compartment Cloud service only. Gets or sets a compartment id or a compartment name for operations with this NoSQLClient instance. ConnectionOptions Gets or sets network connection options. Consistency Gets or sets a Consistency used for read operations. Durability On-Premise only. Gets or sets a Durability used for write operations. Endpoint Gets or sets the endpoint to use to connect to Oracle NoSQL Database Service. MaxMemoryMB Gets or sets the maximum amount of memory in megabytes that can be used by the driver-side portion of a query. Namespace On-premises only. Gets or sets the default namespace for operations with this NoSQLClient instance. RateLimiterCreator For Cloud Service or Cloud Simulator only. Gets or sets a delegate used to create custom rate limiter instances. RateLimiterPercent For Cloud Service or Cloud Simulator only. Gets or sets the percentage of table limits used for rate limiting. RateLimitingEnabled For Cloud Service or Cloud Simulator only. Gets or sets the value that determines whether to enable rate limiting based on table limits. Region Cloud Service Only. Gets or sets a region to use to connect to the Oracle NoSQL Database Cloud Service. RetryHandler Gets or sets the handler for operation retries. ServiceType Gets or sets the type of Oracle NoSQL service to use. TableDDLTimeout Gets or sets a timeout for table DDL operations. TablePollDelay Gets or sets the delay between successive polls when waiting for completion of a table DDL operation. TablePollTimeout Gets or sets the timeout to wait for completion of a table DDL operation. Timeout Gets or sets a timeout for non-DDL operations. Methods Name Description FromJsonFile(String) Creates an instance of NoSQLConfig from a JSON file. FromJsonString(String) Creates an instance of NoSQLConfig from a JSON string."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.MaxMemoryMB.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.MaxMemoryMB.html",
    "title": "Property MaxMemoryMB | NoSQL SDK for .NET",
    "keywords": "Property MaxMemoryMB MaxMemoryMB Gets or sets the maximum amount of memory in megabytes that can be used by the driver-side portion of a query. Declaration public int MaxMemoryMB { get; set; } Property Value Type Description Int32 Maximum amount of memory in MB for the execution of the driver-side portion of a query. The default is 1024 (1 GB). Remarks This property serves as a default for MaxMemoryMB . The memory at the driver is needed for query operations such as duplicate elimination (which may be required if using an index on an array or a map) and sorting. Such operations may require significant amount of memory as they need to cache full result set or a large subset of it locally. If memory consumption exceeds this value, an exception will be thrown."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the default namespace for operations with this NoSQLClient instance. Declaration public string Namespace { get; set; } Property Value Type Description String Default namespace to use. Remarks This property serves a a default value of Namespace property of all operation options classes. Any non-namespace qualified table name in requests and/or SQL statements will be resolved/qualified to the specified namespace. Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.NoRetries.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.NoRetries.html",
    "title": "Field NoRetries | NoSQL SDK for .NET",
    "keywords": "Field NoRetries Retry handler instance that disables all operation retries. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly IRetryHandler NoRetries Returns Type Description IRetryHandler Remarks You can set RetryHandler to this value to disable all operation retries. In this case the application may retry the operations manually. This value is a read-only singleton instance."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimiterCreator.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimiterCreator.html",
    "title": "Property RateLimiterCreator | NoSQL SDK for .NET",
    "keywords": "Property RateLimiterCreator RateLimiterCreator For Cloud Service or Cloud Simulator only. Gets or sets a delegate used to create custom rate limiter instances. Declaration public Func<IRateLimiter> RateLimiterCreator { get; set; } Property Value Type Description Func < IRateLimiter > The delegate that takes no arguments and returns an instance of IRateLimiter . If not set, the driver will use instances of NoSQLRateLimiter . If rate limiting is disabled, this property has no effect. Remarks Setting this property allows you to specify custom rate limiting algorithm instead of driver-default (see NoSQLRateLimiter ). Typically you would do this by having a class implementing IRateLimiter interface, in which case this property will be set to a factory delegate that creates new instances of this class. The driver will use this delegate to create two instances of IRateLimiter per table (one for reads and another one for writes). Note that this delegate does not set initial limit (rate) of a rate limiter instance. Instead, SetLimit(Double) is used to set the initial limit. See Also IRateLimiter RateLimitingEnabled"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimiterPercent.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimiterPercent.html",
    "title": "Property RateLimiterPercent | NoSQL SDK for .NET",
    "keywords": "Property RateLimiterPercent RateLimiterPercent For Cloud Service or Cloud Simulator only. Gets or sets the percentage of table limits used for rate limiting. Declaration public Nullable<double> RateLimiterPercent { get; set; } Property Value Type Description Nullable < Double > Percentage of the table limits to use for rate limiting. Must be greater than 0 and less than or equal to 100 . If not set, full (100 %) table limits will be used. If rate limiting is disabled, this property has no effect. Remarks When rate limiting is enabled (see RateLimitingEnabled ), specifies the percentage of table limits this NoSQLClient instance will use. This is useful when running multiple clients and allotting each client only a portion of the table limits. See Also RateLimitingEnabled IRateLimiter"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimitingEnabled.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.RateLimitingEnabled.html",
    "title": "Property RateLimitingEnabled | NoSQL SDK for .NET",
    "keywords": "Property RateLimitingEnabled RateLimitingEnabled For Cloud Service or Cloud Simulator only. Gets or sets the value that determines whether to enable rate limiting based on table limits. Declaration public bool RateLimitingEnabled { get; set; } Property Value Type Description Boolean true if rate limiting is enabled, otherwise false . The default is false . Remarks If enabled, by default the driver uses rate limiting algorithm built into the SDK by creating instances of NoSQLRateLimiter . To use custom rate limiting algorithm, you may set property RateLimiterCreator to create instances of custom implementation of IRateLimiter interface. See Also IRateLimiter NoSQLRateLimiter"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Region.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Region.html",
    "title": "Property Region | NoSQL SDK for .NET",
    "keywords": "Property Region Region Cloud Service Only. Gets or sets a region to use to connect to the Oracle NoSQL Database Cloud Service. Declaration public Region Region { get; set; } Property Value Type Description Region The region identifier. If not set, the Endpoint or the region identifier in the OCI configuration file will be used, see remarks section. Remarks This property is an alternative to Endpoint . The service endpoint will be inferred from the region. This value must be one of the region constants defined in the Region class. When using JSON configuration file, specify this property as a string equal to the name of the region constant, such as AP_MUMBAI_1 , US_ASHBURN_1 , etc. or value of the region identifier such as ap-mumbai-1 , us-ashburn-1 , etc. (see RegionId ). You must specify either Region or Endpoint but not both. One possible exception is when the region is stored in the OCI configuration file together with the credentials, in which case you need not specify either property in NoSQLConfig . In this case you must either set AuthorizationProvider to an instance of IAMAuthorizationProvider configured to use that OCI configuration file or use the default OCI configuration file and the default instance of IAMAuthorizationProvider . Note that setting Region takes precedence over region identifier in the OCI configuration file if one is used. See Also Region"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.RetryHandler.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.RetryHandler.html",
    "title": "Property RetryHandler | NoSQL SDK for .NET",
    "keywords": "Property RetryHandler RetryHandler Gets or sets the handler for operation retries. Declaration public IRetryHandler RetryHandler { get; set; } Property Value Type Description IRetryHandler The handler for operation retries. If not set, the default instance of NoSQLRetryHandler is used. Remarks You may either instantiate NoSQLRetryHandler or provide your own implementation of IRetryHandler interface. The instance of NoSQLRetryHandler may be customized with various parameters. If this property is not set, the driver will use an instance of NoSQLRetryHandler with default parameters. When using JSON configuration file, you may specify an instance of NoSQLRetryHandler by providing a JSON object containing its parameters, as the example shows. Examples Specifying RetryHandler in a JSON configuration. { \"Region\": \"AP_HYDERABAD_1\", ... \"RetryHandler\": { \"MaxRetryAttempts\": 20, \"BaseDelay\": 500 } ... } See Also IRetryHandler NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.ServiceType.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.ServiceType.html",
    "title": "Property ServiceType | NoSQL SDK for .NET",
    "keywords": "Property ServiceType ServiceType Gets or sets the type of Oracle NoSQL service to use. Declaration public ServiceType ServiceType { get; set; } Property Value Type Description ServiceType The service type. The default is Unspecified , in which case the driver will try to determine the service type from an authorization provider settings, see ServiceType . See Also ServiceType"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.TableDDLTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.TableDDLTimeout.html",
    "title": "Property TableDDLTimeout | NoSQL SDK for .NET",
    "keywords": "Property TableDDLTimeout TableDDLTimeout Gets or sets a timeout for table DDL operations. Declaration public TimeSpan TableDDLTimeout { get; set; } Property Value Type Description TimeSpan The timeout for table DDL operations. The default is 10 seconds. Remarks Table DDL operations are operations performed by ExecuteTableDDLAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) , ExecuteTableDDLWithCompletionAsync and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) . This value serves as the default if Timeout is not set. Note that for operations performed by ExecuteTableDDLWithCompletionAsync and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) , separate default timeouts are used for issuing the DDL operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.TablePollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.TablePollDelay.html",
    "title": "Property TablePollDelay | NoSQL SDK for .NET",
    "keywords": "Property TablePollDelay TablePollDelay Gets or sets the delay between successive polls when waiting for completion of a table DDL operation. Declaration public TimeSpan TablePollDelay { get; set; } Property Value Type Description TimeSpan Delay between successive polls when waiting for completion of a table DDL operation. The default is 1 second. Remarks Methods WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) and WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) wait for completion of a table DDL operation by polling the table for status at regular intervals. This property sets a delay between the successive polls and serves as a default value if the poll delay parameter is not passed to WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) as well as the default for PollDelay and PollDelay ."
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.TablePollTimeout.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.TablePollTimeout.html",
    "title": "Property TablePollTimeout | NoSQL SDK for .NET",
    "keywords": "Property TablePollTimeout TablePollTimeout Gets or sets the timeout to wait for completion of a table DDL operation. Declaration public Nullable<TimeSpan> TablePollTimeout { get; set; } Property Value Type Description Nullable < TimeSpan > Timeout to wait for completion of a table DDL operation. If not set, the default is no timeout (infinity). Remarks Methods WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) and WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) wait for completion of a table DDL operation by polling the table for status at regular intervals. This property sets a timeout on the duration of the calls to WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) and WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) . Set this property to limit the duration of these polling operations. Because table DDL operations may be potentially long running, there is no default timeout. This property serves as a default for WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) if the timeout parameter is not provided as well as the default for WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) if the timeout is not set in TableCompletionOptions . If Timeout is not set, the value of this property is added to the the default timeout for ExecuteTableDDLWithCompletionAsync and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) APIs because these operations already include the polling for the table status. If this property is not set, these operations will likewise have no timeout. See Also ExecuteTableDDLAsync WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.NoSQLConfig.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLConfig.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets a timeout for non-DDL operations. Declaration public TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan The timeout for non-DDL operations. The default is 5 seconds. Remarks Specifies timeout for all operations with the exception of DDL operations such as ExecuteTableDDLAsync or ExecuteAdminAsync . This value serves as the default if the timeout is not specified in the options for a non-DDL operation. For DDL operations, see TableDDLTimeout and AdminTimeout . Note that for operations that are automatically retried, the timeout is cumulative over all retries and not just a timeout for a single retry. This means that all retries and waiting periods between the retries are counted towards the timeout. See Also TableDDLTimeout AdminTimeout"
  },
  "api/Oracle.NoSQL.SDK.NoSQLException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLException.-ctor.html",
    "title": "Constructor NoSQLException | NoSQL SDK for .NET",
    "keywords": "Constructor NoSQLException NoSQLException() Initializes a new instance of NoSQLException . Declaration public NoSQLException() NoSQLException(String) Initializes a new instance of NoSQLException with the message that describes the current exception. Declaration public NoSQLException(string message) Parameters Type Name Description String message A message that describes the current exception. NoSQLException(String, Exception) Initializes a new instance of NoSQLException with the message that describes the current exception and an inner exception. Declaration public NoSQLException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.NoSQLException.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLException.html",
    "title": "Class NoSQLException | NoSQL SDK for .NET",
    "keywords": "Class NoSQLException The base class for most exceptions thrown by the driver. Inheritance Object NoSQLException AuthorizationException BadProtocolException BatchOperationNumberLimitException DeploymentLimitException ETagMismatchException EvolutionLimitException IndexExistsException IndexLimitException IndexNotFoundException JsonParseException KeySizeLimitException RequestSizeLimitException ResourceExistsException ResourceNotFoundException RetryableException RowSizeLimitException ServiceResponseException TableExistsException TableLimitException TableNotFoundException TableSizeLimitException UnauthorizedException UnsupportedProtocolException UnsupportedQueryVersionException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NoSQLException : Exception Remarks All exception classes defined by the driver are subclasses of NoSQLException . In addition to these exception classes the driver may also throw standard exceptions such as ArgumentException , InvalidOperationException , etc. See relevant method documentation for details. In addition, NoSQLException itself may be thrown if the service responds with an unknown error. Constructors Name Description NoSQLException() Initializes a new instance of NoSQLException . NoSQLException(String) Initializes a new instance of NoSQLException with the message that describes the current exception. NoSQLException(String, Exception) Initializes a new instance of NoSQLException with the message that describes the current exception and an inner exception. Properties Name Description IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. Message Gets the message that describes this exception. Request Gets the Request object that describes the operation that caused the exception."
  },
  "api/Oracle.NoSQL.SDK.NoSQLException.IsRetryable.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLException.IsRetryable.html",
    "title": "Property IsRetryable | NoSQL SDK for .NET",
    "keywords": "Property IsRetryable IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. Declaration public virtual bool IsRetryable { get; } Property Value Type Description Boolean true if the operation that has thrown this exception may be retried, otherwise false . The default implementation of NoSQLException always returns false . Remarks Operation retries are handled automatically by the driver. The application may customize the retry behavior by setting RetryHandler . It is possible that an application may also choose to retry the operation, in which case this property indicates when the operation should be retried. For instances of NoSQLException the driver will retry only those that have IsRetryable equal true . In addition, standard exception types indicating a network error will be retried as well. See IRetryHandler for details. Instances of RetryableException are always retryable. Other subclasses of NoSQLException are usually not retryable but certain instances could be retried if indicated in the documentation for corresponding exception class."
  },
  "api/Oracle.NoSQL.SDK.NoSQLException.Message.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLException.Message.html",
    "title": "Property Message | NoSQL SDK for .NET",
    "keywords": "Property Message Message Gets the message that describes this exception. Declaration public override string Message { get; } Property Value Type Description String Error message that describes this exception."
  },
  "api/Oracle.NoSQL.SDK.NoSQLException.Request.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLException.Request.html",
    "title": "Property Request | NoSQL SDK for .NET",
    "keywords": "Property Request Request Gets the Request object that describes the operation that caused the exception. Declaration public Request Request { get; } Property Value Type Description Request The Request object that describes the operation that caused the exception or null if the exception was not caused an operation on NoSQLClient instance (e.g. when using FieldValue subclasses). Remarks The request object describes the operation initiated by a method of NoSQLClient . See Also Request"
  },
  "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.ConsumeUnitsAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.ConsumeUnitsAsync.html",
    "title": "Method ConsumeUnitsAsync | NoSQL SDK for .NET",
    "keywords": "Method ConsumeUnitsAsync ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) Consumes the specified number of units and blocks (sleeps) asynchronously if required before an operation can proceed. Declaration public Task<TimeSpan> ConsumeUnitsAsync(int units, TimeSpan timeout, bool consumeOnTimeout, CancellationToken cancellationToken) Parameters Type Name Description Int32 units Number of units to consume. TimeSpan timeout Timeout. The resulting amount of time to sleep should not exceed this timeout. If the sleep time exceeds this timeout, the behavior should be according to consumeOnTimeout parameter. Boolean consumeOnTimeout Defines how rate limiter behaves when the timeout is reached. If false , this method should throw TimeoutException and the units should not be consumed. If true , the units should be consumed even when timeout is reached and this method should return successfully. In either case, if the computed wait time exceeds timeout, this method should still block (sleep) for the amount of time equal to the timeout before either throwing an exception or returning successfully (depending on the value of this parameter). The driver uses the value true when calling ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) after an operation completes successfully (see description in remarks), in which case the exception should not be thrown and the result of the operation should be returned to the application. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < TimeSpan > Task returning TimeSpan of the amount of time blocked (slept) by this method. Implements IRateLimiter.ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) Exceptions Type Condition TimeoutException If the specified timeout is reached and consumeOnTimeout is false ."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.-ctor.html",
    "title": "Constructor NoSQLRateLimiter | NoSQL SDK for .NET",
    "keywords": "Constructor NoSQLRateLimiter NoSQLRateLimiter() Initializes new instance of NoSQLRateLimiter with a default duration of 30 seconds. Declaration public NoSQLRateLimiter() NoSQLRateLimiter(TimeSpan) Initializes new instance of NoSQLRateLimiter with given a given duration. Declaration public NoSQLRateLimiter(TimeSpan duration) Parameters Type Name Description TimeSpan duration Burst time (duration)."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.HandleThrottlingException.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.HandleThrottlingException.html",
    "title": "Method HandleThrottlingException | NoSQL SDK for .NET",
    "keywords": "Method HandleThrottlingException HandleThrottlingException(RetryableException) Defines the behavior of the rate limiter when throttling exception occurs. Declaration public void HandleThrottlingException(RetryableException ex) Parameters Type Name Description RetryableException ex An exception, which is instance of either ReadThrottlingException or WriteThrottlingException Implements IRateLimiter.HandleThrottlingException(RetryableException) Remarks Current implementation will remove any stored units by ensuring that next is at least the current time."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.html",
    "title": "Class NoSQLRateLimiter | NoSQL SDK for .NET",
    "keywords": "Class NoSQLRateLimiter Cloud Service or Cloud Simulator only. Default rate limiter used by the SDK. Inheritance Object NoSQLRateLimiter Implements IRateLimiter Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NoSQLRateLimiter : Object, IRateLimiter Remarks This class implements default rate limiting algorithm used by the SDK. The driver will use it if rate limiting is enabled and you did not specify RateLimiterCreator delegate. You do not need to create or use instances of this class, the following is presented for information only. Two rate limiter instances are used per each table in use, one for reads and another for writes (see IRateLimiter ). This implementation uses a token bucket based algorithm, although the state is kept in terms of time instead of tokens. It is assumed that the units refill at constant rate being equivalent to the set limit of units per second. The state is kept in terms of next , which is the time when the next operation can proceed without waiting, meaning the limiter is at its limit. All operations issued before next will have to wait accordingly. Based on the value of next and the current time, the appropriate wait time may be computed before the wait begins. If current time is greater than or equal to next , no wait is needed. Note that when ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) is called, the entered units will only affect the wait time of subsequent operations and not the current operation, which will use the value of next as it currently is to determine the wait time. This is done to avoid needless wait time when the operations come in rarely. Because every time when ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) is called with positive number of units, next is pushed forward, the operations will be effectively staggered in time according to the order of their arrival with no preferential treatment given to any operation, thus avoiding starvation. This rate limiter uses burst mode, allowing a set maximum number of stored units that has not been used to be consumed immediately without waiting. This value is expressed as duration, which is effectively a maximum number of seconds worth of unused stored units. The minimum duration is internally bound such that at least one unused unit may be consumed without waiting. The default value of duration is 30 seconds. Constructors Name Description NoSQLRateLimiter() Initializes new instance of NoSQLRateLimiter with a default duration of 30 seconds. NoSQLRateLimiter(TimeSpan) Initializes new instance of NoSQLRateLimiter with given a given duration. Methods Name Description ConsumeUnitsAsync(Int32, TimeSpan, Boolean, CancellationToken) Consumes the specified number of units and blocks (sleeps) asynchronously if required before an operation can proceed. HandleThrottlingException(RetryableException) Defines the behavior of the rate limiter when throttling exception occurs. SetLimit(Double) Configures rate limiter by setting its limit in units per second."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.SetLimit.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRateLimiter.SetLimit.html",
    "title": "Method SetLimit | NoSQL SDK for .NET",
    "keywords": "Method SetLimit SetLimit(Double) Configures rate limiter by setting its limit in units per second. Declaration public void SetLimit(double limitPerSecond) Parameters Type Name Description Double limitPerSecond Limit in units per second Implements IRateLimiter.SetLimit(Double) Remarks This method also enforces minimum duration to be able to store at least one unused unit. When changing table limits, this method will prorate any unused units according to the new limit."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.BaseDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.BaseDelay.html",
    "title": "Property BaseDelay | NoSQL SDK for .NET",
    "keywords": "Property BaseDelay BaseDelay Gets or sets the base retry delay. Declaration public TimeSpan BaseDelay { get; set; } Property Value Type Description TimeSpan The base retry delay for the exponential back-off algorithm with the exceptions outlined in the remarks section of NoSQLRetryHandler . The default is 1 second."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.ControlOperationBaseDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.ControlOperationBaseDelay.html",
    "title": "Property ControlOperationBaseDelay | NoSQL SDK for .NET",
    "keywords": "Property ControlOperationBaseDelay ControlOperationBaseDelay Gets or sets the base retry delay when an operation fails with ControlOperationThrottlingException . Declaration public TimeSpan ControlOperationBaseDelay { get; set; } Property Value Type Description TimeSpan The base retry delay for the exponential back-off algorithm when an operation fails with ControlOperationThrottlingException as outlined in the remarks section of NoSQLRetryHandler . The default is 60 seconds (1 minute)."
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.-ctor.html",
    "title": "Constructor NoSQLRetryHandler | NoSQL SDK for .NET",
    "keywords": "Constructor NoSQLRetryHandler NoSQLRetryHandler() Declaration public NoSQLRetryHandler()"
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.GetRetryDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.GetRetryDelay.html",
    "title": "Method GetRetryDelay | NoSQL SDK for .NET",
    "keywords": "Method GetRetryDelay GetRetryDelay(Request) Determines how long to wait between successive retries. Declaration public TimeSpan GetRetryDelay(Request request) Parameters Type Name Description Request request The Request object describing the running operation. Returns Type Description TimeSpan A time interval to wait before the next retry. Implements IRetryHandler.GetRetryDelay(Request) Remarks You do not need to call this method. It is called by the driver to determine the delay before the next retry of the operation. See Also GetRetryDelay ( Request )"
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.html",
    "title": "Class NoSQLRetryHandler | NoSQL SDK for .NET",
    "keywords": "Class NoSQLRetryHandler Represents the built-in retry handler. Inheritance Object NoSQLRetryHandler Implements IRetryHandler Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NoSQLRetryHandler : Object, IRetryHandler Remarks This is the default retry handler used by the driver, but it can also be customized via the provided properties. The general semantics is as follows: The operations are retried up to the maximum number of times indicated by MaxRetryAttempts property (with the default value of 10). The retry delay follows the exponential back-off. The initial base delay is given by BaseDelay property (with the default value of 1 second). The total delay is computed as a sum of the base delay component which starts with BaseDelay and increases two-fold on each retry and a small random delay between 0 and initial BaseDelay . However, there are several exceptions: Operations that fail with ControlOperationThrottlingException use much longer base delay given by ControlOperationBaseDelay property. These are usually table DDL operations that have much more stringent rate limitations in the cloud and thus should be retried much less often. The delay algorithm is still exponential back-off but uses the base delay of ControlOperationBaseDelay (with the default value of 1 minute). Network-related exceptions and SecurityInfoNotReadyException are always retried (up to the operation timeout) regardless of the number of retries done so far (thus ignoring MaxRetryAttempts ). For SecurityInfoNotReadyException the delay algorithm starts with constant delays of 1 second up to 10 retries and after that follows the exponential back-off. InvalidAuthorizationException will be retried as long as the exception on the previous retry (if any) was not InvalidAuthorizationException . InvalidAuthorizationException may indicate that the authentication token is expired in which case the operation should be retried, which will involve the refresh of the authentication token. On the other hand, if subsequent retries fail with InvalidAuthorizationException , this most likely indicates invalid credentials in which case the operation should not be retried again. Examples Instantiating NoSQLRetryHandler with the customized parameters. var config = new NoSQLConfig(); ... config.RetryHandler = new NoSQLRetryHandler { MaxRetryAttempts = 20, BaseDelay = TimeSpan.FromSeconds(2), ControlOperationBaseDelay = TimeSpan.FromSeconds(30), SecurityInfoConstantDelayRetries = 50 }; Constructors Name Description NoSQLRetryHandler() Properties Name Description BaseDelay Gets or sets the base retry delay. ControlOperationBaseDelay Gets or sets the base retry delay when an operation fails with ControlOperationThrottlingException . MaxRetryAttempts Gets or sets the maximum number of retries. Methods Name Description GetRetryDelay(Request) Determines how long to wait between successive retries. ShouldRetry(Request) Determines whether the operation should be retried. See Also IRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.MaxRetryAttempts.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.MaxRetryAttempts.html",
    "title": "Property MaxRetryAttempts | NoSQL SDK for .NET",
    "keywords": "Property MaxRetryAttempts MaxRetryAttempts Gets or sets the maximum number of retries. Declaration public int MaxRetryAttempts { get; set; } Property Value Type Description Int32 The maximum number of retries for most situations with the exceptions outlined in the remarks section of NoSQLRetryHandler . The default is 10. Remarks See the remarks section of NoSQLRetryHandler for special cases. After the maximum number of retries is reached, ShouldRetry(Request) returns false . Note that the retry count also includes the first (original) operation invocation"
  },
  "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.ShouldRetry.html": {
    "href": "api/Oracle.NoSQL.SDK.NoSQLRetryHandler.ShouldRetry.html",
    "title": "Method ShouldRetry | NoSQL SDK for .NET",
    "keywords": "Method ShouldRetry ShouldRetry(Request) Determines whether the operation should be retried. Declaration public bool ShouldRetry(Request request) Parameters Type Name Description Request request The Request object describing the running operation. Returns Type Description Boolean true to retry the operation, otherwise false . Implements IRetryHandler.ShouldRetry(Request) Remarks You do not need to call this method. It is called by the driver to determine whether the operation should be retried. See Also ShouldRetry ( Request )"
  },
  "api/Oracle.NoSQL.SDK.NullValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.NullValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Null Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.NullValue.html": {
    "href": "api/Oracle.NoSQL.SDK.NullValue.html",
    "title": "Class NullValue | NoSQL SDK for .NET",
    "keywords": "Class NullValue Represents SQL NULL value. Inheritance Object FieldValue NullValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NullValue : FieldValue Remarks SQL NULL is a special value that is used to indicate the fact that the value of the field is unknown or inapplicable. SQL NULL may be a value of the field of any data type. Note that SQL NULL is distinct from JSON NULL which is a value of JSON type NULL . See JsonNullValue for more information. The only value of this class is Null , which is the only immutable singleton instance of this class. No other values are instantiated. When serialized to JSON (see ToJsonString(JsonOutputOptions) ), this value becomes null value in JSON, thus indistinguishable from JsonNullValue . Properties Name Description DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . See Also FieldValue JsonNullValue"
  },
  "api/Oracle.NoSQL.SDK.NullValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.NullValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.AsDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.AsDecimal.html",
    "title": "Property AsDecimal | NoSQL SDK for .NET",
    "keywords": "Property AsDecimal AsDecimal Gets the value of this instance as decimal . Declaration public override Decimal AsDecimal { get; } Property Value Type Description Decimal The decimal value that this instance represents. Overrides FieldValue.AsDecimal"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.-ctor.html",
    "title": "Constructor NumberValue | NoSQL SDK for .NET",
    "keywords": "Constructor NumberValue NumberValue(Decimal) Initializes a new instance of the NumberValue with the specified decimal value. Declaration public NumberValue(Decimal value) Parameters Type Name Description Decimal value The value which this instance will represent."
  },
  "api/Oracle.NoSQL.SDK.NumberValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Number Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.html",
    "title": "Class NumberValue | NoSQL SDK for .NET",
    "keywords": "Class NumberValue Represents a decimal number value. Inheritance Object FieldValue NumberValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class NumberValue : FieldValue Remarks This class is used to represent values of NoSQL data type Number . Data type Number represents arbitrary precision signed decimal numbers. This class represents the value as C# type Decimal and thus can only hold a subset of values that data type Number can hold. Decimal holds approximate range of ±1.0 x 10^28 to ±7.9228 x 10^28 and has a precision of 28 to 29 decimal digits. This makes it suitable for financial calculations more than for scientific calculations. Currently it is not possible to retrieve values outside this range from a Number field of a table. Trying to retrieve a value less than MinValue or greater than MaxValue will throw OverflowException . Retrieving the value within this range but with a greater precision than allowed by Decimal will round this value to the nearest Decimal . Note that because decimal has higher precision but smaller range than double , when comparing NumberValue and DoubleValue both are compared as decimal values if the value represented by DoubleValue is within the decimal range, otherwise the result of comparison is based on the sign of the double value. See CompareTo(FieldValue) and Equals(FieldValue) for more information. Constructors Name Description NumberValue(Decimal) Initializes a new instance of the NumberValue with the specified decimal value. Properties Name Description AsDecimal Gets the value of this instance as decimal . DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToDouble() Converts the value represented by this instance to a double precision floating point number. ToInt32() Converts the value represented by this instance to a 32-bit signed integer. ToInt64() Converts the value represented by this instance to a 64-bit signed integer. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.ToDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.ToDouble.html",
    "title": "Method ToDouble | NoSQL SDK for .NET",
    "keywords": "Method ToDouble ToDouble() Converts the value represented by this instance to a double precision floating point number. Declaration public override double ToDouble() Returns Type Description Double A double precision floating point number equivalent to the value represented by this instance. Overrides FieldValue.ToDouble() Remarks This method performs the same conversion as ToDouble(Decimal) . See Also ToDouble(Decimal)"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.ToInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.ToInt32.html",
    "title": "Method ToInt32 | NoSQL SDK for .NET",
    "keywords": "Method ToInt32 ToInt32() Converts the value represented by this instance to a 32-bit signed integer. Declaration public override int ToInt32() Returns Type Description Int32 The value rounded to the nearest 32-bit signed integer. Overrides FieldValue.ToInt32() Remarks This method performs the same conversion as ToInt32(Decimal) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToInt32(Decimal)"
  },
  "api/Oracle.NoSQL.SDK.NumberValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.NumberValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts the value represented by this instance to a 64-bit signed integer. Declaration public override long ToInt64() Returns Type Description Int64 The value rounded to the nearest 32-bit signed integer. Overrides FieldValue.ToInt64() Remarks This method performs the same conversion as ToInt64(Decimal) . Exceptions Type Condition OverflowException If this instance represents value less than MinValue or greater than MaxValue See Also ToInt64(Decimal)"
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.ClearVariables.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.ClearVariables.html",
    "title": "Method ClearVariables | NoSQL SDK for .NET",
    "keywords": "Method ClearVariables ClearVariables() Clears all bind variables from the statement. Declaration public void ClearVariables() Remarks This operation is equivalent to calling Clear() on Variables ."
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets the capacity consumed by the call to PrepareAsync(String, PrepareOptions, CancellationToken) that created this prepared statement. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.CopyStatement.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.CopyStatement.html",
    "title": "Method CopyStatement | NoSQL SDK for .NET",
    "keywords": "Method CopyStatement CopyStatement() Returns a copy of this prepared statement without its variables. Declaration public PreparedStatement CopyStatement() Returns Type Description PreparedStatement A copy of this prepared statement without its variables. Remarks This method returns a new instance of PreparedStatement that shares this object's prepared query, which is immutable, but does not share its variables. Use this method when you need to execute the same prepared query in different threads (call this method to create a new copy for each additional thread)."
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.html",
    "title": "Class PreparedStatement | NoSQL SDK for .NET",
    "keywords": "Class PreparedStatement Represents a prepared query statement. Inheritance Object PreparedStatement Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PreparedStatement : Object Remarks An object of this class is returned as a result of PrepareAsync(String, PrepareOptions, CancellationToken) . It includes state that can be sent to a server and executed without re-parsing the query. It also includes bind variables which may be set for each successive use of the query. It can be passed to QueryAsync or GetQueryAsyncEnumerable methods for the execution of the query and be reused for multiple queries, potentially with different values of bind variables. An instance of PreparedStatement is thread-safe if bind variables are not used. If bind variables are used, it is not thread-safe. In this case, you can construct additional instances of PreparedStatement using CopyStatement() in order to share the prepared statement among threads. Examples Using prepared queries. // Prepare the query. var preparedStatement = await client.PrepareAsync( \"DECLARE $id INTEGER; $salary DOUBLE; \" + \"SELECT id, firstName, lastName FROM Employees WHERE \" + \"id <= $id AND salary <= $salary\"); // Set bind variables. preparedStatement .SetVariable(\"$id\", 1100) .SetVariable(\"$salary\", 100500); // Execute the query. await foreach(var result in client.GetQueryAsyncEnumerable(preparedStatement)) { foreach(var row in result.Rows) { // Display the results. } } // Change the value of the bind variable. preparedStatement.SetVariable(\"$id\", 2000); // Execute the query again. await foreach(var result in client.GetQueryAsyncEnumerable(preparedStatement)) { // ..... } Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets the capacity consumed by the call to PrepareAsync(String, PrepareOptions, CancellationToken) that created this prepared statement. QueryPlan Gets the query execution plan printout if it was requested. ResultSchema Gets the JSON string representing the schema of the query result if it was requested. SQLText Gets the SQL text of this prepared statement. Variables Gets the bind variables. Methods Name Description ClearVariables() Clears all bind variables from the statement. CopyStatement() Returns a copy of this prepared statement without its variables. SetVariable(Int32, FieldValue) Binds an external variable to a given value. The variable is identified by its position within the query string. SetVariable(String, FieldValue) Binds a variable to a given value. The variable is identified by its name. See Also PrepareAsync(String, PrepareOptions, CancellationToken) QueryAsync GetQueryAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.QueryPlan.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.QueryPlan.html",
    "title": "Property QueryPlan | NoSQL SDK for .NET",
    "keywords": "Property QueryPlan QueryPlan Gets the query execution plan printout if it was requested. Declaration public string QueryPlan { get; } Property Value Type Description String The query execution plan printout if PrepareAsync(String, PrepareOptions, CancellationToken) was called with GetQueryPlan set to true , otherwise null . See Also GetQueryPlan"
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.ResultSchema.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.ResultSchema.html",
    "title": "Property ResultSchema | NoSQL SDK for .NET",
    "keywords": "Property ResultSchema ResultSchema Gets the JSON string representing the schema of the query result if it was requested. Declaration public string ResultSchema { get; } Property Value Type Description String JSON representation of the query result schema if PrepareAsync(String, PrepareOptions, CancellationToken) was called with GetResultSchema set to true , otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.SetVariable.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.SetVariable.html",
    "title": "Method SetVariable | NoSQL SDK for .NET",
    "keywords": "Method SetVariable SetVariable(String, FieldValue) Binds a variable to a given value. The variable is identified by its name. Declaration public PreparedStatement SetVariable(string name, FieldValue value) Parameters Type Name Description String name Name of the variable. FieldValue value The value of the variable. Returns Type Description PreparedStatement This instance. Remarks The values of bind variables are set as instances of FieldValue . Thus you may pass different types of values to this method via using implicit conversions provided by FieldValue (see example below). This method returns this instance PreparedStatement to enable chaining. Note that the bind variables are not cleared after a query execution. If you wish to remove all bind variables, call ClearVariables() method. Examples Setting bind variables by name. var preparedStatement = await client.PrepareAsync( \"SELECT * FROM orders WHERE quantity > $qty AND \" + \"city = $city AND date = $date\"); // Set variables of different types. preparedStatement .SetVariable(\"$qty\", 1000) .SetVariable(\"$city\", \"New York\") .SetVariable(\"$date\", new DateTime(2021, 05, 18)); // Execute the query. await foreach(var result in client.GetQueryAsyncEnumerable(preparedStatement)) { // ..... } See Also FieldValue SetVariable(Int32, FieldValue) Binds an external variable to a given value. The variable is identified by its position within the query string. Declaration public PreparedStatement SetVariable(int position, FieldValue value) Parameters Type Name Description Int32 position The position of the variable. FieldValue value The value of the variable. Returns Type Description PreparedStatement This instance. Remarks This method is useful for queries where bind variables identified by \"?\" are used instead of named variables (but it can be used for both types of variables). The positions start at 1 . The variable that appears first in the query text has position 1, the variable that appears second has position 2 and so on. If the provided position exceeds the number of variables in the query string (and thus does not refer to any existing variable in the query), this method will throw ArgumentOutOfRangeException if the driver has access to the variables used in the query (otherwise, such exception would be thrown when the query is executed). Examples Setting bind variables by position. var preparedStatement = await client.PrepareAsync( \"SELECT * FROM users u where u.firstName = ? AND \" + \"u.address.city = ?\"); preparedStatement .SetVariable(1, \"John\") .SetVariable(2, \"Redwood City\"); // Execute the query. await foreach(var result in client.GetQueryAsyncEnumerable(preparedStatement)) { // ..... } Exceptions Type Condition ArgumentOutOfRangeException If position is negative or zero or greater than the total number of external variables in the query. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.SQLText.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.SQLText.html",
    "title": "Property SQLText | NoSQL SDK for .NET",
    "keywords": "Property SQLText SQLText Gets the SQL text of this prepared statement. Declaration public string SQLText { get; } Property Value Type Description String SQL text of this prepared statement."
  },
  "api/Oracle.NoSQL.SDK.PreparedStatement.Variables.html": {
    "href": "api/Oracle.NoSQL.SDK.PreparedStatement.Variables.html",
    "title": "Property Variables | NoSQL SDK for .NET",
    "keywords": "Property Variables Variables Gets the bind variables. Declaration public IDictionary<string, FieldValue> Variables { get; } Property Value Type Description IDictionary < String , FieldValue > The collection of bind variables represented as IDictionary<TKey,TValue> . Remarks This method returns bind variables as a dictionary with string keys and values of type FieldValue . You may use it to access bind variables and set their values. This is an alternative to using SetVariable(String, FieldValue) method. To set bind variable by its position, use SetVariable(Int32, FieldValue) method. Examples Setting bind variables. // Setting variables of different types. preparedStatement.Variables[\"$var1\"] = 10; preparedStatement.Variables[\"$var2\"] = \"abc\"; preparedStatement.Variables[\"$var3\"] = new DateTime(2021, 05, 18); See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.-ctor.html",
    "title": "Constructor PrepareOptions | NoSQL SDK for .NET",
    "keywords": "Constructor PrepareOptions PrepareOptions() Declaration public PrepareOptions()"
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.GetQueryPlan.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.GetQueryPlan.html",
    "title": "Property GetQueryPlan | NoSQL SDK for .NET",
    "keywords": "Property GetQueryPlan GetQueryPlan Gets or sets a value that determines whether a printout of the query execution plan will be included in the returned result. Declaration public bool GetQueryPlan { get; set; } Property Value Type Description Boolean true to return the printout of the query execution plan, otherwise false . If true , the query execution plan will be available as QueryPlan . The default is false ."
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.GetResultSchema.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.GetResultSchema.html",
    "title": "Property GetResultSchema | NoSQL SDK for .NET",
    "keywords": "Property GetResultSchema GetResultSchema Gets or sets a value that determines whether the JSON value of the query result schema will be included in the returned result. Declaration public bool GetResultSchema { get; set; } Property Value Type Description Boolean true to return the JSON value of the query result schema, otherwise false . If true , the query result schema will be available as ResultSchema The default is false ."
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.html",
    "title": "Class PrepareOptions | NoSQL SDK for .NET",
    "keywords": "Class PrepareOptions Represents options passed to PrepareAsync(String, PrepareOptions, CancellationToken) . Inheritance Object PrepareOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PrepareOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Constructors Name Description PrepareOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. GetQueryPlan Gets or sets a value that determines whether a printout of the query execution plan will be included in the returned result. GetResultSchema Gets or sets a value that determines whether the JSON value of the query result schema will be included in the returned result. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request."
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.PrepareOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.PrepareRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareRequest.html",
    "title": "Class PrepareRequest | NoSQL SDK for .NET",
    "keywords": "Class PrepareRequest Represents information about the Prepare operation performed by PrepareAsync(String, PrepareOptions, CancellationToken) API. Inheritance Object Request QueryRequestBase PrepareRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PrepareRequest : QueryRequestBase Properties Name Description Options Gets the options for the Prepare operation. Statement Gets the query SQL statement. See Also PrepareAsync(String, PrepareOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.PrepareRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Prepare operation. Declaration public PrepareOptions Options { get; } Property Value Type Description PrepareOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.PrepareRequest.Statement.html": {
    "href": "api/Oracle.NoSQL.SDK.PrepareRequest.Statement.html",
    "title": "Property Statement | NoSQL SDK for .NET",
    "keywords": "Property Statement Statement Gets the query SQL statement. Declaration public string Statement { get; } Property Value Type Description String The query SQL statement."
  },
  "api/Oracle.NoSQL.SDK.PutIfAbsentOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfAbsentOperation.html",
    "title": "Class PutIfAbsentOperation | NoSQL SDK for .NET",
    "keywords": "Class PutIfAbsentOperation Represents a PutIfAbsent operation that is part of WriteOperationCollection . Inheritance Object PutOperation PutIfAbsentOperation Implements IWriteOperation Inherited Members PutOperation.AbortIfUnsuccessful PutOperation.TableName PutOperation.Row PutOperation.Options Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfAbsentOperation : PutOperation, IWriteOperation Remarks This operation puts a row into a table if there is no existing row that matches the primary key. See Also IWriteOperation AddPutIfAbsent"
  },
  "api/Oracle.NoSQL.SDK.PutIfAbsentRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfAbsentRequest-1.html",
    "title": "Class PutIfAbsentRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class PutIfAbsentRequest<TRow> Represents information about Put operation performed by PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest PutRequest <TRow> PutIfAbsentRequest<TRow> Inherited Members PutRequest<TRow>.Row PutRequest<TRow>.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfAbsentRequest<TRow> : PutRequest<TRow> Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . See Also PutRequest <TRow> PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.PutIfPresentOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfPresentOperation.html",
    "title": "Class PutIfPresentOperation | NoSQL SDK for .NET",
    "keywords": "Class PutIfPresentOperation Represents a PutIfPresent operation that is part of WriteOperationCollection . Inheritance Object PutOperation PutIfPresentOperation Implements IWriteOperation Inherited Members PutOperation.AbortIfUnsuccessful PutOperation.TableName PutOperation.Row PutOperation.Options Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfPresentOperation : PutOperation, IWriteOperation Remarks This operation puts a row into a table if there is an existing row that matches the primary key. See Also IWriteOperation AddPutIfPresent"
  },
  "api/Oracle.NoSQL.SDK.PutIfPresentRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfPresentRequest-1.html",
    "title": "Class PutIfPresentRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class PutIfPresentRequest<TRow> Represents information about Put operation performed by PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest PutRequest <TRow> PutIfPresentRequest<TRow> Inherited Members PutRequest<TRow>.Row PutRequest<TRow>.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfPresentRequest<TRow> : PutRequest<TRow> Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . See Also PutRequest <TRow> PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.PutIfVersionOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfVersionOperation.html",
    "title": "Class PutIfVersionOperation | NoSQL SDK for .NET",
    "keywords": "Class PutIfVersionOperation Represents a PutIfVersion operation that is part of WriteOperationCollection . Inheritance Object PutOperation PutIfVersionOperation Implements IWriteOperation Inherited Members PutOperation.AbortIfUnsuccessful PutOperation.TableName PutOperation.Row PutOperation.Options Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfVersionOperation : PutOperation, IWriteOperation Remarks This operation puts a row into a table if there is an existing row that matches the primary key and its RowVersion matches the provided value. Properties Name Description MatchVersion Gets the RowVersion of the row to match for the PutIfVersion operation. See Also IWriteOperation AddPutIfVersion"
  },
  "api/Oracle.NoSQL.SDK.PutIfVersionOperation.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfVersionOperation.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets the RowVersion of the row to match for the PutIfVersion operation. Declaration public RowVersion MatchVersion { get; } Property Value Type Description RowVersion The value of the version to match."
  },
  "api/Oracle.NoSQL.SDK.PutIfVersionRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfVersionRequest-1.html",
    "title": "Class PutIfVersionRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class PutIfVersionRequest<TRow> Represents information about Put operation performed by PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest PutRequest <TRow> PutIfVersionRequest<TRow> Inherited Members PutRequest<TRow>.Row PutRequest<TRow>.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutIfVersionRequest<TRow> : PutRequest<TRow> Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description MatchVersion Gets the RowVersion of the row to match for the PutIfVersion operation. See Also PutRequest <TRow> PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.PutIfVersionRequest-1.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.PutIfVersionRequest-1.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets the RowVersion of the row to match for the PutIfVersion operation. Declaration public RowVersion MatchVersion { get; } Property Value Type Description RowVersion The value of the version to match."
  },
  "api/Oracle.NoSQL.SDK.PutManyOptions.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.PutManyOptions.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Put operation fails. Declaration public bool AbortIfUnsuccessful { get; set; } Property Value Type Description Boolean true to abort the transaction if any Put operation fails, otherwise false . The default is false . Remarks If set to true and any Put operation fails, the entire transaction started by PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) will be aborted."
  },
  "api/Oracle.NoSQL.SDK.PutManyOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.PutManyOptions.-ctor.html",
    "title": "Constructor PutManyOptions | NoSQL SDK for .NET",
    "keywords": "Constructor PutManyOptions PutManyOptions() Declaration public PutManyOptions()"
  },
  "api/Oracle.NoSQL.SDK.PutManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.PutManyOptions.html",
    "title": "Class PutManyOptions | NoSQL SDK for .NET",
    "keywords": "Class PutManyOptions Represents options passed to PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) API. Inheritance Object PutOptions PutManyOptions Inherited Members PutOptions.Compartment PutOptions.Namespace PutOptions.Timeout PutOptions.Durability PutOptions.IfAbsent PutOptions.IfPresent PutOptions.MatchVersion PutOptions.ReturnExisting PutOptions.TTL PutOptions.UpdateTTLToDefault PutOptions.ExactMatch PutOptions.IdentityCacheSize Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutManyOptions : PutOptions Remarks These options include all options available in PutOptions with the addition of AbortIfUnsuccessful option. Constructors Name Description PutManyOptions() Properties Name Description AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Put operation fails."
  },
  "api/Oracle.NoSQL.SDK.PutOperation.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOperation.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. Declaration public bool AbortIfUnsuccessful { get; } Property Value Type Description Boolean true to abort the transaction if this operation fails, otherwise false . Implements IWriteOperation.AbortIfUnsuccessful"
  },
  "api/Oracle.NoSQL.SDK.PutOperation.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOperation.html",
    "title": "Class PutOperation | NoSQL SDK for .NET",
    "keywords": "Class PutOperation Represents a Put operation that is part of WriteOperationCollection . Inheritance Object PutOperation PutIfAbsentOperation PutIfPresentOperation PutIfVersionOperation Implements IWriteOperation Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutOperation : Object, IWriteOperation Properties Name Description AbortIfUnsuccessful Gets the value that determines whether to abort the transaction started by call to WriteManyAsync if this operation fails. Options Gets the options for the Put operation. Row Gets the value of the row for the Put operation. TableName Gets the table name, if available. See Also IWriteOperation AddPut"
  },
  "api/Oracle.NoSQL.SDK.PutOperation.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOperation.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Put operation. Declaration public PutOptions Options { get; } Property Value Type Description PutOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.PutOperation.Row.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOperation.Row.html",
    "title": "Property Row | NoSQL SDK for .NET",
    "keywords": "Property Row Row Gets the value of the row for the Put operation. Declaration public object Row { get; } Property Value Type Description Object The value of the row as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.PutOperation.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOperation.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the table name, if available. Declaration public virtual string TableName { get; } Property Value Type Description String Table name if available, otherwise null. Implements IWriteOperation.TableName Remarks Table name is required if this operation is used by WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) method that requires you to provide table name for each operation. If using WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) , PutManyAsync or DeleteManyAsync , table name should be provided as a parameter to these methods rather than per-operation and thus this property should be null ."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.-ctor.html",
    "title": "Constructor PutOptions | NoSQL SDK for .NET",
    "keywords": "Constructor PutOptions PutOptions() Declaration public PutOptions()"
  },
  "api/Oracle.NoSQL.SDK.PutOptions.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-premise only. Gets or sets Durability value to use for the operation. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for the operation. If not set, defaults to Durability . Remarks Durability determines SyncPolicy for Master and Replicas as well as ReplicaAckPolicy for the Replicas. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.PutOptions.ExactMatch.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.ExactMatch.html",
    "title": "Property ExactMatch | NoSQL SDK for .NET",
    "keywords": "Property ExactMatch ExactMatch Gets or sets a value that determines whether the provided row value must be an exact match for the table schema. Declaration public bool ExactMatch { get; set; } Property Value Type Description Boolean true to require the row to exactly match the table schema, otherwise false . The default is false , meaning that exact match is not required. Remarks If set to true and the MapValue provided for the row does not match the table schema, the operation will fail. Exact match means that there are no required fields missing and that there are no extra, unknown fields."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.html",
    "title": "Class PutOptions | NoSQL SDK for .NET",
    "keywords": "Class PutOptions Represent options for the Put operation. Inheritance Object PutOptions PutManyOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutOptions : Object Remarks These options are passed to APIs PutAsync(String, MapValue, PutOptions, CancellationToken) , PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) , PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) and PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) . For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing Put operation with provided PutOptions . var result = await client.PutAsync(\"myTable\", new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }, new PutOptions { Timeout = TimeSpan.FromSeconds(10), IfAbsent = true, TTL = TimeToLive.OfDays(5) }); Constructors Name Description PutOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Durability On-premise only. Gets or sets Durability value to use for the operation. ExactMatch Gets or sets a value that determines whether the provided row value must be an exact match for the table schema. IdentityCacheSize Gets or sets the number of generated identity values that are requested from the server during the Put operation. IfAbsent Gets or sets a value that determines whether to perform the Put operation only if there is no existing row that matches the primary key. IfPresent Gets or sets a value that determines whether to perform the Put operation only if there is an existing row that matches the primary key. MatchVersion Gets or sets a value that determines whether to perform the Put operation only if there is an existing row that matches the primary key and its RowVersion matches the value provided. Namespace On-premises only. Gets or sets the optional namespace. ReturnExisting Gets or sets a value that determines whether to return existing row and its RowVersion if the conditional Put operation fails. Timeout Gets or sets the timeout for the request. TTL Gets or sets TimeToLive value of the row. UpdateTTLToDefault Gets or sets a value that determines whether to update the time to live (TTL) value of the existing row to the table's default TTL if there is an existing row and the Put operation is successful. See Also PutAsync(String, MapValue, PutOptions, CancellationToken) PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.PutOptions.IdentityCacheSize.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.IdentityCacheSize.html",
    "title": "Property IdentityCacheSize | NoSQL SDK for .NET",
    "keywords": "Property IdentityCacheSize IdentityCacheSize Gets or sets the number of generated identity values that are requested from the server during the Put operation. Declaration public Nullable<int> IdentityCacheSize { get; set; } Property Value Type Description Nullable < Int32 > Number of generated identity values requested from the server during the Put operation. Must be a positive integer. If not set, the DDL identity CACHE value is used. Remarks This value takes precedence over the DDL identity CACHE option set during creation of the identity column. See Also GeneratedValue"
  },
  "api/Oracle.NoSQL.SDK.PutOptions.IfAbsent.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.IfAbsent.html",
    "title": "Property IfAbsent | NoSQL SDK for .NET",
    "keywords": "Property IfAbsent IfAbsent Gets or sets a value that determines whether to perform the Put operation only if there is no existing row that matches the primary key. Declaration public bool IfAbsent { get; set; } Property Value Type Description Boolean true to perform the Put operation only if there is no existing row matching the primary key, otherwise false . The default is false . Remarks This property is exclusive with IfPresent and MatchVersion . If set to true , those properties will be unset. You may also use PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) API instead of setting this option."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.IfPresent.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.IfPresent.html",
    "title": "Property IfPresent | NoSQL SDK for .NET",
    "keywords": "Property IfPresent IfPresent Gets or sets a value that determines whether to perform the Put operation only if there is an existing row that matches the primary key. Declaration public bool IfPresent { get; set; } Property Value Type Description Boolean true to perform the Put operation only if there is an existing row matching the primary key, otherwise false . The default is false . Remarks This property is exclusive with IfAbsent and MatchVersion . If set to true , those properties will be unset. You may also use PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) API instead of setting this option."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.MatchVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.MatchVersion.html",
    "title": "Property MatchVersion | NoSQL SDK for .NET",
    "keywords": "Property MatchVersion MatchVersion Gets or sets a value that determines whether to perform the Put operation only if there is an existing row that matches the primary key and its RowVersion matches the value provided. Declaration public RowVersion MatchVersion { get; set; } Property Value Type Description RowVersion The value of RowVersion that indicates that the Put operation should only be performed if there is an existing row matching the primary key and its version matches this value. Remarks This property is exclusive with IfAbsent and IfPresent . If set to a non-null value, those properties will be unset. You may also use PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) API instead of setting this option."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.ReturnExisting.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.ReturnExisting.html",
    "title": "Property ReturnExisting | NoSQL SDK for .NET",
    "keywords": "Property ReturnExisting ReturnExisting Gets or sets a value that determines whether to return existing row and its RowVersion if the conditional Put operation fails. Declaration public bool ReturnExisting { get; set; } Property Value Type Description Boolean true to return existing row and its version if conditional Put operation fails, otherwise false . The default is false . Remarks If set to true , the existing row and its version will be returned as ExistingRow and ExistingVersion ."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.TTL.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.TTL.html",
    "title": "Property TTL | NoSQL SDK for .NET",
    "keywords": "Property TTL TTL Gets or sets TimeToLive value of the row. Declaration public Nullable<TimeToLive> TTL { get; set; } Property Value Type Description Nullable < TimeToLive > Time to live value. Remarks If set, it causes the time to live on the row to be set to the specified value on put. This value overrides any default time to live setting on the table."
  },
  "api/Oracle.NoSQL.SDK.PutOptions.UpdateTTLToDefault.html": {
    "href": "api/Oracle.NoSQL.SDK.PutOptions.UpdateTTLToDefault.html",
    "title": "Property UpdateTTLToDefault | NoSQL SDK for .NET",
    "keywords": "Property UpdateTTLToDefault UpdateTTLToDefault Gets or sets a value that determines whether to update the time to live (TTL) value of the existing row to the table's default TTL if there is an existing row and the Put operation is successful. Declaration public bool UpdateTTLToDefault { get; set; } Property Value Type Description Boolean true to update TTL to the table's default, otherwise false . The default is false , meaning that updating an existing row has no effect on its TTL. Remarks If set to true and there is an existing row matching the primary key, its TTL will be set to the table's default TTL. If the table has no default TTL or the value of TTL is set, this property has no effect."
  },
  "api/Oracle.NoSQL.SDK.PutRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.PutRequest-1.html",
    "title": "Class PutRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class PutRequest<TRow> Represents information about Put operation performed by PutAsync(String, MapValue, PutOptions, CancellationToken) API. Inheritance Object Request RequestWithTable WriteRequest PutRequest<TRow> PutIfAbsentRequest<TRow> PutIfPresentRequest<TRow> PutIfVersionRequest<TRow> Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutRequest<TRow> : WriteRequest Type Parameters Name Description TRow The type of value representing the row to put. Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description Options Gets the options for the Put operation. Row Gets the value of the row for the Put operation. See Also PutAsync(String, MapValue, PutOptions, CancellationToken) Request ReadRequest"
  },
  "api/Oracle.NoSQL.SDK.PutRequest-1.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.PutRequest-1.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Put operation. Declaration public PutOptions Options { get; } Property Value Type Description PutOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.PutRequest-1.Row.html": {
    "href": "api/Oracle.NoSQL.SDK.PutRequest-1.Row.html",
    "title": "Property Row | NoSQL SDK for .NET",
    "keywords": "Property Row Row Gets the value of the row for the Put operation. Declaration public object Row { get; } Property Value Type Description Object The value of the row as object . Currently, its runtime type would only be MapValue or its subclasses."
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.ExistingModificationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.ExistingModificationTime.html",
    "title": "Property ExistingModificationTime | NoSQL SDK for .NET",
    "keywords": "Property ExistingModificationTime ExistingModificationTime Gets the modification time of existing row if the conditional Put operation has failed. Declaration public Nullable<DateTime> ExistingModificationTime { get; } Property Value Type Description Nullable < DateTime > The modification time of existing row if available, otherwise null . Remarks This value is available if the conditional Put operation (as indicated by IfAbsent or MatchVersion options) has failed, there is an existing row, ReturnExisting was set to true and the server supports this feature."
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.ExistingRow.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.ExistingRow.html",
    "title": "Property ExistingRow | NoSQL SDK for .NET",
    "keywords": "Property ExistingRow ExistingRow Gets the value of existing row if the conditional Put operation has failed. Declaration public TRow ExistingRow { get; } Property Value Type Description TRow Value of existing row if available, otherwise null . Remarks This value is available if the conditional Put operation (as indicated by IfAbsent or MatchVersion options) has failed, there is an existing row and ReturnExisting was set to true . See Also IfAbsent IfPresent MatchVersion ReturnExisting"
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.ExistingVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.ExistingVersion.html",
    "title": "Property ExistingVersion | NoSQL SDK for .NET",
    "keywords": "Property ExistingVersion ExistingVersion Gets the value of RowVersion of existing row if the conditional Put operation has failed. Declaration public RowVersion ExistingVersion { get; } Property Value Type Description RowVersion Version of RowVersion of existing row if available, otherwise null . Remarks This value is available if the conditional Put operation (as indicated by IfAbsent or MatchVersion options) has failed, there is an existing row and ReturnExisting was set to true . See Also IfAbsent IfPresent MatchVersion ReturnExisting"
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.GeneratedValue.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.GeneratedValue.html",
    "title": "Property GeneratedValue | NoSQL SDK for .NET",
    "keywords": "Property GeneratedValue GeneratedValue Gets the value generated by the Put operation for an identity or generated UUID column. Declaration public FieldValue GeneratedValue { get; set; } Property Value Type Description FieldValue Generated value if available, otherwise null . Remarks This property returns the value generated if the Put operation created a new value for an identity column or a string column declared as generated UUID. It is available only if the table has such column and a value was generated for that column by the Put operation."
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.html",
    "title": "Class PutResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class PutResult<TRow> Represents the result of the Put operation. Inheritance Object PutResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class PutResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow . Must be a reference type. Currently the only supported type is RecordValue . Remarks This class is the result of PutAsync(String, MapValue, PutOptions, CancellationToken) , PutIfAbsentAsync(String, MapValue, PutOptions, CancellationToken) , PutIfPresentAsync(String, MapValue, PutOptions, CancellationToken) and PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) APIs. Success determines whether the conditional Put operation was successful. For unconditional Put operations this property will always be true because other failures throw exceptions. If successful, Version will be set. If conditional Put operation fails, ExistingRow and its ExistingVersion may be available if ReturnExisting was set to true . Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. ExistingModificationTime Gets the modification time of existing row if the conditional Put operation has failed. ExistingRow Gets the value of existing row if the conditional Put operation has failed. ExistingVersion Gets the value of RowVersion of existing row if the conditional Put operation has failed. GeneratedValue Gets the value generated by the Put operation for an identity or generated UUID column. Success Gets a value indicating whether the Put operation was successful. Version Gets the RowVersion of the new row if the Put operation was successful. See Also PutAsync(String, MapValue, PutOptions, CancellationToken) ConsumedCapacity RowVersion"
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.Success.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.Success.html",
    "title": "Property Success | NoSQL SDK for .NET",
    "keywords": "Property Success Success Gets a value indicating whether the Put operation was successful. Declaration public bool Success { get; } Property Value Type Description Boolean true if the Put operation was successful, otherwise false . Remarks This value determines success of conditional Put operation (as indicated by IfAbsent , IfPresent or MatchVersion options). For unconditional Put operation this value is always true . See Also IfAbsent IfPresent MatchVersion"
  },
  "api/Oracle.NoSQL.SDK.PutResult-1.Version.html": {
    "href": "api/Oracle.NoSQL.SDK.PutResult-1.Version.html",
    "title": "Property Version | NoSQL SDK for .NET",
    "keywords": "Property Version Version Gets the RowVersion of the new row if the Put operation was successful. Declaration public RowVersion Version { get; } Property Value Type Description RowVersion Version of the new row if the Put operation was successful, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.QueryContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryContinuationKey.html",
    "title": "Class QueryContinuationKey | NoSQL SDK for .NET",
    "keywords": "Class QueryContinuationKey Represents the continuation key for the Query operation. Inheritance Object QueryContinuationKey Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class QueryContinuationKey : Object Remarks QueryContinuationKey is an opaque type returned from QueryAsync as ContinuationKey when the Query operation has exceeded the maximum amount of data to be read or written and it needs to be continued with subsequent calls to QueryAsync . For each subsequent call, set ContinuationKey to the value of ContinuationKey returned by the previous call. You do not need to use this type if iterating over GetQueryAsyncEnumerable . See Also QueryAsync QueryResult <TRow> QueryOptions"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Consistency.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Consistency.html",
    "title": "Property Consistency | NoSQL SDK for .NET",
    "keywords": "Property Consistency Consistency Gets or sets Consistency used for the operation. Declaration public Nullable<Consistency> Consistency { get; set; } Property Value Type Description Nullable < Consistency > Consistency used for the operation. If not set, defaults to Consistency . See Also Consistency"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.ContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.ContinuationKey.html",
    "title": "Property ContinuationKey | NoSQL SDK for .NET",
    "keywords": "Property ContinuationKey ContinuationKey Gets or sets the continuation key for the Query operation. Declaration public QueryContinuationKey ContinuationKey { get; set; } Property Value Type Description QueryContinuationKey The continuation key on subsequent calls to QueryAsync . Remarks Only for use with QueryAsync . This property is not needed if using GetQueryAsyncEnumerable . The continuation key is returned as ContinuationKey from the previous call to QueryAsync and can be used to continue the query. See Also ContinuationKey"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.-ctor.html",
    "title": "Constructor QueryOptions | NoSQL SDK for .NET",
    "keywords": "Constructor QueryOptions QueryOptions() Declaration public QueryOptions()"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-premise only. Gets or sets Durability value to use for the update query operation. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for the update query operation. If not set, defaults to Durability . Remarks This option only applies for update queries, i.e. queries issued via INSERT, UPDATE, UPSERT and DELETE statements. For read-only SELECT queries this option is ignored. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.html",
    "title": "Class QueryOptions | NoSQL SDK for .NET",
    "keywords": "Class QueryOptions Represents options for the Query operation. Inheritance Object QueryOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class QueryOptions : Object Remarks These options are passed to QueryAsync and GetQueryAsyncEnumerable APIs. For properties not specified or null , appropriate defaults will be used as indicated below. Note that for options Timeout , Limit , MaxReadKB and MaxWriteKB the corresponding limit is applied to each query request, not to the query as a whole. This means the limit is applied to each call to QueryAsync or to each iteration of the await foreach loop when iterating over GetQueryAsyncEnumerable . Examples Executing Query operation with provided QueryOptions . var enumerable = client.GetQueryAsyncEnumerable( \"SELECT * FROM myTable\", new QueryOptions { Timeout = TimeSpan.FromSeconds(20), MaxReadKB = 128, MaxMemoryMB = 512 }); await foreach(var result in enumerable) { // ..... } Constructors Name Description QueryOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Consistency Gets or sets Consistency used for the operation. ContinuationKey Gets or sets the continuation key for the Query operation. Durability On-premise only. Gets or sets Durability value to use for the update query operation. Limit Gets or sets the limit on the number of rows returned by this operation. MaxMemoryMB Gets or sets the maximum amount of memory that may be used by the driver executing this query, in MB. MaxReadKB Gets or sets the limit on the total amount of data read by this operation, in KB. MaxWriteKB Gets or sets the limit on the total data written by this operation, in KB. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also QueryAsync GetQueryAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Limit.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Limit.html",
    "title": "Property Limit | NoSQL SDK for .NET",
    "keywords": "Property Limit Limit Gets or sets the limit on the number of rows returned by this operation. Declaration public Nullable<int> Limit { get; set; } Property Value Type Description Nullable < Int32 > Limit on the number of rows returned by the query. Remarks Settings this value allows an operation to return less than the default amount of data. If set, this limit is applied to each call to QueryAsync or to each iteration of the await foreach loop over GetQueryAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.MaxMemoryMB.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.MaxMemoryMB.html",
    "title": "Property MaxMemoryMB | NoSQL SDK for .NET",
    "keywords": "Property MaxMemoryMB MaxMemoryMB Gets or sets the maximum amount of memory that may be used by the driver executing this query, in MB. Declaration public Nullable<int> MaxMemoryMB { get; set; } Property Value Type Description Nullable < Int32 > The maximum amount of memory that may be used by the driver executing this query, in MB. If not set, defaults to MaxMemoryMB which itself has a default of 1GB. Remarks This value indicates the amount of memory that may be consumed locally by the query execution of operations such as duplicate elimination (which may be required if using an index on an array or a map) and sorting. Such operations may require significant amount of memory as they need to cache full result set or a large subset of it locally. If the memory consumption exceeds this value, error will result. If set, this limit is applied the query as a whole (including multiple calls to QueryAsync or full iteration over GetQueryAsyncEnumerable )."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.MaxReadKB.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.MaxReadKB.html",
    "title": "Property MaxReadKB | NoSQL SDK for .NET",
    "keywords": "Property MaxReadKB MaxReadKB Gets or sets the limit on the total amount of data read by this operation, in KB. Declaration public Nullable<int> MaxReadKB { get; set; } Property Value Type Description Nullable < Int32 > Limit on the total amount of data read, in KB. Remarks This value can only reduce the system defined limit. This limit is independent of read units consumed by the operation. It is recommended that for tables with relatively low provisioned read throughput that this limit be reduced to less than or equal to one half of the provisioned throughput in order to avoid or reduce throttling exceptions. If set, this limit is applied to each call to QueryAsync or to each iteration of the await foreach loop over GetQueryAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.MaxWriteKB.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.MaxWriteKB.html",
    "title": "Property MaxWriteKB | NoSQL SDK for .NET",
    "keywords": "Property MaxWriteKB MaxWriteKB Gets or sets the limit on the total data written by this operation, in KB. Declaration public Nullable<int> MaxWriteKB { get; set; } Property Value Type Description Nullable < Int32 > Limit on the total amount of data written, in KB. Remarks This limit is relevant for UPDATE and DELETE queries. This value can only reduce the system defined limit. This limit is independent of the write units consumed by the operation. If set, this limit is applied to each call to QueryAsync or to each iteration of the await foreach loop over GetQueryAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.QueryOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.QueryRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest.html",
    "title": "Class QueryRequest | NoSQL SDK for .NET",
    "keywords": "Class QueryRequest Base class for QueryRequest<TRow> . Only used internally. Inheritance Object Request QueryRequestBase QueryRequest QueryRequest<TRow> Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class QueryRequest : QueryRequestBase"
  },
  "api/Oracle.NoSQL.SDK.QueryRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest-1.html",
    "title": "Class QueryRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class QueryRequest<TRow> Represents information about Query operation performed by QueryAsync and GetQueryAsyncEnumerable APIs. Inheritance Object Request QueryRequestBase QueryRequest QueryRequest<TRow> Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class QueryRequest<TRow> : QueryRequest Type Parameters Name Description TRow The type of value representing the rows returned by the Query operation. Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description IsPrepared Gets a value indicating whether this request represents a prepared query. Options Gets the options for the Query operation. PreparedStatement Gets the prepared query statement. Statement Gets the query SQL statement. See Also QueryAsync GetQueryAsyncEnumerable Request"
  },
  "api/Oracle.NoSQL.SDK.QueryRequest-1.IsPrepared.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest-1.IsPrepared.html",
    "title": "Property IsPrepared | NoSQL SDK for .NET",
    "keywords": "Property IsPrepared IsPrepared Gets a value indicating whether this request represents a prepared query. Declaration public bool IsPrepared { get; } Property Value Type Description Boolean true if the Query operation was passed a PreparedStatement , false if the Query operation was passed a SQL statement."
  },
  "api/Oracle.NoSQL.SDK.QueryRequest-1.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest-1.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for the Query operation. Declaration public QueryOptions Options { get; } Property Value Type Description QueryOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.QueryRequest-1.PreparedStatement.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest-1.PreparedStatement.html",
    "title": "Property PreparedStatement | NoSQL SDK for .NET",
    "keywords": "Property PreparedStatement PreparedStatement Gets the prepared query statement. Declaration public PreparedStatement PreparedStatement { get; } Property Value Type Description PreparedStatement The prepared query statement if the Query operation was passed a PreparedStatement or null if the Query operation was passed a SQL statement."
  },
  "api/Oracle.NoSQL.SDK.QueryRequest-1.Statement.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequest-1.Statement.html",
    "title": "Property Statement | NoSQL SDK for .NET",
    "keywords": "Property Statement Statement Gets the query SQL statement. Declaration public string Statement { get; } Property Value Type Description String The query SQL statement if the Query operation was passed a SQL statement or null if the Query operation was passed a PreparedStatement ."
  },
  "api/Oracle.NoSQL.SDK.QueryRequestBase.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryRequestBase.html",
    "title": "Class QueryRequestBase | NoSQL SDK for .NET",
    "keywords": "Class QueryRequestBase Base class for prepare and query requests. Only used internally. Inheritance Object Request QueryRequestBase PrepareRequest QueryRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class QueryRequestBase : Request"
  },
  "api/Oracle.NoSQL.SDK.QueryResult-1.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryResult-1.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.QueryResult-1.ContinuationKey.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryResult-1.ContinuationKey.html",
    "title": "Property ContinuationKey | NoSQL SDK for .NET",
    "keywords": "Property ContinuationKey ContinuationKey Gets the continuation key. Declaration public QueryContinuationKey ContinuationKey { get; } Property Value Type Description QueryContinuationKey The continuation key indicating where the next call to QueryAsync can resume or null if the query has no more results. Remarks You only need to use this property if using QueryAsync . It is not needed if using GetQueryAsyncEnumerable . See Also QueryContinuationKey"
  },
  "api/Oracle.NoSQL.SDK.QueryResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryResult-1.html",
    "title": "Class QueryResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class QueryResult<TRow> Represents the result of the Query operation. Inheritance Object QueryResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class QueryResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the returned rows. Must be a reference type. Currently the only supported type is RecordValue . Remarks This class represents the result of QueryAsync API and partial results when iterating with GetQueryAsyncEnumerable . It contains a list of row instances representing the query results. The shape of the values is based on the schema implied by the query. For example, a query such as SELECT * FROM ... that returns an intact row will return values that conform to the schema of the table. Projections return instances that conform to the schema implied by the statement. UPDATE queries either return values based on a RETURNING clause or, by default, the number of rows affected by the UPDATE statement. When using QueryAsync API, if the value of ContinuationKey is not null , there are additional results available. That value can be supplied as ContinuationKey to the subsequent call to QueryAsync to continue the query. In general, QueryAsync should be called in a loop (until the continuation key becomes null ) to get all the results, as described in QueryAsync(String, QueryOptions, CancellationToken) . You don't need to set the continuation key if using GetQueryAsyncEnumerable since the continuation key is managed internally in this case. It is possible that QueryAsync returns no rows in the result ( Rows list is empty) but still have a non-null continuation key. The same situation may happen when using GetQueryAsyncEnumerable and no rows are returned on a given iteration of await foreach loop. This may happen if the query reads the maximum amount of data allowed in a single request without matching a query predicate. In either case you should continue the query by calling QueryAsync or iterating via await foreach to get results, if any exist. It is also a normal situation if that the last call to QueryAsync (when the continuation key becomes null ) or the last iteration of await foreach loop returns no rows in the result. This could happen if the last iteration returned all the remaining rows but was stopped due to the limits on the data read or written during a single request, so one more iteration was needed to find that no more results are available. Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. ContinuationKey Gets the continuation key. Rows Gets the list of query results. See Also QueryAsync GetQueryAsyncEnumerable"
  },
  "api/Oracle.NoSQL.SDK.QueryResult-1.Rows.html": {
    "href": "api/Oracle.NoSQL.SDK.QueryResult-1.Rows.html",
    "title": "Property Rows | NoSQL SDK for .NET",
    "keywords": "Property Rows Rows Gets the list of query results. Declaration public IReadOnlyList<TRow> Rows { get; } Property Value Type Description IReadOnlyList <TRow> The list of query results as row instances. Currently the only supported type for a row instance is RecordValue ."
  },
  "api/Oracle.NoSQL.SDK.ReadRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.ReadRequest.html",
    "title": "Class ReadRequest | NoSQL SDK for .NET",
    "keywords": "Class ReadRequest Base class for information about all operations that read a row from a table. Inheritance Object Request RequestWithTable ReadRequest GetRequest <TRow> Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class ReadRequest : RequestWithTable Remarks Used as based class for GetRequest<TRow> . See Also RequestWithTable GetRequest <TRow>"
  },
  "api/Oracle.NoSQL.SDK.ReadThrottlingException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ReadThrottlingException.-ctor.html",
    "title": "Constructor ReadThrottlingException | NoSQL SDK for .NET",
    "keywords": "Constructor ReadThrottlingException ReadThrottlingException() Initializes a new instance of ReadThrottlingException . Declaration public ReadThrottlingException() ReadThrottlingException(String) Initializes a new instance of ReadThrottlingException with the message that describes the current exception. Declaration public ReadThrottlingException(string message) Parameters Type Name Description String message A message that describes the current exception. ReadThrottlingException(String, Exception) Initializes a new instance of ReadThrottlingException with the message that describes the current exception and an inner exception. Declaration public ReadThrottlingException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ReadThrottlingException.html": {
    "href": "api/Oracle.NoSQL.SDK.ReadThrottlingException.html",
    "title": "Class ReadThrottlingException | NoSQL SDK for .NET",
    "keywords": "Class ReadThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when the provisioned read throughput has been exceeded. Inheritance Object NoSQLException RetryableException ReadThrottlingException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ReadThrottlingException : RetryableException Remarks This exception is retryable and NoSQLRetryHandler uses progressive delays before retrying to minimize the chance that a retry is also throttled. In general, applications should attempt to avoid throttling exceptions by rate limiting themselves to the degree possible, because the rate limiting results in a better throughput than performing operation retries. Constructors Name Description ReadThrottlingException() Initializes a new instance of ReadThrottlingException . ReadThrottlingException(String) Initializes a new instance of ReadThrottlingException with the message that describes the current exception. ReadThrottlingException(String, Exception) Initializes a new instance of ReadThrottlingException with the message that describes the current exception and an inner exception. See Also NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.-ctor.html",
    "title": "Constructor RecordValue | NoSQL SDK for .NET",
    "keywords": "Constructor RecordValue RecordValue() Initializes a new instance of RecordValue that is empty and has the default initial capacity. Declaration public RecordValue() See Also MapValue() RecordValue(Int32) Initializes a new instance of RecordValue that is empty and has the specified initial capacity. Declaration public RecordValue(int capacity) Parameters Type Name Description Int32 capacity The number of elements that the new RecordValue can initially hold. See Also MapValue(Int32)"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.Equals.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.Equals.html",
    "title": "Method Equals | NoSQL SDK for .NET",
    "keywords": "Method Equals Equals(FieldValue) Returns a value indicating whether the value of this instance is equal to the value of the specified FieldValue instance. Declaration public override bool Equals(FieldValue other) Parameters Type Name Description FieldValue other The value to compare with this instance for equality. Returns Type Description Boolean true if other is not null and the value of this instance is equal to other according to the defined rules, otherwise false . Overrides FieldValue.Equals(FieldValue) Remarks The equality comparison semantics roughly follows the one described in section Value Comparison Operators in the SQL Reference Guide. All comparisons supported by CompareTo(FieldValue) are also supported as equality comparisons. In addition to these, the following comparisons are also supported: An instance of BinaryValue is comparable with another instance of BinaryValue for equality. They are equal if their byte array values are the same length and are equal byte-per-byte. Singleton instance of NullValue is equal to itself and not equal to instance of any other type. Same goes for singleton instance of JsonNullValue . An instance of ArrayValue is comparable with another instance of ArrayValue for equality. They are equal if the two arrays are the same length and the elements of the two arrays are equal pair-wise, with equality of elements defined in recursive fashion. An instance of MapValue is comparable with another instance of MapValue for equality. They are equal if the two dictionaries have the same size and contain equal keys and values, that is for each key in the first dictionary there must exist the same key in the second map with the value equal to the corresponding value in the first map, with equality of the values defined in recursive fashion. An instance of RecordValue is comparable with another instance of RecordValue for equality. They are equal if the two ordered dictionaries have the same size and for each position their keys and values are equal pair-wise, with equality of values defined in recursive fashion. Other than the cases listed above and in CompareTo(FieldValue) the values are not comparable for equality and this method returns false . See Also CompareTo ( FieldValue )"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.GetKeyAtIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.GetKeyAtIndex.html",
    "title": "Method GetKeyAtIndex | NoSQL SDK for .NET",
    "keywords": "Method GetKeyAtIndex GetKeyAtIndex(Int32) Gets the key at the specified index. Declaration public string GetKeyAtIndex(int index) Parameters Type Name Description Int32 index Zero-based index of the key. Returns Type Description String The key at the index Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.GetValueAtIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.GetValueAtIndex.html",
    "title": "Method GetValueAtIndex | NoSQL SDK for .NET",
    "keywords": "Method GetValueAtIndex GetValueAtIndex(Int32) Gets the value at the specified index. Declaration public FieldValue GetValueAtIndex(int index) Parameters Type Name Description Int32 index Zero-based index of the value. Returns Type Description FieldValue The value at the index Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.html",
    "title": "Class RecordValue | NoSQL SDK for .NET",
    "keywords": "Class RecordValue Represents an order-preserving dictionary with string keys and values of type FieldValue . Inheritance Object FieldValue MapValue RecordValue Implements IComparable < FieldValue > IEquatable < FieldValue > IDictionary < String , FieldValue > ICollection < KeyValuePair < String , FieldValue >> IEnumerable < KeyValuePair < String , FieldValue >> IEnumerable Inherited Members MapValue.Add(String, FieldValue) MapValue.ContainsKey(String) MapValue.Remove(String) MapValue.TryGetValue(String, FieldValue) MapValue.Clear() MapValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) MapValue.Keys MapValue.Values MapValue.Count MapValue.DbType MapValue.Item[String] FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToInt64() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class RecordValue : MapValue Remarks This class is used to represent values of NoSQL data type Record . It also represents table rows on output operations such as GetAsync(String, MapValue, GetOptions, CancellationToken) and QueryAsync . In both of these cases, the field (key) ordering is required to be preserved. In addition to the functionality of MapValue this class preserves the ordering of keys in the same order as they were added to the dictionary. The entries are not sorted by the key, instead the order is determined solely by the order in which the new entries are added. When enumerated with foreach loop, the order of entries is guaranteed to be the same. Each entry in the dictionary represented by this class has an index. The index ranges from 0 to Count and is is determined when the new entry is added to the dictionary, except for Insert(Int32, String, FieldValue) method that provides the index. This class also allows retrieving keys and values by index. Even though RecordValue may be used wherever MapValue is used, note that RecordValue is more memory and computation expensive then MapValue and thus it is preferred to use MapValue when the field ordering is not required. Constructors Name Description RecordValue() Initializes a new instance of RecordValue that is empty and has the default initial capacity. RecordValue(Int32) Initializes a new instance of RecordValue that is empty and has the specified initial capacity. Properties Name Description Item[Int32] Gets the value at the specified index. Methods Name Description Equals(FieldValue) Returns a value indicating whether the value of this instance is equal to the value of the specified FieldValue instance. GetKeyAtIndex(Int32) Gets the key at the specified index. GetValueAtIndex(Int32) Gets the value at the specified index. Insert(Int32, String, FieldValue) Inserts an entry with the specified key and the specified value at the specified index. RemoveAt(Int32) Removes the entry at the specified index. See Also MapValue"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.Insert.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.Insert.html",
    "title": "Method Insert | NoSQL SDK for .NET",
    "keywords": "Method Insert Insert(Int32, String, FieldValue) Inserts an entry with the specified key and the specified value at the specified index. Declaration public void Insert(int index, string key, FieldValue value) Parameters Type Name Description Int32 index Zero-based index at which the entry should be inserted. String key Key to add. FieldValue value Value to add. If null , Null will be added instead. Remarks If index is equal to Count , the key and value are added to the end of the collection. Note that for this method the order of the new entry within the dictionary is determined only by index . Existing indexes following the index may be shifted to make room for the new entry. Exceptions Type Condition ArgumentNullException If key is null . ArgumentOutOfRangeException If index is less than 0 or greater than Count ArgumentException The value with the specified key already exists in the dictionary."
  },
  "api/Oracle.NoSQL.SDK.RecordValue.Item.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.Item.html",
    "title": "Property Item | NoSQL SDK for .NET",
    "keywords": "Property Item Item[Int32] Gets the value at the specified index. Declaration public override FieldValue this[int index] { get; } Parameters Type Name Description Int32 index Zero-based index of the value. Property Value Type Description FieldValue The value at the index Overrides FieldValue.Item[Int32] Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.RecordValue.RemoveAt.html": {
    "href": "api/Oracle.NoSQL.SDK.RecordValue.RemoveAt.html",
    "title": "Method RemoveAt | NoSQL SDK for .NET",
    "keywords": "Method RemoveAt RemoveAt(Int32) Removes the entry at the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index Zero-based index of the entry to remove. Remarks This operation may involve shifting the entries following the index to the left to replace the removed entry. Exceptions Type Condition ArgumentOutOfRangeException If index is less than 0 or equal to or greater than Count"
  },
  "api/Oracle.NoSQL.SDK.Region.AF_JOHANNESBURG_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AF_JOHANNESBURG_1.html",
    "title": "Field AF_JOHANNESBURG_1 | NoSQL SDK for .NET",
    "keywords": "Field AF_JOHANNESBURG_1 Realm: OC1, South Africa Central (Johannesburg) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AF_JOHANNESBURG_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_CHIYODA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_CHIYODA_1.html",
    "title": "Field AP_CHIYODA_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_CHIYODA_1 Realm: OC8, Japan East (Chiyoda) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_CHIYODA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_CHUNCHEON_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_CHUNCHEON_1.html",
    "title": "Field AP_CHUNCHEON_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_CHUNCHEON_1 Realm: OC1, South Korea North (Chuncheon) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_CHUNCHEON_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_DCC_CANBERRA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_DCC_CANBERRA_1.html",
    "title": "Field AP_DCC_CANBERRA_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_DCC_CANBERRA_1 Realm: OC10, Australia Central (Canberra) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_DCC_CANBERRA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_DCC_GAZIPUR_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_DCC_GAZIPUR_1.html",
    "title": "Field AP_DCC_GAZIPUR_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_DCC_GAZIPUR_1 Realm: OC15, Gazipur (Bangladesh) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_DCC_GAZIPUR_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_DCC_OSAKA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_DCC_OSAKA_1.html",
    "title": "Field AP_DCC_OSAKA_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_DCC_OSAKA_1 Realm: OC25, Japan Dedicated (Osaka) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_DCC_OSAKA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_DCC_TOKYO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_DCC_TOKYO_1.html",
    "title": "Field AP_DCC_TOKYO_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_DCC_TOKYO_1 Realm: OC25, Japan Dedicated (Tokyo) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_DCC_TOKYO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_HOBSONVILLE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_HOBSONVILLE_1.html",
    "title": "Field AP_HOBSONVILLE_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_HOBSONVILLE_1 Realm: OC31, Hobsonville (New Zealand) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_HOBSONVILLE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_HYDERABAD_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_HYDERABAD_1.html",
    "title": "Field AP_HYDERABAD_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_HYDERABAD_1 Realm: OC1, India South (Hyderabad) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_HYDERABAD_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_IBARAKI_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_IBARAKI_1.html",
    "title": "Field AP_IBARAKI_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_IBARAKI_1 Realm: OC8, Japan (Ibaraki) Note: ukb is actually Kobe, but OCI uses it for Ibaraki Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_IBARAKI_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_MELBOURNE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_MELBOURNE_1.html",
    "title": "Field AP_MELBOURNE_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_MELBOURNE_1 Realm: OC1, Australia Southeast (Melbourne) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_MELBOURNE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_MUMBAI_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_MUMBAI_1.html",
    "title": "Field AP_MUMBAI_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_MUMBAI_1 Realm: OC1, India West (Mumbai) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_MUMBAI_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_OSAKA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_OSAKA_1.html",
    "title": "Field AP_OSAKA_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_OSAKA_1 Realm: OC1, Japan Central (Osaka) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_OSAKA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_SEOUL_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_SEOUL_1.html",
    "title": "Field AP_SEOUL_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_SEOUL_1 Realm: OC1, South Korea Central (Seoul) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_SEOUL_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_SINGAPORE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_SINGAPORE_1.html",
    "title": "Field AP_SINGAPORE_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_SINGAPORE_1 Realm: OC1, Singapore (Singapore) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_SINGAPORE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_SINGAPORE_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_SINGAPORE_2.html",
    "title": "Field AP_SINGAPORE_2 | NoSQL SDK for .NET",
    "keywords": "Field AP_SINGAPORE_2 Realm: OC1, Singapore2 (Singapore) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_SINGAPORE_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_SYDNEY_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_SYDNEY_1.html",
    "title": "Field AP_SYDNEY_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_SYDNEY_1 Realm: OC1, Australia East (Sydney) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_SYDNEY_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.AP_TOKYO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.AP_TOKYO_1.html",
    "title": "Field AP_TOKYO_1 | NoSQL SDK for .NET",
    "keywords": "Field AP_TOKYO_1 Realm: OC1, Japan East (Tokyo) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region AP_TOKYO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.CA_MONTREAL_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.CA_MONTREAL_1.html",
    "title": "Field CA_MONTREAL_1 | NoSQL SDK for .NET",
    "keywords": "Field CA_MONTREAL_1 Realm: OC1, Canada Southeast (Montreal) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region CA_MONTREAL_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.CA_TORONTO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.CA_TORONTO_1.html",
    "title": "Field CA_TORONTO_1 | NoSQL SDK for .NET",
    "keywords": "Field CA_TORONTO_1 Realm: OC1, Canada Southeast (Toronto) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region CA_TORONTO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.Endpoint.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.Endpoint.html",
    "title": "Property Endpoint | NoSQL SDK for .NET",
    "keywords": "Property Endpoint Endpoint Gets the region endpoint. Declaration public string Endpoint { get; } Property Value Type Description String The region endpoint constructed as described in the Region remarks section."
  },
  "api/Oracle.NoSQL.SDK.Region.EU_AMSTERDAM_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_AMSTERDAM_1.html",
    "title": "Field EU_AMSTERDAM_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_AMSTERDAM_1 Realm: OC1, Netherlands Northwest (Amsterdam) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_AMSTERDAM_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_DUBLIN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_DUBLIN_1.html",
    "title": "Field EU_DCC_DUBLIN_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_DUBLIN_1 Realm: OC14, Ireland (Dublin 1) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_DUBLIN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_DUBLIN_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_DUBLIN_2.html",
    "title": "Field EU_DCC_DUBLIN_2 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_DUBLIN_2 Realm: OC14, Ireland (Dublin 2) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_DUBLIN_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_MILAN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_MILAN_1.html",
    "title": "Field EU_DCC_MILAN_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_MILAN_1 Realm: OC14, Italy (Milan 1) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_MILAN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_MILAN_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_MILAN_2.html",
    "title": "Field EU_DCC_MILAN_2 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_MILAN_2 Realm: OC14, Italy (Milan 2) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_MILAN_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_RATING_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_RATING_1.html",
    "title": "Field EU_DCC_RATING_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_RATING_1 Realm: OC14, Germany (Rating 1) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_RATING_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_RATING_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_RATING_2.html",
    "title": "Field EU_DCC_RATING_2 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_RATING_2 Realm: OC14, Germany (Rating 2) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_RATING_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_ROME_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_ROME_1.html",
    "title": "Field EU_DCC_ROME_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_ROME_1 Realm: OC22, Italy Dedicated (Rome) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_ROME_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_DCC_ZURICH_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_DCC_ZURICH_1.html",
    "title": "Field EU_DCC_ZURICH_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_DCC_ZURICH_1 Realm: OC24, Switzerland Dedicated (Zurich) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_DCC_ZURICH_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_FRANKFURT_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_FRANKFURT_1.html",
    "title": "Field EU_FRANKFURT_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_FRANKFURT_1 Realm: OC1, Germany Central (Frankfurt) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_FRANKFURT_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_FRANKFURT_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_FRANKFURT_2.html",
    "title": "Field EU_FRANKFURT_2 | NoSQL SDK for .NET",
    "keywords": "Field EU_FRANKFURT_2 Realm: OC19, Germany (Frankfurt) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_FRANKFURT_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_JOVANOVAC_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_JOVANOVAC_1.html",
    "title": "Field EU_JOVANOVAC_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_JOVANOVAC_1 Realm: OC20, Serbia Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_JOVANOVAC_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_MADRID_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_MADRID_1.html",
    "title": "Field EU_MADRID_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_MADRID_1 Realm: OC1, Spain (Madrid) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_MADRID_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_MADRID_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_MADRID_2.html",
    "title": "Field EU_MADRID_2 | NoSQL SDK for .NET",
    "keywords": "Field EU_MADRID_2 Realm: OC19, Spain (Madrid) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_MADRID_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_MARSEILLE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_MARSEILLE_1.html",
    "title": "Field EU_MARSEILLE_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_MARSEILLE_1 Realm: OC1, France South (Marseille) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_MARSEILLE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_MILAN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_MILAN_1.html",
    "title": "Field EU_MILAN_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_MILAN_1 Realm: OC1, Italy (Milan) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_MILAN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_PARIS_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_PARIS_1.html",
    "title": "Field EU_PARIS_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_PARIS_1 Realm: OC1, France (Paris) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_PARIS_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_STOCKHOLM_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_STOCKHOLM_1.html",
    "title": "Field EU_STOCKHOLM_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_STOCKHOLM_1 Realm: OC1, Sweden Central (Stockholm) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_STOCKHOLM_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.EU_ZURICH_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.EU_ZURICH_1.html",
    "title": "Field EU_ZURICH_1 | NoSQL SDK for .NET",
    "keywords": "Field EU_ZURICH_1 Realm: OC1, Switzerland North (Zurich) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region EU_ZURICH_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.FromRegionCodeOrId.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.FromRegionCodeOrId.html",
    "title": "Method FromRegionCodeOrId | NoSQL SDK for .NET",
    "keywords": "Method FromRegionCodeOrId FromRegionCodeOrId(String) Returns the region associated with the specified region code or region id. Declaration public static Region FromRegionCodeOrId(string regionCodeOrId) Parameters Type Name Description String regionCodeOrId The region code or region id used to search for the region. Returns Type Description Region The region that has its region code or region id equal to regionCodeOrId , case-insensitive. Exceptions Type Condition ArgumentException If the region with the specified code or id equal to regionCodeOrId could not be found. See Also RegionId RegionCode"
  },
  "api/Oracle.NoSQL.SDK.Region.FromRegionId.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.FromRegionId.html",
    "title": "Method FromRegionId | NoSQL SDK for .NET",
    "keywords": "Method FromRegionId FromRegionId(String) Returns the region associated with the specified region id. Declaration public static Region FromRegionId(string regionId) Parameters Type Name Description String regionId The region id. Returns Type Description Region The region that has its region id equal to regionId , case-insensitive. Exceptions Type Condition ArgumentException If the region with the specified regionId could not be found. See Also RegionId"
  },
  "api/Oracle.NoSQL.SDK.Region.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.html",
    "title": "Class Region | NoSQL SDK for .NET",
    "keywords": "Class Region Cloud Service only. Represents the region in the Oracle Cloud Infrastructure. Inheritance Object Region Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class Region : Object Remarks The class contains the regions in the Oracle Cloud Infrastructure at the time of this release. The Oracle NoSQL Database Cloud Service is not available in all of these regions. For a definitive list of regions in which the Oracle NoSQL Database Cloud Service is available see Data Regions for Platform and Infrastructure Services . The applications cannot construct instances of this class and instead should use one of predefined read-only instances such as AP_MUMBAI_1 , US_PHOENIX_1 , etc. The Region instance can be provided as Region property when creating NoSQLClient instance. The region determines the endpoint with the NoSQLClient instance will communicate. Note that you may not specify both Region and Endpoint properties. The string-based endpoints associated with the regions for the Oracle NoSQL Database Cloud Service are in the format https://nosql.{regionId}.oci.{secondLevelDomain} . The region id is defined for each region and is available via RegionId property. The value of the region id can be also determined from its field name by lower-casing it and replacing _ with - . For example, the region id for AP_SEOUL_1 is ap-seoul-1 . The examples of known second level domains include: oraclecloud.com oraclegovcloud.com oraclegovcloud.uk oraclecloud8.com For example, the endpoint for US_ASHBURN_1 region would be https://nosql.us-ashburn-1.oci.oraclecloud.com . If the Oracle NoSQL Database Cloud Service becomes available in a region not yet defined here, you may connect to that region by using its endpoint constructed by the rules above and setting it as Endpoint . For more information about Oracle Cloud Infrastructure regions see Regions and Availability Domains Fields Name Description AF_JOHANNESBURG_1 Realm: OC1, South Africa Central (Johannesburg) AP_CHIYODA_1 Realm: OC8, Japan East (Chiyoda) AP_CHUNCHEON_1 Realm: OC1, South Korea North (Chuncheon) AP_DCC_CANBERRA_1 Realm: OC10, Australia Central (Canberra) AP_DCC_GAZIPUR_1 Realm: OC15, Gazipur (Bangladesh) AP_DCC_OSAKA_1 Realm: OC25, Japan Dedicated (Osaka) AP_DCC_TOKYO_1 Realm: OC25, Japan Dedicated (Tokyo) AP_HOBSONVILLE_1 Realm: OC31, Hobsonville (New Zealand) AP_HYDERABAD_1 Realm: OC1, India South (Hyderabad) AP_IBARAKI_1 Realm: OC8, Japan (Ibaraki) Note: ukb is actually Kobe, but OCI uses it for Ibaraki AP_MELBOURNE_1 Realm: OC1, Australia Southeast (Melbourne) AP_MUMBAI_1 Realm: OC1, India West (Mumbai) AP_OSAKA_1 Realm: OC1, Japan Central (Osaka) AP_SEOUL_1 Realm: OC1, South Korea Central (Seoul) AP_SINGAPORE_1 Realm: OC1, Singapore (Singapore) AP_SINGAPORE_2 Realm: OC1, Singapore2 (Singapore) AP_SYDNEY_1 Realm: OC1, Australia East (Sydney) AP_TOKYO_1 Realm: OC1, Japan East (Tokyo) CA_MONTREAL_1 Realm: OC1, Canada Southeast (Montreal) CA_TORONTO_1 Realm: OC1, Canada Southeast (Toronto) EU_AMSTERDAM_1 Realm: OC1, Netherlands Northwest (Amsterdam) EU_DCC_DUBLIN_1 Realm: OC14, Ireland (Dublin 1) EU_DCC_DUBLIN_2 Realm: OC14, Ireland (Dublin 2) EU_DCC_MILAN_1 Realm: OC14, Italy (Milan 1) EU_DCC_MILAN_2 Realm: OC14, Italy (Milan 2) EU_DCC_RATING_1 Realm: OC14, Germany (Rating 1) EU_DCC_RATING_2 Realm: OC14, Germany (Rating 2) EU_DCC_ROME_1 Realm: OC22, Italy Dedicated (Rome) EU_DCC_ZURICH_1 Realm: OC24, Switzerland Dedicated (Zurich) EU_FRANKFURT_1 Realm: OC1, Germany Central (Frankfurt) EU_FRANKFURT_2 Realm: OC19, Germany (Frankfurt) EU_JOVANOVAC_1 Realm: OC20, Serbia EU_MADRID_1 Realm: OC1, Spain (Madrid) EU_MADRID_2 Realm: OC19, Spain (Madrid) EU_MARSEILLE_1 Realm: OC1, France South (Marseille) EU_MILAN_1 Realm: OC1, Italy (Milan) EU_PARIS_1 Realm: OC1, France (Paris) EU_STOCKHOLM_1 Realm: OC1, Sweden Central (Stockholm) EU_ZURICH_1 Realm: OC1, Switzerland North (Zurich) IL_JERUSALEM_1 Realm: OC1, Israel (Jerusalem) ME_ABUDHABI_1 Realm: OC1, UAE Central (Abu Dhabi) ME_ABUDHABI_3 Realm: OC26, Abudhabi ME_DCC_DOHA_1 Realm: OC21, Qatar ME_DCC_MUSCAT_1 Realm: OC9, Oman (Muscat) ME_DUBAI_1 Realm: OC1, UAE East (Dubai) ME_JEDDAH_1 Realm: OC1, Saudi Arabia West (Jeddah) MX_MONTERREY_1 Realm: OC1, Mexico (Monterrey) MX_QUERETARO_1 Realm: OC1, Mexico (Queretari) SA_BOGOTA_1 Realm: OC1, Columbia (Bogota) SA_SANTIAGO_1 Realm: OC1, Chile (Santiago) SA_SAOPAULO_1 Realm: OC1, Brazil East (Sao Paulo) SA_VALPARAISO_1 Realm: OC1, Chile (Valparaiso) SA_VINHEDO_1 Realm: OC1, Brazil (Vinhedo) UK_CARDIFF_1 Realm: OC1, UK West (Newport) UK_GOV_CARDIFF_1 Realm: OC4, UK Gov (Cardiff) UK_GOV_LONDON_1 Realm: OC4, UK Gov South (London) UK_LONDON_1 Realm: OC1, UK South (London) US_ASHBURN_1 Realm: OC1, US East (Ashburn) US_CHICAGO_1 Realm: OC1, US Central (Chicago) US_DCC_PHOENIX_1 Realm: OC17, US West (Phoenix 1) US_DCC_PHOENIX_2 Realm: OC17, US West (Phoenix 2) US_DCC_PHOENIX_4 Realm: OC17, US West (Phoenix) US_DCC_SWJORDAN_1 Realm: OC27, SWJordan (Utah) US_DCC_SWJORDAN_2 Realm: OC28, SWJordan (Utah) US_GOV_ASHBURN_1 Realm: OC3, US DoD East (Ashburn) US_GOV_CHICAGO_1 Realm: OC3, US DoD North (Chicago) US_GOV_PHOENIX_1 Realm: OC3, US DoD West (Phoenix) US_LANGLEY_1 Realm: OC2, US Gov East (Ashburn) US_LUKE_1 Realm: OC2, US Gov West (Phoenix) US_PHOENIX_1 Realm: OC1, US West (Phoenix) US_SALTLAKE_2 Realm: OC1, US West (Salt Lake) US_SANJOSE_1 Realm: OC1, US West (San Jose) US_TACOMA_1 Realm: OC5, US West (Tacoma) US_WESTJORDAN_1 Realm: OC16, US Midwest (Utah) Properties Name Description Endpoint Gets the region endpoint. RegionCode Gets the region code. RegionId Gets the region id. SecondLevelDomain Get the region second level domain. Values Returns the collection of all regions defined in this class. Methods Name Description FromRegionCodeOrId(String) Returns the region associated with the specified region code or region id. FromRegionId(String) Returns the region associated with the specified region id. ToString() Converts the value of this instance to string."
  },
  "api/Oracle.NoSQL.SDK.Region.IL_JERUSALEM_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.IL_JERUSALEM_1.html",
    "title": "Field IL_JERUSALEM_1 | NoSQL SDK for .NET",
    "keywords": "Field IL_JERUSALEM_1 Realm: OC1, Israel (Jerusalem) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region IL_JERUSALEM_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_ABUDHABI_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_ABUDHABI_1.html",
    "title": "Field ME_ABUDHABI_1 | NoSQL SDK for .NET",
    "keywords": "Field ME_ABUDHABI_1 Realm: OC1, UAE Central (Abu Dhabi) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_ABUDHABI_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_ABUDHABI_3.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_ABUDHABI_3.html",
    "title": "Field ME_ABUDHABI_3 | NoSQL SDK for .NET",
    "keywords": "Field ME_ABUDHABI_3 Realm: OC26, Abudhabi Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_ABUDHABI_3 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_DCC_DOHA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_DCC_DOHA_1.html",
    "title": "Field ME_DCC_DOHA_1 | NoSQL SDK for .NET",
    "keywords": "Field ME_DCC_DOHA_1 Realm: OC21, Qatar Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_DCC_DOHA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_DCC_MUSCAT_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_DCC_MUSCAT_1.html",
    "title": "Field ME_DCC_MUSCAT_1 | NoSQL SDK for .NET",
    "keywords": "Field ME_DCC_MUSCAT_1 Realm: OC9, Oman (Muscat) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_DCC_MUSCAT_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_DUBAI_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_DUBAI_1.html",
    "title": "Field ME_DUBAI_1 | NoSQL SDK for .NET",
    "keywords": "Field ME_DUBAI_1 Realm: OC1, UAE East (Dubai) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_DUBAI_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.ME_JEDDAH_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ME_JEDDAH_1.html",
    "title": "Field ME_JEDDAH_1 | NoSQL SDK for .NET",
    "keywords": "Field ME_JEDDAH_1 Realm: OC1, Saudi Arabia West (Jeddah) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region ME_JEDDAH_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.MX_MONTERREY_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.MX_MONTERREY_1.html",
    "title": "Field MX_MONTERREY_1 | NoSQL SDK for .NET",
    "keywords": "Field MX_MONTERREY_1 Realm: OC1, Mexico (Monterrey) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region MX_MONTERREY_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.MX_QUERETARO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.MX_QUERETARO_1.html",
    "title": "Field MX_QUERETARO_1 | NoSQL SDK for .NET",
    "keywords": "Field MX_QUERETARO_1 Realm: OC1, Mexico (Queretari) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region MX_QUERETARO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.RegionCode.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.RegionCode.html",
    "title": "Property RegionCode | NoSQL SDK for .NET",
    "keywords": "Property RegionCode RegionCode Gets the region code. Declaration public string RegionCode { get; } Property Value Type Description String Region code (which may also be referred to as region key), which is a 3-letter identifier for each region. Note that the this value is in lower case."
  },
  "api/Oracle.NoSQL.SDK.Region.RegionId.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.RegionId.html",
    "title": "Property RegionId | NoSQL SDK for .NET",
    "keywords": "Property RegionId RegionId Gets the region id. Declaration public string RegionId { get; } Property Value Type Description String The region id as described in the Region remarks section."
  },
  "api/Oracle.NoSQL.SDK.Region.SA_BOGOTA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SA_BOGOTA_1.html",
    "title": "Field SA_BOGOTA_1 | NoSQL SDK for .NET",
    "keywords": "Field SA_BOGOTA_1 Realm: OC1, Columbia (Bogota) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region SA_BOGOTA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.SA_SANTIAGO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SA_SANTIAGO_1.html",
    "title": "Field SA_SANTIAGO_1 | NoSQL SDK for .NET",
    "keywords": "Field SA_SANTIAGO_1 Realm: OC1, Chile (Santiago) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region SA_SANTIAGO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.SA_SAOPAULO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SA_SAOPAULO_1.html",
    "title": "Field SA_SAOPAULO_1 | NoSQL SDK for .NET",
    "keywords": "Field SA_SAOPAULO_1 Realm: OC1, Brazil East (Sao Paulo) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region SA_SAOPAULO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.SA_VALPARAISO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SA_VALPARAISO_1.html",
    "title": "Field SA_VALPARAISO_1 | NoSQL SDK for .NET",
    "keywords": "Field SA_VALPARAISO_1 Realm: OC1, Chile (Valparaiso) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region SA_VALPARAISO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.SA_VINHEDO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SA_VINHEDO_1.html",
    "title": "Field SA_VINHEDO_1 | NoSQL SDK for .NET",
    "keywords": "Field SA_VINHEDO_1 Realm: OC1, Brazil (Vinhedo) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region SA_VINHEDO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.SecondLevelDomain.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.SecondLevelDomain.html",
    "title": "Property SecondLevelDomain | NoSQL SDK for .NET",
    "keywords": "Property SecondLevelDomain SecondLevelDomain Get the region second level domain. Declaration public string SecondLevelDomain { get; } Property Value Type Description String The second level domain as described in the Region remarks section."
  },
  "api/Oracle.NoSQL.SDK.Region.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Converts the value of this instance to string. Declaration public override string ToString() Returns Type Description String The region id."
  },
  "api/Oracle.NoSQL.SDK.Region.UK_CARDIFF_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.UK_CARDIFF_1.html",
    "title": "Field UK_CARDIFF_1 | NoSQL SDK for .NET",
    "keywords": "Field UK_CARDIFF_1 Realm: OC1, UK West (Newport) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region UK_CARDIFF_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.UK_GOV_CARDIFF_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.UK_GOV_CARDIFF_1.html",
    "title": "Field UK_GOV_CARDIFF_1 | NoSQL SDK for .NET",
    "keywords": "Field UK_GOV_CARDIFF_1 Realm: OC4, UK Gov (Cardiff) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region UK_GOV_CARDIFF_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.UK_GOV_LONDON_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.UK_GOV_LONDON_1.html",
    "title": "Field UK_GOV_LONDON_1 | NoSQL SDK for .NET",
    "keywords": "Field UK_GOV_LONDON_1 Realm: OC4, UK Gov South (London) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region UK_GOV_LONDON_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.UK_LONDON_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.UK_LONDON_1.html",
    "title": "Field UK_LONDON_1 | NoSQL SDK for .NET",
    "keywords": "Field UK_LONDON_1 Realm: OC1, UK South (London) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region UK_LONDON_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_ASHBURN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_ASHBURN_1.html",
    "title": "Field US_ASHBURN_1 | NoSQL SDK for .NET",
    "keywords": "Field US_ASHBURN_1 Realm: OC1, US East (Ashburn) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_ASHBURN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_CHICAGO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_CHICAGO_1.html",
    "title": "Field US_CHICAGO_1 | NoSQL SDK for .NET",
    "keywords": "Field US_CHICAGO_1 Realm: OC1, US Central (Chicago) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_CHICAGO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_1.html",
    "title": "Field US_DCC_PHOENIX_1 | NoSQL SDK for .NET",
    "keywords": "Field US_DCC_PHOENIX_1 Realm: OC17, US West (Phoenix 1) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_DCC_PHOENIX_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_2.html",
    "title": "Field US_DCC_PHOENIX_2 | NoSQL SDK for .NET",
    "keywords": "Field US_DCC_PHOENIX_2 Realm: OC17, US West (Phoenix 2) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_DCC_PHOENIX_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_4.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_DCC_PHOENIX_4.html",
    "title": "Field US_DCC_PHOENIX_4 | NoSQL SDK for .NET",
    "keywords": "Field US_DCC_PHOENIX_4 Realm: OC17, US West (Phoenix) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_DCC_PHOENIX_4 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_DCC_SWJORDAN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_DCC_SWJORDAN_1.html",
    "title": "Field US_DCC_SWJORDAN_1 | NoSQL SDK for .NET",
    "keywords": "Field US_DCC_SWJORDAN_1 Realm: OC27, SWJordan (Utah) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_DCC_SWJORDAN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_DCC_SWJORDAN_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_DCC_SWJORDAN_2.html",
    "title": "Field US_DCC_SWJORDAN_2 | NoSQL SDK for .NET",
    "keywords": "Field US_DCC_SWJORDAN_2 Realm: OC28, SWJordan (Utah) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_DCC_SWJORDAN_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_GOV_ASHBURN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_GOV_ASHBURN_1.html",
    "title": "Field US_GOV_ASHBURN_1 | NoSQL SDK for .NET",
    "keywords": "Field US_GOV_ASHBURN_1 Realm: OC3, US DoD East (Ashburn) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_GOV_ASHBURN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_GOV_CHICAGO_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_GOV_CHICAGO_1.html",
    "title": "Field US_GOV_CHICAGO_1 | NoSQL SDK for .NET",
    "keywords": "Field US_GOV_CHICAGO_1 Realm: OC3, US DoD North (Chicago) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_GOV_CHICAGO_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_GOV_PHOENIX_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_GOV_PHOENIX_1.html",
    "title": "Field US_GOV_PHOENIX_1 | NoSQL SDK for .NET",
    "keywords": "Field US_GOV_PHOENIX_1 Realm: OC3, US DoD West (Phoenix) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_GOV_PHOENIX_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_LANGLEY_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_LANGLEY_1.html",
    "title": "Field US_LANGLEY_1 | NoSQL SDK for .NET",
    "keywords": "Field US_LANGLEY_1 Realm: OC2, US Gov East (Ashburn) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_LANGLEY_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_LUKE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_LUKE_1.html",
    "title": "Field US_LUKE_1 | NoSQL SDK for .NET",
    "keywords": "Field US_LUKE_1 Realm: OC2, US Gov West (Phoenix) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_LUKE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_PHOENIX_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_PHOENIX_1.html",
    "title": "Field US_PHOENIX_1 | NoSQL SDK for .NET",
    "keywords": "Field US_PHOENIX_1 Realm: OC1, US West (Phoenix) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_PHOENIX_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_SALTLAKE_2.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_SALTLAKE_2.html",
    "title": "Field US_SALTLAKE_2 | NoSQL SDK for .NET",
    "keywords": "Field US_SALTLAKE_2 Realm: OC1, US West (Salt Lake) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_SALTLAKE_2 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_SANJOSE_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_SANJOSE_1.html",
    "title": "Field US_SANJOSE_1 | NoSQL SDK for .NET",
    "keywords": "Field US_SANJOSE_1 Realm: OC1, US West (San Jose) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_SANJOSE_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_TACOMA_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_TACOMA_1.html",
    "title": "Field US_TACOMA_1 | NoSQL SDK for .NET",
    "keywords": "Field US_TACOMA_1 Realm: OC5, US West (Tacoma) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_TACOMA_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.US_WESTJORDAN_1.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.US_WESTJORDAN_1.html",
    "title": "Field US_WESTJORDAN_1 | NoSQL SDK for .NET",
    "keywords": "Field US_WESTJORDAN_1 Realm: OC16, US Midwest (Utah) Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly Region US_WESTJORDAN_1 Returns Type Description Region"
  },
  "api/Oracle.NoSQL.SDK.Region.Values.html": {
    "href": "api/Oracle.NoSQL.SDK.Region.Values.html",
    "title": "Property Values | NoSQL SDK for .NET",
    "keywords": "Property Values Values Returns the collection of all regions defined in this class. Declaration public static IReadOnlyCollection<Region> Values { get; } Property Value Type Description IReadOnlyCollection < Region > All regions defined in this class as a read-only collection."
  },
  "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.All.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.All.html",
    "title": "Field All | NoSQL SDK for .NET",
    "keywords": "Field All All replicas must acknowledge that they have committed the transaction. This policy should be selected only if your replication group has a small number of replicas, and those replicas are on extremely reliable networks and servers. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ReplicaAckPolicy All Returns Type Description ReplicaAckPolicy"
  },
  "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.html",
    "title": "Class ReplicaAckPolicy | NoSQL SDK for .NET",
    "keywords": "Class ReplicaAckPolicy On-Premise only. ReplicaAckPolicy defines the policy for how commits are handled in a replicated environment. Inheritance Object ReplicaAckPolicy Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class ReplicaAckPolicy : Enum Remarks A replicated environment makes it possible to increase an application's transaction commit guarantees by committing changes to its replicas on the network. ReplicaAckPolicy defines the policy for how such network commits are handled. Fields Name Description All All replicas must acknowledge that they have committed the transaction. This policy should be selected only if your replication group has a small number of replicas, and those replicas are on extremely reliable networks and servers. None No transaction commit acknowledgments are required and the master will never wait for replica acknowledgments. In this case, transaction durability is determined entirely by the type of commit that is being performed on the master. SimpleMajority A simple majority of replicas must acknowledge that they have committed the transaction. This acknowledgment policy, in conjunction with an election policy which requires at least a simple majority, ensures that the changes made by the transaction remain durable if a new election is held. value__ See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.None.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.None.html",
    "title": "Field None | NoSQL SDK for .NET",
    "keywords": "Field None No transaction commit acknowledgments are required and the master will never wait for replica acknowledgments. In this case, transaction durability is determined entirely by the type of commit that is being performed on the master. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ReplicaAckPolicy None Returns Type Description ReplicaAckPolicy"
  },
  "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.SimpleMajority.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.SimpleMajority.html",
    "title": "Field SimpleMajority | NoSQL SDK for .NET",
    "keywords": "Field SimpleMajority A simple majority of replicas must acknowledge that they have committed the transaction. This acknowledgment policy, in conjunction with an election policy which requires at least a simple majority, ensures that the changes made by the transaction remain durable if a new election is held. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ReplicaAckPolicy SimpleMajority Returns Type Description ReplicaAckPolicy"
  },
  "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaAckPolicy.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.CapacityMode.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.CapacityMode.html",
    "title": "Property CapacityMode | NoSQL SDK for .NET",
    "keywords": "Property CapacityMode CapacityMode Gets the capacity mode of the replica table. Declaration public CapacityMode CapacityMode { get; } Property Value Type Description CapacityMode Capacity mode of the replica table. Remarks Capacity mode may be set separately for each replica. See Also CapacityMode"
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.html",
    "title": "Class ReplicaInfo | NoSQL SDK for .NET",
    "keywords": "Class ReplicaInfo Cloud Service only. Represents information about a single remote replica of a Global Active table. Inheritance Object ReplicaInfo Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ReplicaInfo : Object Remarks For more information, see Global Active Tables in NDCS . You can retrieve information about table replicas from any method that returns TableResult (such as GetTableAsync , AddReplicaAsync , etc.) via Replicas property. Properties Name Description CapacityMode Gets the capacity mode of the replica table. Region Gets the region of the replica, if given Region is known in the SDK. ReplicaName Gets the name of the replica. ReplicaOCID Gets the OCID of the replica table. TableState Gets the operational state of the replica table. WriteUnits Gets the write units of the replica table. See Also Replicas"
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.Region.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.Region.html",
    "title": "Property Region | NoSQL SDK for .NET",
    "keywords": "Property Region Region Gets the region of the replica, if given Region is known in the SDK. Declaration public Region Region { get; } Property Value Type Description Region Region of the replica, or null if given Region value is not defined."
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.ReplicaName.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.ReplicaName.html",
    "title": "Property ReplicaName | NoSQL SDK for .NET",
    "keywords": "Property ReplicaName ReplicaName Gets the name of the replica. Declaration public string ReplicaName { get; } Property Value Type Description String Name of the replica. This is the same as a region id (see RegionId ) of the replica's region."
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.ReplicaOCID.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.ReplicaOCID.html",
    "title": "Property ReplicaOCID | NoSQL SDK for .NET",
    "keywords": "Property ReplicaOCID ReplicaOCID Gets the OCID of the replica table. Declaration public string ReplicaOCID { get; } Property Value Type Description String OCID of the replica table."
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.TableState.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.TableState.html",
    "title": "Property TableState | NoSQL SDK for .NET",
    "keywords": "Property TableState TableState Gets the operational state of the replica table. Declaration public TableState TableState { get; } Property Value Type Description TableState Table state of the replica table. Remarks Note that replica initialization process (see IsLocalReplicaInitialized ) does not affect the replica table state (it will still be Active ). See Also TableState"
  },
  "api/Oracle.NoSQL.SDK.ReplicaInfo.WriteUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaInfo.WriteUnits.html",
    "title": "Property WriteUnits | NoSQL SDK for .NET",
    "keywords": "Property WriteUnits WriteUnits Gets the write units of the replica table. Declaration public int WriteUnits { get; } Property Value Type Description Int32 Write units of the replica table. Remarks From the standpoint of the local table, write units of the replica table define the maximum throughput used for replicating writes from the replica to the local table. This throughput adds to the total write throughput of the local table. If the replica has capacity mode OnDemand , system-configured limits will be used. Note that reads are done locally so the read units of the replica table do not affect the read throughput of the local table. Both write and read units can be set separately for each replica. See Also WriteUnits"
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.CollectionTime.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.CollectionTime.html",
    "title": "Property CollectionTime | NoSQL SDK for .NET",
    "keywords": "Property CollectionTime CollectionTime Gets the time the replica stats collection was performed. Declaration public DateTime CollectionTime { get; } Property Value Type Description DateTime Collection time."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.html",
    "title": "Class ReplicaStatsRecord | NoSQL SDK for .NET",
    "keywords": "Class ReplicaStatsRecord Cloud Service only. Instances of this class contain information about replica lag for a specific replica. Inheritance Object ReplicaStatsRecord Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ReplicaStatsRecord : Object Remarks Replica lag is a measure of how current this table is relative to the remote replica and indicates that this table has not yet received updates that happened within the lag period. For example, if the replica lag is 5,000 milliseconds (5 seconds), then this table will have all updates that occurred at the remote replica that are more than 5 seconds old. Replica lag is calculated based on how long it took for the latest operation from the table at the remote replica to be replayed at this table. If there have been no application writes for the table at the remote replica, the service uses other mechanisms to calculate an approximation of the lag, and the lag statistic will still be available. Fields Name Description UnknownLag Value representing unknown replica lag. Properties Name Description CollectionTime Gets the time the replica stats collection was performed. ReplicaLag Gets the replica lag collected at the specified time. Methods Name Description ToString() Returns a string representing this replica stats record."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.ReplicaLag.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.ReplicaLag.html",
    "title": "Property ReplicaLag | NoSQL SDK for .NET",
    "keywords": "Property ReplicaLag ReplicaLag Gets the replica lag collected at the specified time. Declaration public TimeSpan ReplicaLag { get; } Property Value Type Description TimeSpan Replica lag. In rare cases where replica lag could not be determined, negative value of -1 ms is returned (see UnknownLag )."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Returns a string representing this replica stats record. Declaration public override string ToString() Returns Type Description String A string containing property names and values of this replica stats record."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.UnknownLag.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsRecord.UnknownLag.html",
    "title": "Field UnknownLag | NoSQL SDK for .NET",
    "keywords": "Field UnknownLag Value representing unknown replica lag. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly TimeSpan UnknownLag Returns Type Description TimeSpan Value of -1 milliseconds."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsResult.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsResult.html",
    "title": "Class ReplicaStatsResult | NoSQL SDK for .NET",
    "keywords": "Class ReplicaStatsResult Cloud Service only. Result returned by GetReplicaStatsAsync . It contains replica statistics for the requested table. Inheritance Object ReplicaStatsResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ReplicaStatsResult : Object Properties Name Description NextStartTime Gets the next start time. StatsRecords Gets the replica statistics information for one or more replicas. TableName Gets the name of the table. See Also GetReplicaStatsAsync ReplicaStatsRecord"
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsResult.NextStartTime.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsResult.NextStartTime.html",
    "title": "Property NextStartTime | NoSQL SDK for .NET",
    "keywords": "Property NextStartTime NextStartTime Gets the next start time. Declaration public DateTime NextStartTime { get; } Property Value Type Description DateTime Start time to use for next call to GetReplicaStatsAsync . Remarks This can be used when retrieving large number of replica stats records over multiple calls to GetReplicaStatsAsync . Pass this value as StartTime on the subsequent call to GetReplicaStatsAsync ."
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsResult.StatsRecords.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsResult.StatsRecords.html",
    "title": "Property StatsRecords | NoSQL SDK for .NET",
    "keywords": "Property StatsRecords StatsRecords Gets the replica statistics information for one or more replicas. Declaration public IReadOnlyDictionary<string, IReadOnlyList<ReplicaStatsRecord>> StatsRecords { get; } Property Value Type Description IReadOnlyDictionary < String , IReadOnlyList < ReplicaStatsRecord >> Replica statistics information as a dictionary with one entry per each replica for which the stats were requested/available. Remarks This value is represented as a dictionary with keys being region id (see RegionId ) of a replica and values being a list of ReplicaStatsRecord objects for that replica. If you passed region as parameter to one of GetReplicaStatsAsync methods, this dictionary will contain only one key-value pair for the given region. Note that in either case this object will contain only keys for which there is at least one ReplicaStatsRecord returned (it will not contain keys for regions for which no stats records were found according to parameters specified in GetReplicaStatsOptions or applicable defaults). Examples Print replica lag info for EU_ZURICH_1 region. var statsRecords = statsResult.StatsRecords[\"eu-zurich-1\"]; foreach(var statsRecord in statsRecords) { Console.WriteLine(statsRecord); $\"Replica lag: {statsRecord.ReplicaLag}, \" + $\"collected at {statsRecord.CollectionTime}\"); } See Also GetReplicaStatsOptions"
  },
  "api/Oracle.NoSQL.SDK.ReplicaStatsResult.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.ReplicaStatsResult.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the name of the table. Declaration public string TableName { get; } Property Value Type Description String Table name."
  },
  "api/Oracle.NoSQL.SDK.Request.Exceptions.html": {
    "href": "api/Oracle.NoSQL.SDK.Request.Exceptions.html",
    "title": "Property Exceptions | NoSQL SDK for .NET",
    "keywords": "Property Exceptions Exceptions Gets the list of exceptions that occurred while retrying the operation. Declaration public IReadOnlyList<Exception> Exceptions { get; } Property Value Type Description IReadOnlyList < Exception > The list of exceptions occurred during the operation retries. Remarks This only includes retries performed by the driver using the configured retry handler (not the retries performed manually by the application). Some duplicate exceptions may be eliminated from this list, so the size of this list does not always indicate the number of retries. For the number of retries, use RetryCount ."
  },
  "api/Oracle.NoSQL.SDK.Request.html": {
    "href": "api/Oracle.NoSQL.SDK.Request.html",
    "title": "Class Request | NoSQL SDK for .NET",
    "keywords": "Class Request A base class for the requests classes that represent information about operations issued by NoSQLClient APIs. Inheritance Object Request AdminRequest AdminStatusRequest ListTablesRequest QueryRequestBase RequestWithTable WriteManyRequest Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class Request : Object Remarks The subclasses of this class describe operations issued by methods of NoSQLClient . From an application perspective, these classes are only used to provide information about an operation such as the type of operation (as indicated by the particular subclass), arguments passed, number of retry attempts, etc. In general, the Request classes are for advanced usage and most applications don't need to use them. They could be used in the following cases: When a NoSQLException (or its subclass) is thrown, Request provides additional information about an operation that caused the exception. If you create your own retry handler by implementing IRetryHandler interface, ShouldRetry(Request) and GetRetryDelay(Request) take a Request object describing the operation as an argument that allows you to customize the retry behavior based on the operation. If you create your own authorization provider by implementing IAuthorizationProvider or extending AuthorizationStringProvider , ApplyAuthorizationAsync(Request, HttpRequestMessage, CancellationToken) and GetAuthorizationStringAsync(Request, CancellationToken) take a Request object describing the operation as an argument that allows you to customize authorization implementation based on the operation if needed. Properties Name Description Exceptions Gets the list of exceptions that occurred while retrying the operation. LastException Gets the last exception that occurred while retrying the operation or during its original invocation. PriorException Gets the prior to last exception that occurred while retrying the operation. RetryCount Gets the number of times the operation has been retried."
  },
  "api/Oracle.NoSQL.SDK.Request.LastException.html": {
    "href": "api/Oracle.NoSQL.SDK.Request.LastException.html",
    "title": "Property LastException | NoSQL SDK for .NET",
    "keywords": "Property LastException LastException Gets the last exception that occurred while retrying the operation or during its original invocation. Declaration public Exception LastException { get; } Property Value Type Description Exception The last exception in the Exceptions list if the list is not empty, otherwise null . See Also Exceptions"
  },
  "api/Oracle.NoSQL.SDK.Request.PriorException.html": {
    "href": "api/Oracle.NoSQL.SDK.Request.PriorException.html",
    "title": "Property PriorException | NoSQL SDK for .NET",
    "keywords": "Property PriorException PriorException Gets the prior to last exception that occurred while retrying the operation. Declaration public Exception PriorException { get; } Property Value Type Description Exception The prior to last exception in the Exceptions list if the list has at least two exceptions, otherwise null . See Also Exceptions"
  },
  "api/Oracle.NoSQL.SDK.Request.RetryCount.html": {
    "href": "api/Oracle.NoSQL.SDK.Request.RetryCount.html",
    "title": "Property RetryCount | NoSQL SDK for .NET",
    "keywords": "Property RetryCount RetryCount Gets the number of times the operation has been retried. Declaration public int RetryCount { get; } Property Value Type Description Int32 The number of retries performed, including the original try. Remarks This only includes retries performed by the driver using the configured retry handler (not the retries performed manually by the application). See Also RetryHandler"
  },
  "api/Oracle.NoSQL.SDK.RequestSizeLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.RequestSizeLimitException.-ctor.html",
    "title": "Constructor RequestSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor RequestSizeLimitException RequestSizeLimitException() Initializes a new instance of RequestSizeLimitException . Declaration public RequestSizeLimitException() RequestSizeLimitException(String) Initializes a new instance of RequestSizeLimitException with the message that describes the current exception. Declaration public RequestSizeLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. RequestSizeLimitException(String, Exception) Initializes a new instance of RequestSizeLimitException with the message that describes the current exception and an inner exception. Declaration public RequestSizeLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.RequestSizeLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.RequestSizeLimitException.html",
    "title": "Class RequestSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Class RequestSizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when the size of a request exceeds the system defined limit. Inheritance Object NoSQLException RequestSizeLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class RequestSizeLimitException : NoSQLException Constructors Name Description RequestSizeLimitException() Initializes a new instance of RequestSizeLimitException . RequestSizeLimitException(String) Initializes a new instance of RequestSizeLimitException with the message that describes the current exception. RequestSizeLimitException(String, Exception) Initializes a new instance of RequestSizeLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.RequestWithTable.html": {
    "href": "api/Oracle.NoSQL.SDK.RequestWithTable.html",
    "title": "Class RequestWithTable | NoSQL SDK for .NET",
    "keywords": "Class RequestWithTable Base class for information about all operations on a specific table. Inheritance Object Request RequestWithTable DeleteRangeRequest GetIndexesRequest GetReplicaStatsRequest GetTableRequest GetTableUsageRequest ReadRequest TableOperationRequest WriteRequest Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class RequestWithTable : Request Properties Name Description TableName Gets the name of the table, if available for the request. See Also Request"
  },
  "api/Oracle.NoSQL.SDK.RequestWithTable.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.RequestWithTable.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the name of the table, if available for the request. Declaration public string TableName { get; } Property Value Type Description String Table name if available, otherwise null . Remarks This value is null for instances of TableDDLRequest (but not its subclasses) that represent DDL operation as SQL statement (see Statement )."
  },
  "api/Oracle.NoSQL.SDK.ResourceExistsException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ResourceExistsException.-ctor.html",
    "title": "Constructor ResourceExistsException | NoSQL SDK for .NET",
    "keywords": "Constructor ResourceExistsException ResourceExistsException() Initializes a new instance of ResourceExistsException . Declaration public ResourceExistsException() ResourceExistsException(String) Initializes a new instance of ResourceExistsException with the message that describes the current exception. Declaration public ResourceExistsException(string message) Parameters Type Name Description String message A message that describes the current exception. ResourceExistsException(String, Exception) Initializes a new instance of ResourceExistsException with the message that describes the current exception and an inner exception. Declaration public ResourceExistsException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ResourceExistsException.html": {
    "href": "api/Oracle.NoSQL.SDK.ResourceExistsException.html",
    "title": "Class ResourceExistsException | NoSQL SDK for .NET",
    "keywords": "Class ResourceExistsException The exception that is thrown when an operation attempted to create a resource that already exists. Inheritance Object NoSQLException ResourceExistsException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ResourceExistsException : NoSQLException Constructors Name Description ResourceExistsException() Initializes a new instance of ResourceExistsException . ResourceExistsException(String) Initializes a new instance of ResourceExistsException with the message that describes the current exception. ResourceExistsException(String, Exception) Initializes a new instance of ResourceExistsException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.ResourceNotFoundException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ResourceNotFoundException.-ctor.html",
    "title": "Constructor ResourceNotFoundException | NoSQL SDK for .NET",
    "keywords": "Constructor ResourceNotFoundException ResourceNotFoundException() Initializes a new instance of ResourceNotFoundException . Declaration public ResourceNotFoundException() ResourceNotFoundException(String) Initializes a new instance of ResourceNotFoundException with the message that describes the current exception. Declaration public ResourceNotFoundException(string message) Parameters Type Name Description String message A message that describes the current exception. ResourceNotFoundException(String, Exception) Initializes a new instance of ResourceNotFoundException with the message that describes the current exception and an inner exception. Declaration public ResourceNotFoundException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ResourceNotFoundException.html": {
    "href": "api/Oracle.NoSQL.SDK.ResourceNotFoundException.html",
    "title": "Class ResourceNotFoundException | NoSQL SDK for .NET",
    "keywords": "Class ResourceNotFoundException The exception that is thrown when an operation attempted to access a resource that does not exist or is not in a visible state. Inheritance Object NoSQLException ResourceNotFoundException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ResourceNotFoundException : NoSQLException Constructors Name Description ResourceNotFoundException() Initializes a new instance of ResourceNotFoundException . ResourceNotFoundException(String) Initializes a new instance of ResourceNotFoundException with the message that describes the current exception. ResourceNotFoundException(String, Exception) Initializes a new instance of ResourceNotFoundException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.RetryableException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.RetryableException.-ctor.html",
    "title": "Constructor RetryableException | NoSQL SDK for .NET",
    "keywords": "Constructor RetryableException RetryableException() Initializes a new instance of RetryableException . Declaration protected RetryableException() RetryableException(String) Initializes a new instance of RetryableException with the message that describes the current exception. Declaration protected RetryableException(string message) Parameters Type Name Description String message A message that describes the current exception. RetryableException(String, Exception) Initializes a new instance of RetryableException with the message that describes the current exception and an inner exception. Declaration protected RetryableException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.RetryableException.html": {
    "href": "api/Oracle.NoSQL.SDK.RetryableException.html",
    "title": "Class RetryableException | NoSQL SDK for .NET",
    "keywords": "Class RetryableException Base class for all exceptions that may be retried with a reasonable expectation that the retry may succeed. Inheritance Object NoSQLException RetryableException ControlOperationThrottlingException InvalidAuthorizationException ReadThrottlingException SecurityInfoNotReadyException ServerException ServiceUnavailableException TableBusyException TableNotReadyException WriteThrottlingException Inherited Members NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class RetryableException : NoSQLException Constructors Name Description RetryableException() Initializes a new instance of RetryableException . RetryableException(String) Initializes a new instance of RetryableException with the message that describes the current exception. RetryableException(String, Exception) Initializes a new instance of RetryableException with the message that describes the current exception and an inner exception. Properties Name Description IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. See Also IsRetryable"
  },
  "api/Oracle.NoSQL.SDK.RetryableException.IsRetryable.html": {
    "href": "api/Oracle.NoSQL.SDK.RetryableException.IsRetryable.html",
    "title": "Property IsRetryable | NoSQL SDK for .NET",
    "keywords": "Property IsRetryable IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. Declaration public override bool IsRetryable { get; } Property Value Type Description Boolean For instances of RetryableException this value is always true . Overrides NoSQLException.IsRetryable"
  },
  "api/Oracle.NoSQL.SDK.RowSizeLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.RowSizeLimitException.-ctor.html",
    "title": "Constructor RowSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor RowSizeLimitException RowSizeLimitException() Initializes a new instance of RowSizeLimitException . Declaration public RowSizeLimitException() RowSizeLimitException(String) Initializes a new instance of RowSizeLimitException with the message that describes the current exception. Declaration public RowSizeLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. RowSizeLimitException(String, Exception) Initializes a new instance of RowSizeLimitException with the message that describes the current exception and an inner exception. Declaration public RowSizeLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.RowSizeLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.RowSizeLimitException.html",
    "title": "Class RowSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Class RowSizeLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an has been made to create a row with a size that exceeds the system defined limit. Inheritance Object NoSQLException RowSizeLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class RowSizeLimitException : NoSQLException Constructors Name Description RowSizeLimitException() Initializes a new instance of RowSizeLimitException . RowSizeLimitException(String) Initializes a new instance of RowSizeLimitException with the message that describes the current exception. RowSizeLimitException(String, Exception) Initializes a new instance of RowSizeLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.RowVersion.Bytes.html": {
    "href": "api/Oracle.NoSQL.SDK.RowVersion.Bytes.html",
    "title": "Property Bytes | NoSQL SDK for .NET",
    "keywords": "Property Bytes Bytes Gets the version contents as byte array. Declaration public byte[] Bytes { get; } Property Value Type Description Byte [] The byte[] contents of this instance. Remarks This can be used to pass the version to a query via row_version SQL function, as shown in the example. Examples Passing row version as a byte array to a query. var preparedStatement = await client.PrepareAsync( @\"UPDATE MyTable $t SET NAME = 'John' WHERE id = ? AND row_version($t) = ?\"); preparedStatement.SetVariable(1, 10); preparedStatement.SetVariable(2, rowVersion.Bytes); var queryResult = await client.QueryAsync(preparedStatement);"
  },
  "api/Oracle.NoSQL.SDK.RowVersion.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.RowVersion.-ctor.html",
    "title": "Constructor RowVersion | NoSQL SDK for .NET",
    "keywords": "Constructor RowVersion RowVersion(Byte[]) Initializes new instance of RowVersion with the specified byte[] value. Declaration public RowVersion(byte[] value) Parameters Type Name Description Byte [] value The value of the contents of this version. Remarks This constructor can be used to create row version from a byte[] that was obtained from a query using row_version SQL function, as shown in the example. Examples Obtaining row version from a query and using it in PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) . var queryResult = await client.QueryAsync( \"SELECT row_version($t) AS version FROM MyTable $t WHERE id = 1\"); if (queryResult.Rows.Count != 0) { var rowVersion = new RowVersion(queryResult.Rows[0][\"version\"]); var newRow = new MapValue { [\"id\"] = 1, [\"name\"] = \"Jane\" }; var putResult = await client.PutIfVersionAsync(\"MyTable\", newRow, rowVersion); } Exceptions Type Condition ArgumentNullException If value is null ."
  },
  "api/Oracle.NoSQL.SDK.RowVersion.Encoded.html": {
    "href": "api/Oracle.NoSQL.SDK.RowVersion.Encoded.html",
    "title": "Property Encoded | NoSQL SDK for .NET",
    "keywords": "Property Encoded Encoded Gets the contents of this version encoded as Base64 string. Declaration public string Encoded { get; } Property Value Type Description String string representing Base64-encoded contents of this instance."
  },
  "api/Oracle.NoSQL.SDK.RowVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.RowVersion.html",
    "title": "Class RowVersion | NoSQL SDK for .NET",
    "keywords": "Class RowVersion Represents the version of a row in the database. Inheritance Object RowVersion Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class RowVersion : Object Remarks RowVersion represents the version of a row in the database. The version is returned by successful GetAsync(String, MapValue, GetOptions, CancellationToken) operation and can be used by PutIfVersionAsync(String, MapValue, RowVersion, PutOptions, CancellationToken) , DeleteIfVersionAsync(String, MapValue, RowVersion, DeleteOptions, CancellationToken) and WriteManyAsync APIs to conditionally perform those operations to ensure an atomic read-modify-write cycle. This is an opaque object from an application perspective. Using RowVersion in this way adds cost to operations so it should be done only if necessary. Examples Using RowVersion for a conditional Put operation. var row = new MapValue { [\"id\"] = 1000, [\"name\"] = \"John\" }; var result = await client.PutAsync(\"myTable\", row); var version = result.Version; // Some time later we modify the row but only if nobody has modified // it since (meaning that its version has not changed) row[\"name\"] = \"Jane\"; result = await client.PutIfVersionAsync(\"myTable\", row, version); Console.WriteLine(result.Success); Constructors Name Description RowVersion(Byte[]) Initializes new instance of RowVersion with the specified byte[] value. Properties Name Description Bytes Gets the version contents as byte array. Encoded Gets the contents of this version encoded as Base64 string. Methods Name Description ToString() Converts value of this instance to string as Base64-encoded representation of its binary contents."
  },
  "api/Oracle.NoSQL.SDK.RowVersion.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.RowVersion.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Converts value of this instance to string as Base64-encoded representation of its binary contents. Declaration public override string ToString() Returns Type Description String String representation of this instance, which is the same as the value of Encoded property. Remarks You may use the string representation of row version similar to Bytes property to pass to pass the version to a query via row_version SQL function, as shown in the example. Examples Passing row version as a string to a query. var rowVersion = getResult.Version; var queryResult = await client.QueryAsync( \"UPDATE MyTable $t SET NAME = 'John' WHERE id = 10 AND \" + $\"row_version($t) = CAST('{rowVersion}' AS Binary\");"
  },
  "api/Oracle.NoSQL.SDK.SecurityInfoNotReadyException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.SecurityInfoNotReadyException.-ctor.html",
    "title": "Constructor SecurityInfoNotReadyException | NoSQL SDK for .NET",
    "keywords": "Constructor SecurityInfoNotReadyException SecurityInfoNotReadyException() Initializes a new instance of SecurityInfoNotReadyException . Declaration public SecurityInfoNotReadyException() SecurityInfoNotReadyException(String) Initializes a new instance of SecurityInfoNotReadyException with the message that describes the current exception. Declaration public SecurityInfoNotReadyException(string message) Parameters Type Name Description String message A message that describes the current exception. SecurityInfoNotReadyException(String, Exception) Initializes a new instance of SecurityInfoNotReadyException with the message that describes the current exception and an inner exception. Declaration public SecurityInfoNotReadyException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.SecurityInfoNotReadyException.html": {
    "href": "api/Oracle.NoSQL.SDK.SecurityInfoNotReadyException.html",
    "title": "Class SecurityInfoNotReadyException | NoSQL SDK for .NET",
    "keywords": "Class SecurityInfoNotReadyException Cloud Service only. The exception that is thrown when security information is not ready in the system. Inheritance Object NoSQLException RetryableException SecurityInfoNotReadyException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class SecurityInfoNotReadyException : RetryableException Remarks This exception will occur as the system acquires security information and must be retried in order for authorization to work properly. It is automatically retried by NoSQLRetryHandler . Constructors Name Description SecurityInfoNotReadyException() Initializes a new instance of SecurityInfoNotReadyException . SecurityInfoNotReadyException(String) Initializes a new instance of SecurityInfoNotReadyException with the message that describes the current exception. SecurityInfoNotReadyException(String, Exception) Initializes a new instance of SecurityInfoNotReadyException with the message that describes the current exception and an inner exception. See Also NoSQLRetryHandler"
  },
  "api/Oracle.NoSQL.SDK.ServerException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ServerException.-ctor.html",
    "title": "Constructor ServerException | NoSQL SDK for .NET",
    "keywords": "Constructor ServerException ServerException() Initializes a new instance of ServerException . Declaration public ServerException() ServerException(String) Initializes a new instance of ServerException with the message that describes the current exception. Declaration public ServerException(string message) Parameters Type Name Description String message A message that describes the current exception. ServerException(String, Exception) Initializes a new instance of ServerException with the message that describes the current exception and an inner exception. Declaration public ServerException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ServerException.html": {
    "href": "api/Oracle.NoSQL.SDK.ServerException.html",
    "title": "Class ServerException | NoSQL SDK for .NET",
    "keywords": "Class ServerException The exception that indicates an internal service problem. Inheritance Object NoSQLException RetryableException ServerException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ServerException : RetryableException Remarks Most system problems are temporary, so this is a retryable exception. Constructors Name Description ServerException() Initializes a new instance of ServerException . ServerException(String) Initializes a new instance of ServerException with the message that describes the current exception. ServerException(String, Exception) Initializes a new instance of ServerException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.-ctor.html",
    "title": "Constructor ServiceResponseException | NoSQL SDK for .NET",
    "keywords": "Constructor ServiceResponseException ServiceResponseException() Initializes a new instance of ServiceResponseException . Declaration public ServiceResponseException() ServiceResponseException(String) Initializes a new instance of ServiceResponseException with the message that describes the current exception. Declaration public ServiceResponseException(string message) Parameters Type Name Description String message A message that describes the current exception. ServiceResponseException(String, Exception) Initializes a new instance of ServiceResponseException with the message that describes the current exception and an inner exception. Declaration public ServiceResponseException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception. ServiceResponseException(HttpStatusCode, String, String) Initializes a new instance of ServiceResponseException with the HTTP status code, HTTP status message and HTTP response message. Declaration public ServiceResponseException(HttpStatusCode statusCode, string reasonPhrase, string responseMessage) Parameters Type Name Description HttpStatusCode statusCode HTTP status code. String reasonPhrase HTTP status message. String responseMessage Message in the body of the HTTP response. Remarks The value of Message is generated from statusCode and reasonPhrase ."
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.html",
    "title": "Class ServiceResponseException | NoSQL SDK for .NET",
    "keywords": "Class ServiceResponseException The exception that is thrown when the service returns unsuccessful HTTP response. Inheritance Object NoSQLException ServiceResponseException Inherited Members NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ServiceResponseException : NoSQLException Remarks This exception allows you to access HTTP status code and HTTP status message as well as the server response message sent in the body of the HTTP response. Whether this exception is retryable depends on the HTTP status code. Retryable status codes are with values 500 and above and include the following: InternalServerError BadGateway ServiceUnavailable GatewayTimeout Constructors Name Description ServiceResponseException() Initializes a new instance of ServiceResponseException . ServiceResponseException(HttpStatusCode, String, String) Initializes a new instance of ServiceResponseException with the HTTP status code, HTTP status message and HTTP response message. ServiceResponseException(String) Initializes a new instance of ServiceResponseException with the message that describes the current exception. ServiceResponseException(String, Exception) Initializes a new instance of ServiceResponseException with the message that describes the current exception and an inner exception. Properties Name Description IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. ResponseMessage Gets the service response message. StatusCode Gets the HTTP status code. StatusMessage Gets the HTTP status message."
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.IsRetryable.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.IsRetryable.html",
    "title": "Property IsRetryable | NoSQL SDK for .NET",
    "keywords": "Property IsRetryable IsRetryable Gets the value indicating whether the operation that has thrown this exception may be retried. Declaration public override bool IsRetryable { get; } Property Value Type Description Boolean The value indicating whether this instance is retryable. See the discussion in the remarks section. Overrides NoSQLException.IsRetryable"
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.ResponseMessage.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.ResponseMessage.html",
    "title": "Property ResponseMessage | NoSQL SDK for .NET",
    "keywords": "Property ResponseMessage ResponseMessage Gets the service response message. Declaration public string ResponseMessage { get; } Property Value Type Description String Message sent within the body of the service HTTP response."
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.StatusCode.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.StatusCode.html",
    "title": "Property StatusCode | NoSQL SDK for .NET",
    "keywords": "Property StatusCode StatusCode Gets the HTTP status code. Declaration public HttpStatusCode StatusCode { get; } Property Value Type Description HttpStatusCode HTTP status code."
  },
  "api/Oracle.NoSQL.SDK.ServiceResponseException.StatusMessage.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceResponseException.StatusMessage.html",
    "title": "Property StatusMessage | NoSQL SDK for .NET",
    "keywords": "Property StatusMessage StatusMessage Gets the HTTP status message. Declaration public string StatusMessage { get; } Property Value Type Description String HTTP status message."
  },
  "api/Oracle.NoSQL.SDK.ServiceType.Cloud.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.Cloud.html",
    "title": "Field Cloud | NoSQL SDK for .NET",
    "keywords": "Field Cloud Oracle NoSQL Cloud Service. Authorization is managed by IAM. You must set AuthorizationProvider to an instance of IAMAuthorizationProvider unless using OCI configuration file with the specified region (see NoSQLClient(NoSQLConfig) ), in which case the driver will instantiate a default instance of IAMAuthorizationProvider . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ServiceType Cloud Returns Type Description ServiceType"
  },
  "api/Oracle.NoSQL.SDK.ServiceType.CloudSim.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.CloudSim.html",
    "title": "Field CloudSim | NoSQL SDK for .NET",
    "keywords": "Field CloudSim Cloud Simulator. No authorization required. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ServiceType CloudSim Returns Type Description ServiceType"
  },
  "api/Oracle.NoSQL.SDK.ServiceType.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.html",
    "title": "Class ServiceType | NoSQL SDK for .NET",
    "keywords": "Class ServiceType Specifies the type of Oracle NoSQL service that is used by a NoSQLClient instance. Inheritance Object ServiceType Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class ServiceType : Enum Remarks Currently there are 3 supported types of service: Oracle NoSQL Cloud Service, On-premise KVStore and Cloud Simulator. The service type is heavily linked to an authorization type used by the service indicated by AuthorizationProvider property. If specifying both ServiceType and AuthorizationProvider , they must be compatible, e.g. you may not specify ServiceType as Cloud and using KVStoreAuthorizationProvider . For service types Cloud and KVStore is is possible to specify a custom authorization provider as an instance of a class implementing IAuthorizationProvider interface. Although it is advisable to specify the service type as ServiceType when creating NoSQLClient instance, the driver may also be able to determine the service type from the authorization type as follows: If AuthorizationProvider is not set, then the service type is Cloud if Region is set, otherwise it is CloudSim . If AuthorizationProvider is an instance of IAMAuthorizationProvider or its subclass, the service type is Cloud . If AuthorizationProvider is an instance of KVStoreAuthorizationProvider or its subclass, the service type is KVStore . If none of the above, an ArgumentException is thrown. Fields Name Description Cloud Oracle NoSQL Cloud Service. Authorization is managed by IAM. You must set AuthorizationProvider to an instance of IAMAuthorizationProvider unless using OCI configuration file with the specified region (see NoSQLClient(NoSQLConfig) ), in which case the driver will instantiate a default instance of IAMAuthorizationProvider . CloudSim Cloud Simulator. No authorization required. KVStore On-Premise Oracle NoSQL Database. This includes both secure and non-secure stores. For secure store, the authorization is required and AuthorizationProvider must be set to an instance of KVStoreAuthorizationProvider . For non-secure store, authorization is not required but you must set, ServiceType to KVStore . Unspecified The service type is not specified. This is the default value if you don't specify ServiceType , in which case the driver will try to determine the service type as described. If the service type cannot be determined, an ArgumentException is thrown. value__"
  },
  "api/Oracle.NoSQL.SDK.ServiceType.KVStore.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.KVStore.html",
    "title": "Field KVStore | NoSQL SDK for .NET",
    "keywords": "Field KVStore On-Premise Oracle NoSQL Database. This includes both secure and non-secure stores. For secure store, the authorization is required and AuthorizationProvider must be set to an instance of KVStoreAuthorizationProvider . For non-secure store, authorization is not required but you must set, ServiceType to KVStore . Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ServiceType KVStore Returns Type Description ServiceType"
  },
  "api/Oracle.NoSQL.SDK.ServiceType.Unspecified.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.Unspecified.html",
    "title": "Field Unspecified | NoSQL SDK for .NET",
    "keywords": "Field Unspecified The service type is not specified. This is the default value if you don't specify ServiceType , in which case the driver will try to determine the service type as described. If the service type cannot be determined, an ArgumentException is thrown. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const ServiceType Unspecified Returns Type Description ServiceType"
  },
  "api/Oracle.NoSQL.SDK.ServiceType.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceType.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.ServiceUnavailableException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceUnavailableException.-ctor.html",
    "title": "Constructor ServiceUnavailableException | NoSQL SDK for .NET",
    "keywords": "Constructor ServiceUnavailableException ServiceUnavailableException() Initializes a new instance of ServiceUnavailableException . Declaration public ServiceUnavailableException() ServiceUnavailableException(String) Initializes a new instance of ServiceUnavailableException with the message that describes the current exception. Declaration public ServiceUnavailableException(string message) Parameters Type Name Description String message A message that describes the current exception. ServiceUnavailableException(String, Exception) Initializes a new instance of ServiceUnavailableException with the message that describes the current exception and an inner exception. Declaration public ServiceUnavailableException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.ServiceUnavailableException.html": {
    "href": "api/Oracle.NoSQL.SDK.ServiceUnavailableException.html",
    "title": "Class ServiceUnavailableException | NoSQL SDK for .NET",
    "keywords": "Class ServiceUnavailableException The exception that is thrown when the service is unavailable. Inheritance Object NoSQLException RetryableException ServiceUnavailableException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class ServiceUnavailableException : RetryableException Remarks Most service problems are temporary, so this is a retryable exception. Constructors Name Description ServiceUnavailableException() Initializes a new instance of ServiceUnavailableException . ServiceUnavailableException(String) Initializes a new instance of ServiceUnavailableException with the message that describes the current exception. ServiceUnavailableException(String, Exception) Initializes a new instance of ServiceUnavailableException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.StringValue.AsString.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.AsString.html",
    "title": "Property AsString | NoSQL SDK for .NET",
    "keywords": "Property AsString AsString Gets the value of this instance as string. Declaration public override string AsString { get; } Property Value Type Description String The string value that this instance represents. Overrides FieldValue.AsString"
  },
  "api/Oracle.NoSQL.SDK.StringValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.-ctor.html",
    "title": "Constructor StringValue | NoSQL SDK for .NET",
    "keywords": "Constructor StringValue StringValue(String) Initializes a new instance of the StringValue with the specified string value. Declaration public StringValue(string value) Parameters Type Name Description String value The value which this instance will represent. Exceptions Type Condition ArgumentNullException If value is null ."
  },
  "api/Oracle.NoSQL.SDK.StringValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType String Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.StringValue.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.html",
    "title": "Class StringValue | NoSQL SDK for .NET",
    "keywords": "Class StringValue Represents a string value. Inheritance Object FieldValue StringValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsDateTime FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class StringValue : FieldValue Remarks This class is used to represent values of NoSQL data types String and Enum . This value is represented by a C# type String . Constructors Name Description StringValue(String) Initializes a new instance of the StringValue with the specified string value. Properties Name Description AsString Gets the value of this instance as string. DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToBoolean() Converts the value represented by this instance to a boolean. ToByteArray() Converts the value represented by this instance to a byte array. ToDateTime() Converts the value represented by this instance to a date and time value. ToDecimal() Converts the value represented by this instance to a decimal number. ToDouble() Converts the value represented by this instance to a double precision floating point number. ToInt32() Converts the value represented by this instance to a 32-bit sighed integer. ToInt64() Converts the value represented by this instance to a 64-bit sighed integer. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.StringValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToBoolean.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToBoolean.html",
    "title": "Method ToBoolean | NoSQL SDK for .NET",
    "keywords": "Method ToBoolean ToBoolean() Converts the value represented by this instance to a boolean. Declaration public override bool ToBoolean() Returns Type Description Boolean true if value equals \"true\", or false if value equals false . The comparison is case-insensitive and ignores leading and trailing whitespace. Overrides FieldValue.ToBoolean() Remarks This method performs the same conversion as ToBoolean(String) . Exceptions Type Condition FormatException The value is neither \"true\" or \"false\". See Also ToBoolean(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToByteArray.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToByteArray.html",
    "title": "Method ToByteArray | NoSQL SDK for .NET",
    "keywords": "Method ToByteArray ToByteArray() Converts the value represented by this instance to a byte array. Declaration public override byte[] ToByteArray() Returns Type Description Byte [] A byte array resulting from decoding a Base64-encoded value represented by this instance. Overrides FieldValue.ToByteArray() Remarks This method is valid only if the string represented by this value represents a Base64-encoded binary value. It performs the same conversion as FromBase64String(String) . Exceptions Type Condition FormatException The value represented by this instance is not a valid Base64 string. See Also ToBoolean(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToDateTime.html",
    "title": "Method ToDateTime | NoSQL SDK for .NET",
    "keywords": "Method ToDateTime ToDateTime() Converts the value represented by this instance to a date and time value. Declaration public override DateTime ToDateTime() Returns Type Description DateTime A date and time equivalent to the string represented by this instance. Overrides FieldValue.ToDateTime() Remarks This method performs the same conversion as ToDateTime(String) . Exceptions Type Condition FormatException The string represented by this instance is not a valid date and time string. See Also ToDateTime(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToDecimal.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToDecimal.html",
    "title": "Method ToDecimal | NoSQL SDK for .NET",
    "keywords": "Method ToDecimal ToDecimal() Converts the value represented by this instance to a decimal number. Declaration public override Decimal ToDecimal() Returns Type Description Decimal A decimal number equivalent to the number represented by the string represented by this instance. Overrides FieldValue.ToDecimal() Remarks This method performs the same conversion as ToDecimal(String) . Exceptions Type Condition FormatException The string represented by this instance does not represent a decimal number. OverflowException If the string represented by this instance represents value less than MinValue or greater than MaxValue See Also ToDecimal(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToDouble.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToDouble.html",
    "title": "Method ToDouble | NoSQL SDK for .NET",
    "keywords": "Method ToDouble ToDouble() Converts the value represented by this instance to a double precision floating point number. Declaration public override double ToDouble() Returns Type Description Double A double precision floating point number equivalent to the number represented by the string represented by this instance. Overrides FieldValue.ToDouble() Remarks This method performs the same conversion as ToDouble(String) . Exceptions Type Condition FormatException The string represented by this instance does not represent a number. OverflowException If the string represented by this instance represents value less than MinValue or greater than MaxValue See Also ToDouble(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToInt32.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToInt32.html",
    "title": "Method ToInt32 | NoSQL SDK for .NET",
    "keywords": "Method ToInt32 ToInt32() Converts the value represented by this instance to a 32-bit sighed integer. Declaration public override int ToInt32() Returns Type Description Int32 A 32-bit signed integer equivalent to the number represented by the string represented by this instance. Overrides FieldValue.ToInt32() Remarks This method performs the same conversion as ToInt32(String) . Exceptions Type Condition FormatException The string represented by this instance does not represent an integer. OverflowException If the string represented by this instance represents value less than MinValue or greater than MaxValue See Also ToInt32(String)"
  },
  "api/Oracle.NoSQL.SDK.StringValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.StringValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts the value represented by this instance to a 64-bit sighed integer. Declaration public override long ToInt64() Returns Type Description Int64 A 64-bit signed integer equivalent to the number represented by the string represented by this instance. Overrides FieldValue.ToInt64() Remarks This method performs the same conversion as ToInt64(String) . Exceptions Type Condition FormatException The string represented by this instance does not represent an integer. OverflowException If the string represented by this instance represents value less than MinValue or greater than MaxValue See Also ToInt64(String)"
  },
  "api/Oracle.NoSQL.SDK.SyncPolicy.html": {
    "href": "api/Oracle.NoSQL.SDK.SyncPolicy.html",
    "title": "Class SyncPolicy | NoSQL SDK for .NET",
    "keywords": "Class SyncPolicy On-Premise only. SyncPolicy defines the synchronization policy to be used when committing a transaction. Inheritance Object SyncPolicy Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class SyncPolicy : Enum Remarks High levels of synchronization offer a greater guarantee that the transaction is persistent to disk, but trade that off for lower performance. Fields Name Description NoSync Do not write or synchronously flush the log on transaction commit. Transactions exhibit the ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is, database integrity will be maintained, but if the application or system fails, it is possible some number of the most recently committed transactions may be undone during recovery. The number of transactions at risk is governed by how many log updates can fit into the log buffer, how often the operating system flushes dirty buffers to disk, and how often log checkpoints occur. Sync Write and synchronously flush the log on transaction commit. Transactions exhibit all the ACID (atomicity, consistency, isolation, and durability) properties. value__ WriteNoSync Write but do not synchronously flush the log on transaction commit. Transactions exhibit the ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is, database integrity will be maintained, but if the operating system fails, it is possible some number of the most recently committed transactions may be undone during recovery. The number of transactions at risk is governed by how often the operating system flushes dirty buffers to disk, and how often log checkpoints occur. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.SyncPolicy.NoSync.html": {
    "href": "api/Oracle.NoSQL.SDK.SyncPolicy.NoSync.html",
    "title": "Field NoSync | NoSQL SDK for .NET",
    "keywords": "Field NoSync Do not write or synchronously flush the log on transaction commit. Transactions exhibit the ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is, database integrity will be maintained, but if the application or system fails, it is possible some number of the most recently committed transactions may be undone during recovery. The number of transactions at risk is governed by how many log updates can fit into the log buffer, how often the operating system flushes dirty buffers to disk, and how often log checkpoints occur. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const SyncPolicy NoSync Returns Type Description SyncPolicy"
  },
  "api/Oracle.NoSQL.SDK.SyncPolicy.Sync.html": {
    "href": "api/Oracle.NoSQL.SDK.SyncPolicy.Sync.html",
    "title": "Field Sync | NoSQL SDK for .NET",
    "keywords": "Field Sync Write and synchronously flush the log on transaction commit. Transactions exhibit all the ACID (atomicity, consistency, isolation, and durability) properties. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const SyncPolicy Sync Returns Type Description SyncPolicy"
  },
  "api/Oracle.NoSQL.SDK.SyncPolicy.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.SyncPolicy.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.SyncPolicy.WriteNoSync.html": {
    "href": "api/Oracle.NoSQL.SDK.SyncPolicy.WriteNoSync.html",
    "title": "Field WriteNoSync | NoSQL SDK for .NET",
    "keywords": "Field WriteNoSync Write but do not synchronously flush the log on transaction commit. Transactions exhibit the ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is, database integrity will be maintained, but if the operating system fails, it is possible some number of the most recently committed transactions may be undone during recovery. The number of transactions at risk is governed by how often the operating system flushes dirty buffers to disk, and how often log checkpoints occur. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const SyncPolicy WriteNoSync Returns Type Description SyncPolicy"
  },
  "api/Oracle.NoSQL.SDK.TableBusyException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableBusyException.-ctor.html",
    "title": "Constructor TableBusyException | NoSQL SDK for .NET",
    "keywords": "Constructor TableBusyException TableBusyException() Initializes a new instance of TableBusyException . Declaration public TableBusyException() TableBusyException(String) Initializes a new instance of TableBusyException with the message that describes the current exception. Declaration public TableBusyException(string message) Parameters Type Name Description String message A message that describes the current exception. TableBusyException(String, Exception) Initializes a new instance of TableBusyException with the message that describes the current exception and an inner exception. Declaration public TableBusyException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableBusyException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableBusyException.html",
    "title": "Class TableBusyException | NoSQL SDK for .NET",
    "keywords": "Class TableBusyException The exception that is thrown when a table operation fails because the table is in use or busy. Inheritance Object NoSQLException RetryableException TableBusyException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableBusyException : RetryableException Remarks Only one modification operation at a time is allowed on a table. This is a retryable exception. Constructors Name Description TableBusyException() Initializes a new instance of TableBusyException . TableBusyException(String) Initializes a new instance of TableBusyException with the message that describes the current exception. TableBusyException(String, Exception) Initializes a new instance of TableBusyException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableCompletionOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableCompletionOptions.-ctor.html",
    "title": "Constructor TableCompletionOptions | NoSQL SDK for .NET",
    "keywords": "Constructor TableCompletionOptions TableCompletionOptions() Declaration public TableCompletionOptions()"
  },
  "api/Oracle.NoSQL.SDK.TableCompletionOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.TableCompletionOptions.html",
    "title": "Class TableCompletionOptions | NoSQL SDK for .NET",
    "keywords": "Class TableCompletionOptions Represents options passed to WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) and WaitForLocalReplicaInitAsync methods. Inheritance Object GetTableOptions TableCompletionOptions Inherited Members GetTableOptions.Compartment GetTableOptions.Namespace GetTableOptions.Timeout Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableCompletionOptions : GetTableOptions Remarks This class represents options in GetTableOptions with addition of poll delay to poll for table state change. Constructors Name Description TableCompletionOptions() Properties Name Description PollDelay Gets or sets the poll delay to poll for table state change. See Also WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) WaitForLocalReplicaInitAsync GetTableOptions"
  },
  "api/Oracle.NoSQL.SDK.TableCompletionOptions.PollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.TableCompletionOptions.PollDelay.html",
    "title": "Property PollDelay | NoSQL SDK for .NET",
    "keywords": "Property PollDelay PollDelay Gets or sets the poll delay to poll for table state change. Declaration public Nullable<TimeSpan> PollDelay { get; set; } Property Value Type Description Nullable < TimeSpan > Poll delay. If set, must be a positive value and not greater than the timeout."
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.-ctor.html",
    "title": "Constructor TableDDLOptions | NoSQL SDK for .NET",
    "keywords": "Constructor TableDDLOptions TableDDLOptions() Declaration public TableDDLOptions()"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.DefinedTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.DefinedTags.html",
    "title": "Property DefinedTags | NoSQL SDK for .NET",
    "keywords": "Property DefinedTags DefinedTags Cloud Service Only. Gets or sets defined tags to use for the operation. Declaration public IDictionary<string, IDictionary<string, string>> DefinedTags { get; } Property Value Type Description IDictionary < String , IDictionary < String , String >> Namespace-scoped dictionary of defined tags. If set for an on-premises service, they are silently ignored. Remarks See chapter Tagging Overview in Oracle Cloud Infrastructure documentation. Defined tags represent metadata managed by an administrator. Users can apply these tags to a table by identifying the tag and supplying its value. Each defined tag belongs to a namespace, where a namespace serves as a container for tag keys. The type of DefinedTags is a compound dictionary, with outer dictionary keys representing tag namespaces and the inner dictionary representing tag keys and values for a particular namespace. Defined tags are used only in these cases: table creation operations executed by ExecuteTableDDLAsync or ExecuteTableDDLWithCompletionAsync with CREATE TABLE SQL statement and table tag modification operations executed by SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) or SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) . They are not used for other table DDL operations. Examples Specifying defined tags. var options = new TableDDLOptions { DefinedTags = new Dictionary<string, IDictionary<string, string>> { [\"Oracle-Tags\"] = new Dictionary<string, string> { [\"CreatedBy\"] = \"NosqlUser\", [\"CreatedOn\"] = \"2023-01-01T00:00:00Z\" } } };"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.FreeFormTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.FreeFormTags.html",
    "title": "Property FreeFormTags | NoSQL SDK for .NET",
    "keywords": "Property FreeFormTags FreeFormTags Cloud Service Only. Gets or sets free-form tags to use for the operation. Declaration public IDictionary<string, string> FreeFormTags { get; } Property Value Type Description IDictionary < String , String > Dictionary of free-form tags. If set for an on-premises service, they are silently ignored. Remarks See chapter Tagging Overview in Oracle Cloud Infrastructure documentation. Free-form tags represent an unmanaged metadata created and applied by the user. Free-form tags do not use namespaces. FreeFormTags is a dictionary representing tag keys and values. Free-form tags are used only in these cases: table creation operations executed by ExecuteTableDDLAsync or ExecuteTableDDLWithCompletionAsync with CREATE TABLE SQL statement and table tag modification operations executed by SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) or SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) . They are not used for other table DDL operations. Examples Specifying free-form tags. var options = new TableDDLOptions { FreeFormTags = new Dictionary<string, string> { [\"createdBy\"] = \"NosqlUser\", [\"purpose\"] = \"MyApp\" } };"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.html",
    "title": "Class TableDDLOptions | NoSQL SDK for .NET",
    "keywords": "Class TableDDLOptions Represents options for table DDL passed to methods ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) , SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) , SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) and SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) , Inheritance Object TableDDLOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableDDLOptions : Object Remarks For properties not specified or null , appropriate defaults will be used as indicated below. Examples Executing table DDL with provided TableDDLOptions . var result = await client.ExecuteTableDDLWithCompletionAsync( \"CREATE TABLE MyTable(id LONG, name STRING, PRIMARY KEY(id)\", new TableDDLOptions { Compartment = \"my_compartment\", Timeout = TimeSpan.FromSeconds(30), TableLimits = new TableLimits(100, 200, 100) }); Constructors Name Description TableDDLOptions() Properties Name Description Compartment Cloud service only. Gets or sets the compartment id or name for the operation. DefinedTags Cloud Service Only. Gets or sets defined tags to use for the operation. FreeFormTags Cloud Service Only. Gets or sets free-form tags to use for the operation. MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. Namespace On-premises only. Gets or sets the optional namespace. PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. TableLimits Cloud Service/Cloud Simulator only. Gets or sets the table limits for the operation. Timeout Gets or sets the timeout for the operation. See Also ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.MatchETag.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.MatchETag.html",
    "title": "Property MatchETag | NoSQL SDK for .NET",
    "keywords": "Property MatchETag MatchETag Cloud Service only. Gets or sets the entity tag that must be matched for operation to proceed. Declaration public string MatchETag { get; set; } Property Value Type Description String The value of the entity tag for the table. Remarks The ETag is an opaque value that represents the current version of the table itself and can be used in table modification operations to only perform them if the ETag for the table has not changed. This is an optimistic concurrency control mechanism allowing an application to ensure no unexpected modifications have been made to the table. The value of the ETag must be the value returned in a previous TableResult . If set for on-premises service, the ETag is silently ignored. See Also ETag"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.PollDelay.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.PollDelay.html",
    "title": "Property PollDelay | NoSQL SDK for .NET",
    "keywords": "Property PollDelay PollDelay Gets or sets the poll delay for polling when asynchronously waiting for operation completion. Declaration public Nullable<TimeSpan> PollDelay { get; set; } Property Value Type Description Nullable < TimeSpan > Poll delay. If set, must be a positive value and not greater than the timeout. Remarks Applies only to ExecuteTableDDLWithCompletionAsync and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) methods. Defaults to TablePollDelay"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.TableLimits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.TableLimits.html",
    "title": "Property TableLimits | NoSQL SDK for .NET",
    "keywords": "Property TableLimits TableLimits Cloud Service/Cloud Simulator only. Gets or sets the table limits for the operation. Declaration public TableLimits TableLimits { get; set; } Property Value Type Description TableLimits The table limits. Remarks Valid only for CREATE TABLE operation executed via ExecuteTableDDLAsync(String, TableDDLOptions, CancellationToken) or ExecuteTableDDLWithCompletionAsync(String, TableDDLOptions, CancellationToken) . For SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) or SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) , supply table limits as separate parameter. Note that you may not specify table limits when creating a child table, because child/descendant tables share the table limits with their parent/top level ancestor table. See Also SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.TableDDLOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the operation. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Operation timeout. If set, must be a positive value. Remarks For ExecuteTableDDLAsync and SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) it defaults to TableDDLTimeout . For ExecuteTableDDLWithCompletionAsync and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) separate default timeouts are used for issuing the DDL operation and waiting for its completion, with values of TableDDLTimeout and TablePollTimeout correspondingly (the latter defaults to no timeout if TablePollTimeout is not set)."
  },
  "api/Oracle.NoSQL.SDK.TableDDLRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLRequest.html",
    "title": "Class TableDDLRequest | NoSQL SDK for .NET",
    "keywords": "Class TableDDLRequest Represents information about table DDL operation performed by ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync methods. Inheritance Object Request RequestWithTable TableOperationRequest TableDDLRequest TableLimitsRequest TableTagsRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableDDLRequest : TableOperationRequest Properties Name Description Options Gets the options for table DDL operation. Statement Gets the SQL statement. Returns null if this is an instance of TableLimitsRequest or TableTagsRequest . See Also ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync Request"
  },
  "api/Oracle.NoSQL.SDK.TableDDLRequest.Options.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLRequest.Options.html",
    "title": "Property Options | NoSQL SDK for .NET",
    "keywords": "Property Options Options Gets the options for table DDL operation. Declaration public TableDDLOptions Options { get; } Property Value Type Description TableDDLOptions The options or null if options were not provided."
  },
  "api/Oracle.NoSQL.SDK.TableDDLRequest.Statement.html": {
    "href": "api/Oracle.NoSQL.SDK.TableDDLRequest.Statement.html",
    "title": "Property Statement | NoSQL SDK for .NET",
    "keywords": "Property Statement Statement Gets the SQL statement. Returns null if this is an instance of TableLimitsRequest or TableTagsRequest . Declaration public string Statement { get; } Property Value Type Description String SQL statement."
  },
  "api/Oracle.NoSQL.SDK.TableExistsException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableExistsException.-ctor.html",
    "title": "Constructor TableExistsException | NoSQL SDK for .NET",
    "keywords": "Constructor TableExistsException TableExistsException() Initializes a new instance of TableExistsException . Declaration public TableExistsException() TableExistsException(String) Initializes a new instance of TableExistsException with the message that describes the current exception. Declaration public TableExistsException(string message) Parameters Type Name Description String message A message that describes the current exception. TableExistsException(String, Exception) Initializes a new instance of TableExistsException with the message that describes the current exception and an inner exception. Declaration public TableExistsException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableExistsException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableExistsException.html",
    "title": "Class TableExistsException | NoSQL SDK for .NET",
    "keywords": "Class TableExistsException The exception that is thrown when attempting to a table when a table with the same name already exists. Inheritance Object NoSQLException TableExistsException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableExistsException : NoSQLException Constructors Name Description TableExistsException() Initializes a new instance of TableExistsException . TableExistsException(String) Initializes a new instance of TableExistsException with the message that describes the current exception. TableExistsException(String, Exception) Initializes a new instance of TableExistsException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimitException.-ctor.html",
    "title": "Constructor TableLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor TableLimitException TableLimitException() Initializes a new instance of TableLimitException . Declaration public TableLimitException() TableLimitException(String) Initializes a new instance of TableLimitException with the message that describes the current exception. Declaration public TableLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. TableLimitException(String, Exception) Initializes a new instance of TableLimitException with the message that describes the current exception and an inner exception. Declaration public TableLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimitException.html",
    "title": "Class TableLimitException | NoSQL SDK for .NET",
    "keywords": "Class TableLimitException Cloud Service/Cloud Simulator only. The exception that is thrown when an attempt has been made to create a number of tables that exceeds the system defined limit. Inheritance Object NoSQLException TableLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableLimitException : NoSQLException Constructors Name Description TableLimitException() Initializes a new instance of TableLimitException . TableLimitException(String) Initializes a new instance of TableLimitException with the message that describes the current exception. TableLimitException(String, Exception) Initializes a new instance of TableLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableLimits.CapacityMode.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.CapacityMode.html",
    "title": "Property CapacityMode | NoSQL SDK for .NET",
    "keywords": "Property CapacityMode CapacityMode Gets table capacity mode. Declaration public CapacityMode CapacityMode { get; } Property Value Type Description CapacityMode Table capacity mode, provisioned or on demand."
  },
  "api/Oracle.NoSQL.SDK.TableLimits.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.-ctor.html",
    "title": "Constructor TableLimits | NoSQL SDK for .NET",
    "keywords": "Constructor TableLimits TableLimits(Int32, Int32, Int32) Initializes a new instance of the TableLimits class with Provisioned capacity mode. Declaration public TableLimits(int readUnits, int writeUnits, int storageGB) Parameters Type Name Description Int32 readUnits Read units. Must be a positive value. Int32 writeUnits Write units. Must be a positive value. Int32 storageGB Maximum storage in gigabytes. Must be a positive value. TableLimits(Int32) Initializes a new instance of the TableLimits class with OnDemand capacity mode. Declaration public TableLimits(int storageGB) Parameters Type Name Description Int32 storageGB Maximum storage in gigabytes. Must be a positive value."
  },
  "api/Oracle.NoSQL.SDK.TableLimits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.html",
    "title": "Class TableLimits | NoSQL SDK for .NET",
    "keywords": "Class TableLimits For Cloud Service/Cloud Simulator only. Table limits are used during table creation to specify the throughput and capacity to be consumed by the table as well as in an operation to change the limits of an existing table. Inheritance Object TableLimits Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableLimits : Object Remarks These operations are performed by ExecuteTableDDLAsync , ExecuteTableDDLWithCompletionAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) methods. The values provided are enforced by the system and are used for billing purposes. Throughput limits are defined in terms of read units and write units. A read unit represents 1 eventually consistent read per second for data up to 1 KB in size. A read that is absolutely consistent is double that, consuming 2 read units for a read of up to 1 KB in size. This means that if an application is to use Absolute it may need to specify additional read units when creating a table. A write unit represents 1 write per second of data up to 1 KB in size. In addition to throughput, table capacity must be specified to indicate the maximum amount of storage, in gigabytes, allowed for the table. The way to initialize TableLimits instance depends on the chosen CapacityMode of the table: In Provisioned mode, all 3 values for throughput and storage limits must be specified. There are no defaults and no mechanism to indicate \"no change\". In OnDemand mode, only storage limit must be specified. You may also pass TableLimits to SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) or SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) APIs to change CapacityMode of the existing table, that is to switch the table from Provisioned to On Demand or vice versa. TableLimits are also returned as part of TableResult from operations listed above as well as GetTableAsync and WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) . For returned TableLimits , when using with Cloud Service, ReadUnits and WriteUnits will be available for both Provisioned and OnDemand tables. For OnDemand tables, these values will indicate the maximum limits set by the service for on-demand tables. Note that these values are not available for on-demand tables when using Cloud Simulator (see CloudSim ). Specifying table limits when creating a provisioned table. var result = await client.ExecuteTableDDLWithCompletionAsync( \"CREATE TABLE table1(id INTEGER, name STRING, PRIMARY KEY(id))\", new TableLimits(100, 200, 100)); Specifying table limits when creating an on demand table. var result = await client.ExecuteTableDDLWithCompletionAsync( \"CREATE TABLE table1(id INTEGER, name STRING, PRIMARY KEY(id))\", new TableLimits(100)); Constructors Name Description TableLimits(Int32) Initializes a new instance of the TableLimits class with OnDemand capacity mode. TableLimits(Int32, Int32, Int32) Initializes a new instance of the TableLimits class with Provisioned capacity mode. Properties Name Description CapacityMode Gets table capacity mode. ReadUnits Gets read units. StorageGB Gets maximum storage capacity in GB. WriteUnits Gets write units. See Also CapacityMode TableDDLOptions ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.TableLimits.ReadUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.ReadUnits.html",
    "title": "Property ReadUnits | NoSQL SDK for .NET",
    "keywords": "Property ReadUnits ReadUnits Gets read units. Declaration public int ReadUnits { get; } Property Value Type Description Int32 Read units if available, otherwise 0."
  },
  "api/Oracle.NoSQL.SDK.TableLimits.StorageGB.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.StorageGB.html",
    "title": "Property StorageGB | NoSQL SDK for .NET",
    "keywords": "Property StorageGB StorageGB Gets maximum storage capacity in GB. Declaration public int StorageGB { get; } Property Value Type Description Int32 Maximum storage capacity in GB."
  },
  "api/Oracle.NoSQL.SDK.TableLimits.WriteUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimits.WriteUnits.html",
    "title": "Property WriteUnits | NoSQL SDK for .NET",
    "keywords": "Property WriteUnits WriteUnits Gets write units. Declaration public int WriteUnits { get; } Property Value Type Description Int32 Write units if available, otherwise 0."
  },
  "api/Oracle.NoSQL.SDK.TableLimitsRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimitsRequest.html",
    "title": "Class TableLimitsRequest | NoSQL SDK for .NET",
    "keywords": "Class TableLimitsRequest Cloud Service Only. Represents information about operation performed by SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) and SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) methods. Inheritance Object Request RequestWithTable TableOperationRequest TableDDLRequest TableLimitsRequest Inherited Members TableDDLRequest.Statement TableDDLRequest.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableLimitsRequest : TableDDLRequest Properties Name Description TableLimits Gets the table limits for the operation. See Also SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) Request"
  },
  "api/Oracle.NoSQL.SDK.TableLimitsRequest.TableLimits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableLimitsRequest.TableLimits.html",
    "title": "Property TableLimits | NoSQL SDK for .NET",
    "keywords": "Property TableLimits TableLimits Gets the table limits for the operation. Declaration public TableLimits TableLimits { get; } Property Value Type Description TableLimits Table limits."
  },
  "api/Oracle.NoSQL.SDK.TableNotFoundException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableNotFoundException.-ctor.html",
    "title": "Constructor TableNotFoundException | NoSQL SDK for .NET",
    "keywords": "Constructor TableNotFoundException TableNotFoundException() Initializes a new instance of TableNotFoundException . Declaration public TableNotFoundException() TableNotFoundException(String) Initializes a new instance of TableNotFoundException with the message that describes the current exception. Declaration public TableNotFoundException(string message) Parameters Type Name Description String message A message that describes the current exception. TableNotFoundException(String, Exception) Initializes a new instance of TableNotFoundException with the message that describes the current exception and an inner exception. Declaration public TableNotFoundException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableNotFoundException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableNotFoundException.html",
    "title": "Class TableNotFoundException | NoSQL SDK for .NET",
    "keywords": "Class TableNotFoundException The exception that is thrown when an operation attempted to access a table that does not exist or is not in a visible state. Inheritance Object NoSQLException TableNotFoundException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableNotFoundException : NoSQLException Constructors Name Description TableNotFoundException() Initializes a new instance of TableNotFoundException . TableNotFoundException(String) Initializes a new instance of TableNotFoundException with the message that describes the current exception. TableNotFoundException(String, Exception) Initializes a new instance of TableNotFoundException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableNotReadyException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableNotReadyException.-ctor.html",
    "title": "Constructor TableNotReadyException | NoSQL SDK for .NET",
    "keywords": "Constructor TableNotReadyException TableNotReadyException() Initializes a new instance of TableNotReadyException . Declaration public TableNotReadyException() TableNotReadyException(String) Initializes a new instance of TableNotReadyException with the message that describes the current exception. Declaration public TableNotReadyException(string message) Parameters Type Name Description String message A message that describes the current exception. TableNotReadyException(String, Exception) Initializes a new instance of TableNotReadyException with the message that describes the current exception and an inner exception. Declaration public TableNotReadyException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableNotReadyException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableNotReadyException.html",
    "title": "Class TableNotReadyException | NoSQL SDK for .NET",
    "keywords": "Class TableNotReadyException Cloud service only. The exception that is thrown when an operation is attempted on a replicated table that is not yet fully initialized. Inheritance Object NoSQLException RetryableException TableNotReadyException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableNotReadyException : RetryableException Constructors Name Description TableNotReadyException() Initializes a new instance of TableNotReadyException . TableNotReadyException(String) Initializes a new instance of TableNotReadyException with the message that describes the current exception. TableNotReadyException(String, Exception) Initializes a new instance of TableNotReadyException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableOperationRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.TableOperationRequest.html",
    "title": "Class TableOperationRequest | NoSQL SDK for .NET",
    "keywords": "Class TableOperationRequest Base class for table-level operations such as table DDL, setting table limits, adding and dropping replicas, etc. Inheritance Object Request RequestWithTable TableOperationRequest AddReplicaRequest DropReplicaRequest TableDDLRequest Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class TableOperationRequest : RequestWithTable Remarks These operations return result of type TableResult . In addition, these are potentially-long running operations and may require to call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to wait for operation completion. For more information, see API documentation of corresponding methods of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.TableResult.CompartmentId.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.CompartmentId.html",
    "title": "Property CompartmentId | NoSQL SDK for .NET",
    "keywords": "Property CompartmentId CompartmentId Cloud Service only. Gets the compartment id of the table. Declaration public string CompartmentId { get; } Property Value Type Description String Compartment id."
  },
  "api/Oracle.NoSQL.SDK.TableResult.DefinedTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.DefinedTags.html",
    "title": "Property DefinedTags | NoSQL SDK for .NET",
    "keywords": "Property DefinedTags DefinedTags Gets defined tags associated with this table. Declaration public IDictionary<string, IDictionary<string, string>> DefinedTags { get; } Property Value Type Description IDictionary < String , IDictionary < String , String >> Defined tags for this table if available, otherwise null . Remarks See DefinedTags for more information on defined tags. See Also DefinedTags"
  },
  "api/Oracle.NoSQL.SDK.TableResult.ETag.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.ETag.html",
    "title": "Property ETag | NoSQL SDK for .NET",
    "keywords": "Property ETag ETag Cloud Service only. Gets the entity tag associated with the table. Declaration public string ETag { get; } Property Value Type Description String The entity tag associated with the table, or null when using on-premises service. Remarks The ETag is an opaque value that represents the current version of the table itself and can be used in future table modification operations to only perform them if the ETag for the table has not changed. This is an optimistic concurrency control mechanism. See Also MatchETag"
  },
  "api/Oracle.NoSQL.SDK.TableResult.FreeFormTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.FreeFormTags.html",
    "title": "Property FreeFormTags | NoSQL SDK for .NET",
    "keywords": "Property FreeFormTags FreeFormTags Gets free-form tags associated with this table. Declaration public IDictionary<string, string> FreeFormTags { get; } Property Value Type Description IDictionary < String , String > Free-form tags for this table if available, otherwise null . Remarks See FreeFormTags for more information on free-form tags. See Also FreeFormTags"
  },
  "api/Oracle.NoSQL.SDK.TableResult.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.html",
    "title": "Class TableResult | NoSQL SDK for .NET",
    "keywords": "Class TableResult Represents the static information about a table. Inheritance Object TableResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableResult : Object Remarks This is the result of APIs ExecuteTableDDLAsync , ExecuteTableDDLWithCompletionAsync , SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) , SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) , GetTableAsync , as well as WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) and WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken) . It encapsulates the state of the table that is the target of the operation. Table DDL operations performed by ExecuteTableDDLAsync and SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) such as table creation, modification, and drop are potentially long-running and not necessarily completed when these methods return result and the table may still be in one of its intermediate states. You may call WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) to be notified when the operation completes and the table reaches desired state (which, depending on the operation, would be either Active or Dropped . Alternatively you may use ExecuteTableDDLWithCompletionAsync or SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) which will return the result only when the DDL operation is fully completed. You may also call GetTableAsync(String, GetTableOptions, CancellationToken) to receive static information about the table as well as its current state. Properties Name Description CompartmentId Cloud Service only. Gets the compartment id of the table. DefinedTags Gets defined tags associated with this table. ETag Cloud Service only. Gets the entity tag associated with the table. FreeFormTags Gets free-form tags associated with this table. IsLocalReplicaInitialized Cloud Service only. Gets a value indicating whether this table is a replica and its initialization process has been completed. IsReplicated Cloud Service only. Gets a value indicating whether the table has replicas, that is whether it is a Global Active table. IsSchemaFrozen Cloud Service only. Gets a value indicating whether the table's schema is frozen. Namespace On-premise NoSQL database only. Gets the namespace of the table. Replicas Cloud Service only. Gets a list containing information for each replica, if this table is replicated (i.e. Global Active Table). TableDDL Gets the DDL (CREATE TABLE) statement used to create this table if available. TableLimits Gets the throughput and capacity limits for the table. TableName Gets the name of the table. TableOCID Cloud Service only. Gets the OCID of the table. TableSchema Gets the table schema. TableState Gets the current table state. Methods Name Description WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Asynchronously waits for completion of table DDL operations. See Also ExecuteTableDDLAsync ExecuteTableDDLWithCompletionAsync SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) GetTableAsync WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) WaitForTableStateAsync(String, TableState, TableCompletionOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.TableResult.IsLocalReplicaInitialized.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.IsLocalReplicaInitialized.html",
    "title": "Property IsLocalReplicaInitialized | NoSQL SDK for .NET",
    "keywords": "Property IsLocalReplicaInitialized IsLocalReplicaInitialized Cloud Service only. Gets a value indicating whether this table is a replica and its initialization process has been completed. Declaration public bool IsLocalReplicaInitialized { get; } Property Value Type Description Boolean true if this table is a replica and its initialization process has been completed, otherwise false . Remarks The initialization process starts after the replica table is created and involves copying of the table data from the sender region to the receiver region. See Also Global Active Tables in NDCS"
  },
  "api/Oracle.NoSQL.SDK.TableResult.IsReplicated.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.IsReplicated.html",
    "title": "Property IsReplicated | NoSQL SDK for .NET",
    "keywords": "Property IsReplicated IsReplicated Cloud Service only. Gets a value indicating whether the table has replicas, that is whether it is a Global Active table. Declaration public bool IsReplicated { get; } Property Value Type Description Boolean true if the table has replicas, otherwise false . See Also Global Active Tables in NDCS"
  },
  "api/Oracle.NoSQL.SDK.TableResult.IsSchemaFrozen.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.IsSchemaFrozen.html",
    "title": "Property IsSchemaFrozen | NoSQL SDK for .NET",
    "keywords": "Property IsSchemaFrozen IsSchemaFrozen Cloud Service only. Gets a value indicating whether the table's schema is frozen. Declaration public bool IsSchemaFrozen { get; } Property Value Type Description Boolean true if the table's schema is frozen, otherwise false . Remarks Frozen schema is required for Global Active Tables. See Also Global Active Tables in NDCS"
  },
  "api/Oracle.NoSQL.SDK.TableResult.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premise NoSQL database only. Gets the namespace of the table. Declaration public string Namespace { get; } Property Value Type Description String The namespace name or null if the table is not in a namespace. Remarks Note that the table name is prefixed with the namespace as well if it is in a namespace."
  },
  "api/Oracle.NoSQL.SDK.TableResult.Replicas.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.Replicas.html",
    "title": "Property Replicas | NoSQL SDK for .NET",
    "keywords": "Property Replicas Replicas Cloud Service only. Gets a list containing information for each replica, if this table is replicated (i.e. Global Active Table). Declaration public IReadOnlyList<ReplicaInfo> Replicas { get; } Property Value Type Description IReadOnlyList < ReplicaInfo > List containing information for each replica if this table is replicated, otherwise null . See Also ReplicaInfo Global Active Tables in NDCS"
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableDDL.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableDDL.html",
    "title": "Property TableDDL | NoSQL SDK for .NET",
    "keywords": "Property TableDDL TableDDL Gets the DDL (CREATE TABLE) statement used to create this table if available. Declaration public string TableDDL { get; } Property Value Type Description String The create table statement. Remarks If the table has been altered since initial creation, the statement is also altered to reflect the current table schema. This value, when non-null, is functionally equivalent to the schema returned by TableSchema . The most reliable way to get the DDL statement is using GetTableAsync on an existing table."
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableLimits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableLimits.html",
    "title": "Property TableLimits | NoSQL SDK for .NET",
    "keywords": "Property TableLimits TableLimits Gets the throughput and capacity limits for the table. Declaration public TableLimits TableLimits { get; } Property Value Type Description TableLimits Table limits. Remarks Valid for Cloud Service/Cloud Simulator only. For on-premise NoSQL database this property returns null ."
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the name of the table. Declaration public string TableName { get; } Property Value Type Description String Table name."
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableOCID.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableOCID.html",
    "title": "Property TableOCID | NoSQL SDK for .NET",
    "keywords": "Property TableOCID TableOCID Cloud Service only. Gets the OCID of the table. Declaration public string TableOCID { get; } Property Value Type Description String The table OCID or null if using on-premises service."
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableSchema.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableSchema.html",
    "title": "Property TableSchema | NoSQL SDK for .NET",
    "keywords": "Property TableSchema TableSchema Gets the table schema. Declaration public string TableSchema { get; } Property Value Type Description String Table schema as JSON string."
  },
  "api/Oracle.NoSQL.SDK.TableResult.TableState.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.TableState.html",
    "title": "Property TableState | NoSQL SDK for .NET",
    "keywords": "Property TableState TableState Gets the current table state. Declaration public TableState TableState { get; } Property Value Type Description TableState Current table state."
  },
  "api/Oracle.NoSQL.SDK.TableResult.WaitForCompletionAsync.html": {
    "href": "api/Oracle.NoSQL.SDK.TableResult.WaitForCompletionAsync.html",
    "title": "Method WaitForCompletionAsync | NoSQL SDK for .NET",
    "keywords": "Method WaitForCompletionAsync WaitForCompletionAsync(Nullable<TimeSpan>, Nullable<TimeSpan>, CancellationToken) Asynchronously waits for completion of table DDL operations. Declaration public Task<TableResult> WaitForCompletionAsync(Nullable<TimeSpan> timeout = null, Nullable<TimeSpan> pollDelay = null, CancellationToken cancellationToken = null) Parameters Type Name Description Nullable < TimeSpan > timeout (Optional) Timeout reflecting how long to keep polling for the operation completion. Must be positive value. Defaults to TablePollTimeout if the latter is set or to no timeout if the latter is not set. Nullable < TimeSpan > pollDelay (Optional) Delay between successive polls, determines how often the polls are performed. Must be positive value and not greater than the timeout. Defaults to TablePollDelay . CancellationToken cancellationToken (Optional) Cancellation token. Returns Type Description Task < TableResult > Task returning TableResult . Remarks Table DDL operations are issued by methods ExecuteTableDDLAsync and SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) . The wait is accomplished by polling the operation state at specified interval. When the operation completes, the table state should be Active or Dropped (only for DROP TABLE operation). The result of this method is a TableResult that represents the final state of the operation (which is the result of the last poll). If the operation fails, this method will throw exception with the information about the operation failure. Note that in addition to the result returned, this calling instance is modified with any change in table state or metadata and will reflect the operation completion upon return. This method need only be called on instances of TableResult returned from ExecuteTableDDLAsync and SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) . If you are using ExecuteTableDDLWithCompletionAsync or SetTableLimitsWithCompletionAsync(String, TableLimits, TableDDLOptions, CancellationToken) you need not call this method on the returned result, as it will already reflect operation completion. Exceptions Type Condition ArgumentException If timeout or pollDelay are invalid or pollDelay is greater than the timeout. TimeoutException Table DDL operation has not completed within the timeout period. May also be thrown if the service becomes unreachable due to network connectivity. InvalidOperationException If this method is called on an instance of TableResult other than those returned by ExecuteTableDDLAsync or SetTableLimitsAsync(String, TableLimits, TableDDLOptions, CancellationToken) or if the service is not in a valid state to perform the operation. NoSQLException NoSQLException or one of its subclasses may reflect the failure of the operation being polled for. See documentation for corresponding subclass of NoSQLException ."
  },
  "api/Oracle.NoSQL.SDK.TableSizeLimitException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableSizeLimitException.-ctor.html",
    "title": "Constructor TableSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Constructor TableSizeLimitException TableSizeLimitException() Initializes a new instance of TableSizeLimitException . Declaration public TableSizeLimitException() TableSizeLimitException(String) Initializes a new instance of TableSizeLimitException with the message that describes the current exception. Declaration public TableSizeLimitException(string message) Parameters Type Name Description String message A message that describes the current exception. TableSizeLimitException(String, Exception) Initializes a new instance of TableSizeLimitException with the message that describes the current exception and an inner exception. Declaration public TableSizeLimitException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableSizeLimitException.html": {
    "href": "api/Oracle.NoSQL.SDK.TableSizeLimitException.html",
    "title": "Class TableSizeLimitException | NoSQL SDK for .NET",
    "keywords": "Class TableSizeLimitException The exception that is thrown when table size limit has been exceeded by writing more data than the table can support. Inheritance Object NoSQLException TableSizeLimitException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableSizeLimitException : NoSQLException Remarks This exception is not retryable because the conditions that lead to it being thrown, while potentially transient, typically require user intervention. Constructors Name Description TableSizeLimitException() Initializes a new instance of TableSizeLimitException . TableSizeLimitException(String) Initializes a new instance of TableSizeLimitException with the message that describes the current exception. TableSizeLimitException(String, Exception) Initializes a new instance of TableSizeLimitException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.TableState.Active.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.Active.html",
    "title": "Field Active | NoSQL SDK for .NET",
    "keywords": "Field Active The table is ready to be used. This is the steady state after creation or modification. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TableState Active Returns Type Description TableState"
  },
  "api/Oracle.NoSQL.SDK.TableState.Creating.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.Creating.html",
    "title": "Field Creating | NoSQL SDK for .NET",
    "keywords": "Field Creating The table is being created and cannot yet be used. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TableState Creating Returns Type Description TableState"
  },
  "api/Oracle.NoSQL.SDK.TableState.Dropped.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.Dropped.html",
    "title": "Field Dropped | NoSQL SDK for .NET",
    "keywords": "Field Dropped The table has been dropped or does not exist. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TableState Dropped Returns Type Description TableState"
  },
  "api/Oracle.NoSQL.SDK.TableState.Dropping.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.Dropping.html",
    "title": "Field Dropping | NoSQL SDK for .NET",
    "keywords": "Field Dropping The table is being dropped and cannot be used. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TableState Dropping Returns Type Description TableState"
  },
  "api/Oracle.NoSQL.SDK.TableState.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.html",
    "title": "Class TableState | NoSQL SDK for .NET",
    "keywords": "Class TableState Describes the current state of the table. Inheritance Object TableState Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class TableState : Enum Fields Name Description Active The table is ready to be used. This is the steady state after creation or modification. Creating The table is being created and cannot yet be used. Dropped The table has been dropped or does not exist. Dropping The table is being dropped and cannot be used. Updating The table is being updated. It is available for normal use, but additional table modification operations are not permitted while the table is in this state. value__ See Also TableResult"
  },
  "api/Oracle.NoSQL.SDK.TableState.Updating.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.Updating.html",
    "title": "Field Updating | NoSQL SDK for .NET",
    "keywords": "Field Updating The table is being updated. It is available for normal use, but additional table modification operations are not permitted while the table is in this state. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TableState Updating Returns Type Description TableState"
  },
  "api/Oracle.NoSQL.SDK.TableState.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.TableState.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public int value__ Returns Type Description Int32"
  },
  "api/Oracle.NoSQL.SDK.TableTagsRequest.DefinedTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableTagsRequest.DefinedTags.html",
    "title": "Property DefinedTags | NoSQL SDK for .NET",
    "keywords": "Property DefinedTags DefinedTags Gets defined tags for the operation. Declaration public IDictionary<string, IDictionary<string, string>> DefinedTags { get; } Property Value Type Description IDictionary < String , IDictionary < String , String >> Defined tags."
  },
  "api/Oracle.NoSQL.SDK.TableTagsRequest.FreeFormTags.html": {
    "href": "api/Oracle.NoSQL.SDK.TableTagsRequest.FreeFormTags.html",
    "title": "Property FreeFormTags | NoSQL SDK for .NET",
    "keywords": "Property FreeFormTags FreeFormTags Gets free-form tags for the operation. Declaration public IDictionary<string, string> FreeFormTags { get; } Property Value Type Description IDictionary < String , String > Free-form tags."
  },
  "api/Oracle.NoSQL.SDK.TableTagsRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.TableTagsRequest.html",
    "title": "Class TableTagsRequest | NoSQL SDK for .NET",
    "keywords": "Class TableTagsRequest Cloud Service Only. Represents information about operation performed by SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) and SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) methods. Inheritance Object Request RequestWithTable TableOperationRequest TableDDLRequest TableTagsRequest Inherited Members TableDDLRequest.Statement TableDDLRequest.Options RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableTagsRequest : TableDDLRequest Properties Name Description DefinedTags Gets defined tags for the operation. FreeFormTags Gets free-form tags for the operation. See Also SetTableTagsAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) SetTableTagsWithCompletionAsync(String, IDictionary<String, IDictionary<String, String>>, IDictionary<String, String>, TableDDLOptions, CancellationToken) Request"
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.-ctor.html",
    "title": "Constructor TableUsageRecord | NoSQL SDK for .NET",
    "keywords": "Constructor TableUsageRecord TableUsageRecord() Declaration public TableUsageRecord()"
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.Duration.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.Duration.html",
    "title": "Property Duration | NoSQL SDK for .NET",
    "keywords": "Property Duration Duration Gets the time period (duration) of this usage record. Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan The duration."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.html",
    "title": "Class TableUsageRecord | NoSQL SDK for .NET",
    "keywords": "Class TableUsageRecord Cloud Service/Cloud Simulator only. Table usage records are part of TableUsageResult . Each represents a single usage record, or slice, that includes information about read and write throughput consumed during that period as well as the current information regarding the storage capacity. In addition the count of throttling exceptions for the period is reported. Inheritance Object TableUsageRecord Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableUsageRecord : Object Constructors Name Description TableUsageRecord() Properties Name Description Duration Gets the time period (duration) of this usage record. MaxShardUsagePercent Gets the percentage of allowed storage usage for the shard with the highest usage percentage across all table shards. ReadThrottleCount Gets the number of read throttling exceptions on this table in the time period. ReadUnits Gets the number of read units consumed during this period. StartTime Gets the start time for this usage record. StorageGB Gets the amount of storage consumed by the table in gigabytes. This information may be out of date as it is not maintained in real time. StorageThrottleCount Gets the number of storage throttling exceptions on this table in the time period. WriteThrottleCount Gets the number of write throttling exceptions on this table in the time period. WriteUnits Gets the number of write units consumed during this period. Methods Name Description ToString() Returns a string representing this table usage record."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.MaxShardUsagePercent.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.MaxShardUsagePercent.html",
    "title": "Property MaxShardUsagePercent | NoSQL SDK for .NET",
    "keywords": "Property MaxShardUsagePercent MaxShardUsagePercent Gets the percentage of allowed storage usage for the shard with the highest usage percentage across all table shards. Declaration public int MaxShardUsagePercent { get; } Property Value Type Description Int32 Maximum shard usage percentage. Remarks This property can be used as a gauge of total storage available as well as a hint for key distribution across shards."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.ReadThrottleCount.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.ReadThrottleCount.html",
    "title": "Property ReadThrottleCount | NoSQL SDK for .NET",
    "keywords": "Property ReadThrottleCount ReadThrottleCount Gets the number of read throttling exceptions on this table in the time period. Declaration public int ReadThrottleCount { get; } Property Value Type Description Int32 Number of read throttling exceptions. See Also ReadThrottlingException"
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.ReadUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.ReadUnits.html",
    "title": "Property ReadUnits | NoSQL SDK for .NET",
    "keywords": "Property ReadUnits ReadUnits Gets the number of read units consumed during this period. Declaration public int ReadUnits { get; } Property Value Type Description Int32 Number of read units."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.StartTime.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.StartTime.html",
    "title": "Property StartTime | NoSQL SDK for .NET",
    "keywords": "Property StartTime StartTime Gets the start time for this usage record. Declaration public DateTime StartTime { get; } Property Value Type Description DateTime Start time."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.StorageGB.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.StorageGB.html",
    "title": "Property StorageGB | NoSQL SDK for .NET",
    "keywords": "Property StorageGB StorageGB Gets the amount of storage consumed by the table in gigabytes. This information may be out of date as it is not maintained in real time. Declaration public int StorageGB { get; } Property Value Type Description Int32 Storage in gigabytes."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.StorageThrottleCount.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.StorageThrottleCount.html",
    "title": "Property StorageThrottleCount | NoSQL SDK for .NET",
    "keywords": "Property StorageThrottleCount StorageThrottleCount Gets the number of storage throttling exceptions on this table in the time period. Declaration public int StorageThrottleCount { get; } Property Value Type Description Int32 Number of storage throttling exceptions. See Also TableSizeLimitException"
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Returns a string representing this table usage record. Declaration public override string ToString() Returns Type Description String A string containing property names and values of this table usage record."
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.WriteThrottleCount.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.WriteThrottleCount.html",
    "title": "Property WriteThrottleCount | NoSQL SDK for .NET",
    "keywords": "Property WriteThrottleCount WriteThrottleCount Gets the number of write throttling exceptions on this table in the time period. Declaration public int WriteThrottleCount { get; } Property Value Type Description Int32 Number of write throttling exceptions. See Also WriteThrottlingException"
  },
  "api/Oracle.NoSQL.SDK.TableUsageRecord.WriteUnits.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageRecord.WriteUnits.html",
    "title": "Property WriteUnits | NoSQL SDK for .NET",
    "keywords": "Property WriteUnits WriteUnits Gets the number of write units consumed during this period. Declaration public int WriteUnits { get; } Property Value Type Description Int32 Number of write units."
  },
  "api/Oracle.NoSQL.SDK.TableUsageResult.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageResult.html",
    "title": "Class TableUsageResult | NoSQL SDK for .NET",
    "keywords": "Class TableUsageResult Cloud Service/Cloud Simulator only. Represents the result of GetTableUsage operation. Inheritance Object TableUsageResult Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TableUsageResult : Object Remarks This class represents the result of GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) API. It encapsulates the dynamic state of requested table. Properties Name Description NextIndex Gets the next index after the last table usage record returned. TableName Gets the name of the table. UsageRecords Gets the list of table usage records returned according to criteria used when calling GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) . The records are in chronological order. See Also GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) TableUsageRecord"
  },
  "api/Oracle.NoSQL.SDK.TableUsageResult.NextIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageResult.NextIndex.html",
    "title": "Property NextIndex | NoSQL SDK for .NET",
    "keywords": "Property NextIndex NextIndex Gets the next index after the last table usage record returned. Declaration public int NextIndex { get; } Property Value Type Description Int32 Next table name index. Remarks If you are paging table names manually with GetTableUsageAsync assign this value to FromIndex . See the example in GetTableUsageOptions . This property is not needed if you are using GetTableUsageAsyncEnumerable ."
  },
  "api/Oracle.NoSQL.SDK.TableUsageResult.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageResult.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the name of the table. Declaration public string TableName { get; } Property Value Type Description String Table name."
  },
  "api/Oracle.NoSQL.SDK.TableUsageResult.UsageRecords.html": {
    "href": "api/Oracle.NoSQL.SDK.TableUsageResult.UsageRecords.html",
    "title": "Property UsageRecords | NoSQL SDK for .NET",
    "keywords": "Property UsageRecords UsageRecords Gets the list of table usage records returned according to criteria used when calling GetTableUsageAsync(String, GetTableUsageOptions, CancellationToken) . The records are in chronological order. Declaration public IReadOnlyList<TableUsageRecord> UsageRecords { get; } Property Value Type Description IReadOnlyList < TableUsageRecord > List of table usage records."
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.AsDateTime.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.AsDateTime.html",
    "title": "Property AsDateTime | NoSQL SDK for .NET",
    "keywords": "Property AsDateTime AsDateTime Gets the value of this instance as date and time. Declaration public override DateTime AsDateTime { get; } Property Value Type Description DateTime The DateTime value that this instance represents. Overrides FieldValue.AsDateTime"
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.-ctor.html",
    "title": "Constructor TimestampValue | NoSQL SDK for .NET",
    "keywords": "Constructor TimestampValue TimestampValue(DateTime) Initializes a new instance of TimestampValue with the specified DateTime value. Declaration public TimestampValue(DateTime value) Parameters Type Name Description DateTime value A date and time value which this instance will represent. Remarks The date and time value represented by this instance is obtained by converting the provided value to UTC by ToUniversalTime() (no conversion is performed if the System.DateTime.Kind of value is Utc . See Also ToUniversalTime() TimestampValue(Int64) Initializes a new instance of TimestampValue with the specified number of milliseconds since the Unix Epoch. Declaration public TimestampValue(long value) Parameters Type Name Description Int64 value The number of milliseconds since the Unix Epoch. Remarks This method performs the same conversion as ToDateTime() . The resulting DateTime value is always in UTC. Exceptions Type Condition OverflowException If value milliseconds produces a TimeSpan value less than MinValue or greater than MaxValue . ArgumentOutOfRangeException If the resulting DateTime value is less than MinValue or greater than MaxValue See Also ToDateTime() TimestampValue(String) Initializes a new instance of TimestampValue with the specified date and time string. Declaration public TimestampValue(string value) Parameters Type Name Description String value A date and time string from which to initialize this instance. Remarks This method performs the same conversion as ToDateTime(String) and then converts the resulting DateTime to UTC using ToUniversalTime() . Exceptions Type Condition FormatException The value is not a valid date and time string. See Also ToDateTime(String) ToUniversalTime()"
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.DbType.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.DbType.html",
    "title": "Property DbType | NoSQL SDK for .NET",
    "keywords": "Property DbType DbType Gets DbType of this instance which represents the type of this value. Declaration public override DbType DbType { get; } Property Value Type Description DbType Timestamp Overrides FieldValue.DbType"
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.html",
    "title": "Class TimestampValue | NoSQL SDK for .NET",
    "keywords": "Class TimestampValue Represents a date and time value. Inheritance Object FieldValue TimestampValue Implements IComparable < FieldValue > IEquatable < FieldValue > Inherited Members FieldValue.JsonNull FieldValue.Null FieldValue.ToByteArray() FieldValue.ToBoolean() FieldValue.ToInt32() FieldValue.ToDouble() FieldValue.ToDecimal() FieldValue.ToDateTime() FieldValue.ToString() FieldValue.ToJsonString(JsonOutputOptions) FieldValue.DeserializeFromJson(Utf8JsonReader, JsonInputOptions) FieldValue.FromJsonString(String, JsonInputOptions) FieldValue.CompareTo(FieldValue) FieldValue.Equals(FieldValue) FieldValue.Equals(Object) FieldValue.GetHashCode() FieldValue.AsByteArray FieldValue.AsBoolean FieldValue.AsDouble FieldValue.AsInt32 FieldValue.AsInt64 FieldValue.AsString FieldValue.AsDecimal FieldValue.AsArrayValue FieldValue.AsMapValue FieldValue.AsRecordValue FieldValue.Count FieldValue.Item[String] FieldValue.Item[Int32] Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class TimestampValue : FieldValue Remarks This class is used to represent values of NoSQL data type Timestamp . This value is represented by a C# type DateTime indicating an instance of time in UTC. Instances of TimestampValue always represent their value in UTC. The values of this instance can also be converted to long representing number of milliseconds since Unix Epoch, 1970-01-01 00:00:00 UTC. Reverse conversion is also supported (see ToDateTime() ). In JSON, the instances of this class may be represented as either String or Number depending on the value of DateTimeAsMillis . If represented as String , the format is given by DateTimeFormatString . The default format is ISO8601 in UTC given by DefaultDateTimeFormatString . If represented as Number , the value is the number of milliseconds since the Unix Epoch. Constructors Name Description TimestampValue(DateTime) Initializes a new instance of TimestampValue with the specified DateTime value. TimestampValue(Int64) Initializes a new instance of TimestampValue with the specified number of milliseconds since the Unix Epoch. TimestampValue(String) Initializes a new instance of TimestampValue with the specified date and time string. Properties Name Description AsDateTime Gets the value of this instance as date and time. DbType Gets DbType of this instance which represents the type of this value. Methods Name Description SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . ToInt64() Converts the value represented by this instance to a 64-bit sighed integer representing the number of milliseconds since the Unix Epoch. See Also FieldValue"
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.SerializeAsJson.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.SerializeAsJson.html",
    "title": "Method SerializeAsJson | NoSQL SDK for .NET",
    "keywords": "Method SerializeAsJson SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Writes JSON representation of the value to the stream represented by Utf8JsonWriter . Declaration public override void SerializeAsJson(Utf8JsonWriter writer, JsonOutputOptions options = null) Parameters Type Name Description Utf8JsonWriter writer The writer to which the value represented by this instance is written. JsonOutputOptions options (Optional) Options that allow limited customization of the output. If not specified or null , appropriate defaults will be used as described in JsonOutputOptions . Overrides FieldValue.SerializeAsJson(Utf8JsonWriter, JsonOutputOptions) Remarks This is an advanced method to optimize performance, using functionality in System.Text.Json namespace. Most applications can use ToJsonString(JsonOutputOptions) . See the remarks section of FieldValue on mappings between JSON types and subclasses of FieldValue . Note that this method writes the value at the current position of the stream represented by Utf8JsonWriter and it does not flush the stream. The state of Utf8JsonWriter should be managed by the caller. See Also Utf8JsonWriter JsonOutputOptions"
  },
  "api/Oracle.NoSQL.SDK.TimestampValue.ToInt64.html": {
    "href": "api/Oracle.NoSQL.SDK.TimestampValue.ToInt64.html",
    "title": "Method ToInt64 | NoSQL SDK for .NET",
    "keywords": "Method ToInt64 ToInt64() Converts the value represented by this instance to a 64-bit sighed integer representing the number of milliseconds since the Unix Epoch. Declaration public override long ToInt64() Returns Type Description Int64 A number of milliseconds since the Unix Epoch of the value represented by this instance. Overrides FieldValue.ToInt64() Remarks This method performs reverse conversion to that done by ToDateTime() . It returns the number of milliseconds since the Unix Epoch, 00:00:00 UTC, January 1, 1970, of the value represented by this instance. If this instance represents date and time before the Unix Epoch, the returned value is negative. See Also ToDateTime()"
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.DoNotExpire.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.DoNotExpire.html",
    "title": "Field DoNotExpire | NoSQL SDK for .NET",
    "keywords": "Field DoNotExpire Represents a special TTL value that indicates no expiration. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public static readonly TimeToLive DoNotExpire Returns Type Description TimeToLive Remarks Use this value when you perform a Put operation on existing row that has TTL set on it and you want to remove its TTL."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.FromExpirationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.FromExpirationTime.html",
    "title": "Method FromExpirationTime | NoSQL SDK for .NET",
    "keywords": "Method FromExpirationTime FromExpirationTime(DateTime, Nullable<DateTime>, Nullable<TTLTimeUnit>) Constructs TTL from absolute expiration time given reference time from which to measure record expiration. Declaration public static TimeToLive FromExpirationTime(DateTime expirationTime, Nullable<DateTime> referenceTime = null, Nullable<TTLTimeUnit> timeUnit = null) Parameters Type Name Description DateTime expirationTime Expiration time. Must be greater than referenceTime . Nullable < DateTime > referenceTime (Optional) Reference time. Defaults to UtcNow . Nullable < TTLTimeUnit > timeUnit (Optional) Specifies TimeUnit of the resulting TTL. If not specified, the time unit is determined as described. Returns Type Description TimeToLive TTL computed according to the description. Remarks The TTL is computed as follows depending on whether timeUnit parameter is specified: If timeUnit is specified, expiration time is rounded up to the nearest day or hour boundary depending on the value of timeUnit . Then the duration is computed as the difference between the adjusted expiration time and the reference time and is rounded up to the nearest day or hour boundary depending on the value of timeUnit . TTL with the resulting number of days or hours and specified timeUnit is returned. If timeUnit is not specified, expiration time is rounded up to the nearest hour boundary. If the adjusted expiration time indicates midnight in UTC time zone, the returned TTL will be in days, otherwise it will be in hours. Then the duration is computed as the difference between the adjusted expiration time and the reference time and is rounded up to the nearest day or hour boundary as determined above. TTL with the resulting number of days or hours and the time unit as determined above is returned. If the reference time is not specified, it defaults to current time in UTC ( UtcNow ). The expiration time specified must be later than the reference time. If not in UTC already, expirationTime and referenceTime (if specified) are converted to UTC via ToUniversalTime() before computing the returned TTL (this also means that both Unspecified and Local will be treated as local time and the conversion would be performed). Exceptions Type Condition ArgumentException If timeUnit has invalid value. ArgumentOutOfRangeException If expirationTime is less then or equal referenceTime (or current UTC time if referenceTime is not specified)."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.html",
    "title": "Class TimeToLive | NoSQL SDK for .NET",
    "keywords": "Class TimeToLive Represents time to live (TTL) of a row in the NoSQL Database. Inheritance Object TimeToLive Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class TimeToLive : ValueType Remarks TimeToLive is used used to specify time to live (TTL) for rows provided for Put operations such as PutAsync(String, MapValue, PutOptions, CancellationToken) and others. TTL is restricted to durations of days and hours, with day being 24 hours. TimeToLive may specify number of days or number of hours, but not both and may be created with methods OfDays(Int64) and OfHours(Int64) . Sometimes you may need to indicate explicitly that the record does not expire. This is needed when you perform a Put operation on existing record and want to remove its expiration. You may indicate no expiration by using the value DoNotExpire . The record expiration time is determined as follows: Records expire on day or hour boundaries, depending on whether the TimeToLive instance is created with days or hours. At the time of the Put operation, TTL property is used to compute the record's expiration time by first converting it from days (or hours) to milliseconds, and then adding it to the current system time. If the resulting expiration time is not evenly divisible by the number of milliseconds in one day (or hour), it is rounded up to the nearest day (or hour). The day and hour boundaries (the day boundary is at midnight) are considered in UTC time zone. The minimum TTL that can be specified is 1 hour. Because of the rounding behavior described above, the actual record duration will be longer than specified in the TTL (because of rounding up). Using the duration of days is recommended as it will result in the least amount of storage overhead compared to the duration of hours. Fields Name Description DoNotExpire Represents a special TTL value that indicates no expiration. Properties Name Description TimeUnit Gets the time unit used in this instance. Value Gets the number of days or hours in this instance. Methods Name Description FromExpirationTime(DateTime, Nullable<DateTime>, Nullable<TTLTimeUnit>) Constructs TTL from absolute expiration time given reference time from which to measure record expiration. OfDays(Int64) Creates TTL with duration of days. OfHours(Int64) Creates TTL with duration of hours. ToExpirationTime(Nullable<DateTime>) Converts TTL to absolute expiration time. ToString() Returns the string representation of this instance."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.OfDays.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.OfDays.html",
    "title": "Method OfDays | NoSQL SDK for .NET",
    "keywords": "Method OfDays OfDays(Int64) Creates TTL with duration of days. Declaration public static TimeToLive OfDays(long value) Parameters Type Name Description Int64 value Number of days. Must be a positive value. Returns Type Description TimeToLive TTL object representing specified duration in days. Exceptions Type Condition ArgumentOutOfRangeException If value is negative or zero."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.OfHours.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.OfHours.html",
    "title": "Method OfHours | NoSQL SDK for .NET",
    "keywords": "Method OfHours OfHours(Int64) Creates TTL with duration of hours. Declaration public static TimeToLive OfHours(long value) Parameters Type Name Description Int64 value Number of hours. Must be a positive value. Returns Type Description TimeToLive TTL object representing specified duration in hours. Exceptions Type Condition ArgumentOutOfRangeException If value is negative or zero."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.TimeUnit.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.TimeUnit.html",
    "title": "Property TimeUnit | NoSQL SDK for .NET",
    "keywords": "Property TimeUnit TimeUnit Gets the time unit used in this instance. Declaration public TTLTimeUnit TimeUnit { get; } Property Value Type Description TTLTimeUnit The time unit that indicates whether this instance represents TTL in days or hours."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.ToExpirationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.ToExpirationTime.html",
    "title": "Method ToExpirationTime | NoSQL SDK for .NET",
    "keywords": "Method ToExpirationTime ToExpirationTime(Nullable<DateTime>) Converts TTL to absolute expiration time. Declaration public DateTime ToExpirationTime(Nullable<DateTime> referenceTime = null) Parameters Type Name Description Nullable < DateTime > referenceTime (Optional) Reference time. Defaults to UtcNow . Returns Type Description DateTime Expiration time, in UTC. Remarks This method converts TTL to absolute expiration time given the reference time from which to measure the expiration. If the reference time is not provided, it defaults to current time. The semantics follows the rounding behavior described so that the returned value will be rounded up to the nearest hour or day boundary. The value returned is always in UTC (its System.DateTime.Kind is Utc ). If referenceTime is not in UTC it will be converted to UTC via ToUniversalTime() before computing the expiration time (this also means that both Unspecified and Local will be treated as local time and the conversion would be performed). Exceptions Type Condition NotSupportedException If this instance is DoNotExpire . ArgumentOutOfRangeException If the resulting expiration time is greater than MaxValue ."
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.ToString.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.ToString.html",
    "title": "Method ToString | NoSQL SDK for .NET",
    "keywords": "Method ToString ToString() Returns the string representation of this instance. Declaration public override string ToString() Returns Type Description String String representation, e.g. \"5 days\" or \"5 hours\""
  },
  "api/Oracle.NoSQL.SDK.TimeToLive.Value.html": {
    "href": "api/Oracle.NoSQL.SDK.TimeToLive.Value.html",
    "title": "Property Value | NoSQL SDK for .NET",
    "keywords": "Property Value Value Gets the number of days or hours in this instance. Declaration public long Value { get; } Property Value Type Description Int64 Number of days or hours."
  },
  "api/Oracle.NoSQL.SDK.TTLTimeUnit.Days.html": {
    "href": "api/Oracle.NoSQL.SDK.TTLTimeUnit.Days.html",
    "title": "Field Days | NoSQL SDK for .NET",
    "keywords": "Field Days TTL is in days. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TTLTimeUnit Days Returns Type Description TTLTimeUnit"
  },
  "api/Oracle.NoSQL.SDK.TTLTimeUnit.Hours.html": {
    "href": "api/Oracle.NoSQL.SDK.TTLTimeUnit.Hours.html",
    "title": "Field Hours | NoSQL SDK for .NET",
    "keywords": "Field Hours TTL is in hours. Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public const TTLTimeUnit Hours Returns Type Description TTLTimeUnit"
  },
  "api/Oracle.NoSQL.SDK.TTLTimeUnit.html": {
    "href": "api/Oracle.NoSQL.SDK.TTLTimeUnit.html",
    "title": "Class TTLTimeUnit | NoSQL SDK for .NET",
    "keywords": "Class TTLTimeUnit Represents time unit used in a time to live (TTL) value. Inheritance Object TTLTimeUnit Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class TTLTimeUnit : Enum Fields Name Description Days TTL is in days. Hours TTL is in hours. value__ See Also TimeToLive"
  },
  "api/Oracle.NoSQL.SDK.TTLTimeUnit.value__.html": {
    "href": "api/Oracle.NoSQL.SDK.TTLTimeUnit.value__.html",
    "title": "Field value__ | NoSQL SDK for .NET",
    "keywords": "Field value__ Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public byte value__ Returns Type Description Byte"
  },
  "api/Oracle.NoSQL.SDK.UnauthorizedException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.UnauthorizedException.-ctor.html",
    "title": "Constructor UnauthorizedException | NoSQL SDK for .NET",
    "keywords": "Constructor UnauthorizedException UnauthorizedException() Initializes a new instance of UnauthorizedException . Declaration public UnauthorizedException() UnauthorizedException(String) Initializes a new instance of UnauthorizedException with the message that describes the current exception. Declaration public UnauthorizedException(string message) Parameters Type Name Description String message A message that describes the current exception. UnauthorizedException(String, Exception) Initializes a new instance of UnauthorizedException with the message that describes the current exception and an inner exception. Declaration public UnauthorizedException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.UnauthorizedException.html": {
    "href": "api/Oracle.NoSQL.SDK.UnauthorizedException.html",
    "title": "Class UnauthorizedException | NoSQL SDK for .NET",
    "keywords": "Class UnauthorizedException The exception that is thrown when an application does not have sufficient permission to perform a request. Inheritance Object NoSQLException UnauthorizedException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class UnauthorizedException : NoSQLException Constructors Name Description UnauthorizedException() Initializes a new instance of UnauthorizedException . UnauthorizedException(String) Initializes a new instance of UnauthorizedException with the message that describes the current exception. UnauthorizedException(String, Exception) Initializes a new instance of UnauthorizedException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.UnsupportedProtocolException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.UnsupportedProtocolException.-ctor.html",
    "title": "Constructor UnsupportedProtocolException | NoSQL SDK for .NET",
    "keywords": "Constructor UnsupportedProtocolException UnsupportedProtocolException() Initializes a new instance of UnsupportedProtocolException . Declaration public UnsupportedProtocolException() UnsupportedProtocolException(String) Initializes a new instance of UnsupportedProtocolException with the message that describes the current exception. Declaration public UnsupportedProtocolException(string message) Parameters Type Name Description String message A message that describes the current exception. UnsupportedProtocolException(String, Exception) Initializes a new instance of UnsupportedProtocolException with the message that describes the current exception and an inner exception. Declaration public UnsupportedProtocolException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.UnsupportedProtocolException.html": {
    "href": "api/Oracle.NoSQL.SDK.UnsupportedProtocolException.html",
    "title": "Class UnsupportedProtocolException | NoSQL SDK for .NET",
    "keywords": "Class UnsupportedProtocolException The exception that is thrown if the service does not support the current driver protocol version. Inheritance Object NoSQLException UnsupportedProtocolException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class UnsupportedProtocolException : NoSQLException Remarks This exception indicates that the service is running at a lower protocol version than the driver (i.e. the driver is using a newer protocol version than the service supports). The driver will attempt to decrement its internal protocol version and retry the operation. If the protocol version cannot be decremented, this exception will be thrown. This exception is not retryable (it is only retried internally and should not be retried by the retry handler). Constructors Name Description UnsupportedProtocolException() Initializes a new instance of UnsupportedProtocolException . UnsupportedProtocolException(String) Initializes a new instance of UnsupportedProtocolException with the message that describes the current exception. UnsupportedProtocolException(String, Exception) Initializes a new instance of UnsupportedProtocolException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.UnsupportedQueryVersionException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.UnsupportedQueryVersionException.-ctor.html",
    "title": "Constructor UnsupportedQueryVersionException | NoSQL SDK for .NET",
    "keywords": "Constructor UnsupportedQueryVersionException UnsupportedQueryVersionException() Initializes a new instance of UnsupportedQueryVersionException . Declaration public UnsupportedQueryVersionException() UnsupportedQueryVersionException(String) Initializes a new instance of UnsupportedQueryVersionException with the message that describes the current exception. Declaration public UnsupportedQueryVersionException(string message) Parameters Type Name Description String message A message that describes the current exception. UnsupportedQueryVersionException(String, Exception) Initializes a new instance of UnsupportedQueryVersionException with the message that describes the current exception and an inner exception. Declaration public UnsupportedQueryVersionException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.UnsupportedQueryVersionException.html": {
    "href": "api/Oracle.NoSQL.SDK.UnsupportedQueryVersionException.html",
    "title": "Class UnsupportedQueryVersionException | NoSQL SDK for .NET",
    "keywords": "Class UnsupportedQueryVersionException The exception that is thrown if the service does not support the current query protocol version. Inheritance Object NoSQLException UnsupportedQueryVersionException Inherited Members NoSQLException.Message NoSQLException.Request NoSQLException.IsRetryable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class UnsupportedQueryVersionException : NoSQLException Remarks This exception indicates that the service is running at a lower query protocol version than the driver (i.e. the driver is using a newer query protocol version than the service supports). The driver will attempt to decrement its internal query protocol version and retry the operation. If the query protocol version cannot be decremented, this exception will be thrown. This exception is not retryable (it is only retried internally and should not be retried by the retry handler). Constructors Name Description UnsupportedQueryVersionException() Initializes a new instance of UnsupportedQueryVersionException . UnsupportedQueryVersionException(String) Initializes a new instance of UnsupportedQueryVersionException with the message that describes the current exception. UnsupportedQueryVersionException(String, Exception) Initializes a new instance of UnsupportedQueryVersionException with the message that describes the current exception and an inner exception."
  },
  "api/Oracle.NoSQL.SDK.UserInfo.html": {
    "href": "api/Oracle.NoSQL.SDK.UserInfo.html",
    "title": "Class UserInfo | NoSQL SDK for .NET",
    "keywords": "Class UserInfo On-premise only. Represents information associated with a user including the id and user name in the system. Inheritance Object UserInfo Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public sealed class UserInfo : ValueType Properties Name Description Id Gets the user id. Name Gets the user name. See Also ListUsersAsync(AdminOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.UserInfo.Id.html": {
    "href": "api/Oracle.NoSQL.SDK.UserInfo.Id.html",
    "title": "Property Id | NoSQL SDK for .NET",
    "keywords": "Property Id Id Gets the user id. Declaration public string Id { get; } Property Value Type Description String The user id."
  },
  "api/Oracle.NoSQL.SDK.UserInfo.Name.html": {
    "href": "api/Oracle.NoSQL.SDK.UserInfo.Name.html",
    "title": "Property Name | NoSQL SDK for .NET",
    "keywords": "Property Name Name Gets the user name. Declaration public string Name { get; } Property Value Type Description String The user name."
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.AbortIfUnsuccessful.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.AbortIfUnsuccessful.html",
    "title": "Property AbortIfUnsuccessful | NoSQL SDK for .NET",
    "keywords": "Property AbortIfUnsuccessful AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Put or Delete operation fails. Declaration public bool AbortIfUnsuccessful { get; set; } Property Value Type Description Boolean true to abort the transaction if any Put or Delete operation fails, otherwise false . The default is false . Remarks If set to true and any Put or Delete operation fails, the entire transaction started by WriteManyAsync will be aborted. true value of this property overrides the value of AbortIfUnsuccessful property for any operation in WriteOperationCollection . false value of this property has no effect on any value of AbortIfUnsuccessful property for the operations in WriteOperationCollection ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.Compartment.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.Compartment.html",
    "title": "Property Compartment | NoSQL SDK for .NET",
    "keywords": "Property Compartment Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Declaration public string Compartment { get; set; } Property Value Type Description String Compartment id or name. If not set, defaults to Compartment . Remarks See remarks section of NoSQLClient ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.-ctor.html",
    "title": "Constructor WriteManyOptions | NoSQL SDK for .NET",
    "keywords": "Constructor WriteManyOptions WriteManyOptions() Declaration public WriteManyOptions()"
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.Durability.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.Durability.html",
    "title": "Property Durability | NoSQL SDK for .NET",
    "keywords": "Property Durability Durability On-premise only. Gets or sets Durability value to use for the operation. Declaration public Nullable<Durability> Durability { get; set; } Property Value Type Description Nullable < Durability > Durability used for the operation. If not set, defaults to Durability . Remarks Durability determines SyncPolicy for Master and Replicas as well as ReplicaAckPolicy for the Replicas. See Also Durability"
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.html",
    "title": "Class WriteManyOptions | NoSQL SDK for .NET",
    "keywords": "Class WriteManyOptions Represents options passed to WriteManyAsync APIs. Inheritance Object WriteManyOptions Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteManyOptions : Object Remarks In addition to these options, you may also specify separate options for each Put and Delete operation when that operation is added to WriteOperationCollection . Constructors Name Description WriteManyOptions() Properties Name Description AbortIfUnsuccessful Gets or sets the value that determines whether to abort the transaction if any Put or Delete operation fails. Compartment Cloud service only. Gets or sets the compartment id or name for the operation. Durability On-premise only. Gets or sets Durability value to use for the operation. Namespace On-premises only. Gets or sets the optional namespace. Timeout Gets or sets the timeout for the request. See Also WriteOperationCollection"
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.Namespace.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.Namespace.html",
    "title": "Property Namespace | NoSQL SDK for .NET",
    "keywords": "Property Namespace Namespace On-premises only. Gets or sets the optional namespace. Declaration public string Namespace { get; set; } Property Value Type Description String The namespace to use for the operation. If not set, defaults to Namespace . Remarks This value overrides default namespace set with Namespace . Note: if a namespace is specified in the table name for the request (using the namespace:table_name format), that value will override this setting."
  },
  "api/Oracle.NoSQL.SDK.WriteManyOptions.Timeout.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyOptions.Timeout.html",
    "title": "Property Timeout | NoSQL SDK for .NET",
    "keywords": "Property Timeout Timeout Gets or sets the timeout for the request. Declaration public Nullable<TimeSpan> Timeout { get; set; } Property Value Type Description Nullable < TimeSpan > Request timeout. If set, must be a positive value. If not set, defaults to Timeout ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest.html",
    "title": "Class WriteManyRequest | NoSQL SDK for .NET",
    "keywords": "Class WriteManyRequest Base class for WriteManyRequest<TRow> . Only used internally. Inheritance Object Request WriteManyRequest WriteManyRequest<TRow> Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class WriteManyRequest : Request"
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.DeleteManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.DeleteManyOptions.html",
    "title": "Property DeleteManyOptions | NoSQL SDK for .NET",
    "keywords": "Property DeleteManyOptions DeleteManyOptions Gets options for DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) API if this operation was performed by DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) . Declaration public DeleteManyOptions DeleteManyOptions { get; } Property Value Type Description DeleteManyOptions The options for DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) API if this operation was performed by DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) , otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.html",
    "title": "Class WriteManyRequest<TRow> | NoSQL SDK for .NET",
    "keywords": "Class WriteManyRequest<TRow> Represents information about WriteMany operations performed by WriteManyAsync , PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) and DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) APIs. Inheritance Object Request WriteManyRequest WriteManyRequest<TRow> Inherited Members Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteManyRequest<TRow> : WriteManyRequest Type Parameters Name Description TRow The type of value representing the row. Must be a reference type. Currently the only supported type is RecordValue . Properties Name Description DeleteManyOptions Gets options for DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) API if this operation was performed by DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) . Operations Gets the collection of operations that are part of this WriteMany operation. PutManyOptions Gets options for PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) API if this operation was performed by PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) . TableName Gets the name, if available. WriteManyOptions Gets options for WriteManyAsync API if this operation was performed by WriteManyAsync . See Also WriteManyAsync PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) Request RequestWithTable"
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.Operations.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.Operations.html",
    "title": "Property Operations | NoSQL SDK for .NET",
    "keywords": "Property Operations Operations Gets the collection of operations that are part of this WriteMany operation. Declaration public WriteOperationCollection Operations { get; } Property Value Type Description WriteOperationCollection Instance of WriteOperationCollection that represents a collection of operations that are instances of IWriteOperation . For PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) and DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) the operations in the collection will be either all PutOperation or all DeleteOperation instances respectively."
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.PutManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.PutManyOptions.html",
    "title": "Property PutManyOptions | NoSQL SDK for .NET",
    "keywords": "Property PutManyOptions PutManyOptions Gets options for PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) API if this operation was performed by PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) . Declaration public PutManyOptions PutManyOptions { get; } Property Value Type Description PutManyOptions The options for PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) API if this operation was performed by PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) , otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.TableName.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.TableName.html",
    "title": "Property TableName | NoSQL SDK for .NET",
    "keywords": "Property TableName TableName Gets the name, if available. Declaration public string TableName { get; } Property Value Type Description String Table name if available, otherwise null . This property will be null if using WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Table name must be specified for all other WriteMany, PutMany and DeleteMany APIs."
  },
  "api/Oracle.NoSQL.SDK.WriteManyRequest-1.WriteManyOptions.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyRequest-1.WriteManyOptions.html",
    "title": "Property WriteManyOptions | NoSQL SDK for .NET",
    "keywords": "Property WriteManyOptions WriteManyOptions Gets options for WriteManyAsync API if this operation was performed by WriteManyAsync . Declaration public WriteManyOptions WriteManyOptions { get; } Property Value Type Description WriteManyOptions The options for WriteManyAsync API if this operation was performed by WriteManyAsync , otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.ConsumedCapacity.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.ConsumedCapacity.html",
    "title": "Property ConsumedCapacity | NoSQL SDK for .NET",
    "keywords": "Property ConsumedCapacity ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. Declaration public ConsumedCapacity ConsumedCapacity { get; } Property Value Type Description ConsumedCapacity Consumed capacity. For on-premise NoSQL Database, this value is always null . See Also ConsumedCapacity"
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.FailedOperationIndex.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.FailedOperationIndex.html",
    "title": "Property FailedOperationIndex | NoSQL SDK for .NET",
    "keywords": "Property FailedOperationIndex FailedOperationIndex Gets the index of the failed Put or Delete sub operation that resulted in the entire operation aborting. Declaration public Nullable<int> FailedOperationIndex { get; } Property Value Type Description Nullable < Int32 > Index of the failed Put or Delete sub operation in the Results list if the entire operation was aborted, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.FailedOperationResult.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.FailedOperationResult.html",
    "title": "Property FailedOperationResult | NoSQL SDK for .NET",
    "keywords": "Property FailedOperationResult FailedOperationResult Gets the result of the failed Put or Delete sub operation that resulted in the entire operation aborting. Declaration public WriteOperationResult<TRow> FailedOperationResult { get; } Property Value Type Description WriteOperationResult <TRow> Result of the failed Put or Delete sub operation if the entire operation was aborted, otherwise null ."
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.html",
    "title": "Class WriteManyResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class WriteManyResult<TRow> Represents the result of WriteMany, PutMany or DeleteMany operation. Inheritance Object WriteManyResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteManyResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow of Put or Delete sub operation. Must be a reference type. Currently the only supported type is RecordValue . Remarks This class is the result of WriteManyAsync , PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) and DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) APIs. If the operation succeeds, Success is true and the execution result of each Put or Delete sub operation is available as part of Results property as an instance of WriteOperationResult<TRow> . If the operation is aborted because of the failure of a Put or Delete sub operation that has AbortIfUnsuccessful set to true or because of failure of any sub operation if AbortIfUnsuccessful , AbortIfUnsuccessful or AbortIfUnsuccessful is set to true , then Success is false and Results is set to null . The index of failed Put or Delete operation is available as FailedOperationIndex and its execution result is available as FailedOperationResult . Properties Name Description ConsumedCapacity Cloud Service/Cloud Simulator only. Gets capacity consumed by this operation. FailedOperationIndex Gets the index of the failed Put or Delete sub operation that resulted in the entire operation aborting. FailedOperationResult Gets the result of the failed Put or Delete sub operation that resulted in the entire operation aborting. Results Gets the list of results of sub operations. Success Gets a value indicating whether the operation was successful. See Also WriteManyAsync PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken) WriteOperationResult <TRow>"
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.Results.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.Results.html",
    "title": "Property Results | NoSQL SDK for .NET",
    "keywords": "Property Results Results Gets the list of results of sub operations. Declaration public IReadOnlyList<WriteOperationResult<TRow>> Results { get; } Property Value Type Description IReadOnlyList < WriteOperationResult <TRow>> The list of results of Put/Delete sub operations if the operation was successful, otherwise null . See Also WriteOperationResult <TRow>"
  },
  "api/Oracle.NoSQL.SDK.WriteManyResult-1.Success.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteManyResult-1.Success.html",
    "title": "Property Success | NoSQL SDK for .NET",
    "keywords": "Property Success Success Gets a value indicating whether the operation was successful. Declaration public bool Success { get; } Property Value Type Description Boolean true if WriteMany, PutMany or DeleteMany operation was successful, false if the operation was aborted because of the failure of sub operation and the setting of AbortIfUnsuccessful option."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddDelete.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddDelete.html",
    "title": "Method AddDelete | NoSQL SDK for .NET",
    "keywords": "Method AddDelete AddDelete(String, MapValue, DeleteOptions, Boolean) Adds a DeleteOperation to the collection. Declaration public WriteOperationCollection AddDelete(string tableName, MapValue primaryKey, DeleteOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue primaryKey Primary key of the row to delete. DeleteOptions options Options for the Delete operation. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or options contains invalid values. AddDelete(String, MapValue, Boolean) Adds a DeleteOperation to the collection. Declaration public WriteOperationCollection AddDelete(string tableName, MapValue primaryKey, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue primaryKey Primary key of the row to delete. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null . AddDelete(MapValue, DeleteOptions, Boolean) Adds a DeleteOperation to the collection. Declaration public WriteOperationCollection AddDelete(MapValue primaryKey, DeleteOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue primaryKey Primary key of the row to delete. DeleteOptions options Options for the Delete operation. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If primaryKey is null or options contains invalid values. AddDelete(MapValue, Boolean) Adds a DeleteOperation to the collection. Declaration public WriteOperationCollection AddDelete(MapValue primaryKey, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue primaryKey Primary key of the row to delete. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If primaryKey is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddDeleteIfVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddDeleteIfVersion.html",
    "title": "Method AddDeleteIfVersion | NoSQL SDK for .NET",
    "keywords": "Method AddDeleteIfVersion AddDeleteIfVersion(String, MapValue, RowVersion, DeleteOptions, Boolean) Adds a DeleteIfVersionOperation to the collection. Declaration public WriteOperationCollection AddDeleteIfVersion(string tableName, MapValue primaryKey, RowVersion version, DeleteOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue primaryKey Primary key of the row to delete. RowVersion version Row version to match. DeleteOptions options Options for the Delete operation. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or version is null or options contains invalid values. AddDeleteIfVersion(String, MapValue, RowVersion, Boolean) Adds a DeleteIfVersionOperation to the collection. Declaration public WriteOperationCollection AddDeleteIfVersion(string tableName, MapValue primaryKey, RowVersion version, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue primaryKey Primary key of the row to delete. RowVersion version Row version to match. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or primaryKey is null or version is null . AddDeleteIfVersion(MapValue, RowVersion, DeleteOptions, Boolean) Adds a DeleteIfVersionOperation to the collection. Declaration public WriteOperationCollection AddDeleteIfVersion(MapValue primaryKey, RowVersion version, DeleteOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue primaryKey Primary key of the row to delete. RowVersion version Row version to match. DeleteOptions options Options for the Delete operation. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If primaryKey is null or version is null or options contains invalid values. AddDeleteIfVersion(MapValue, RowVersion, Boolean) Adds a DeleteIfVersionOperation to the collection. Declaration public WriteOperationCollection AddDeleteIfVersion(MapValue primaryKey, RowVersion version, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue primaryKey Primary key of the row to delete. RowVersion version Row version to match. Boolean abortIfUnsuccessful (Optional) If true and this Delete operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Delete operation was added. Exceptions Type Condition ArgumentException If primaryKey is null or version is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPut.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPut.html",
    "title": "Method AddPut | NoSQL SDK for .NET",
    "keywords": "Method AddPut AddPut(String, MapValue, PutOptions, Boolean) Adds a PutOperation to the collection. Declaration public WriteOperationCollection AddPut(string tableName, MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or options contains invalid values. AddPut(String, MapValue, Boolean) Adds a PutOperation to the collection. Declaration public WriteOperationCollection AddPut(string tableName, MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null . AddPut(MapValue, PutOptions, Boolean) Adds a PutOperation to the collection. Declaration public WriteOperationCollection AddPut(MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null or options contains invalid values. AddPut(MapValue, Boolean) Adds a PutOperation to the collection. Declaration public WriteOperationCollection AddPut(MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfAbsent.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfAbsent.html",
    "title": "Method AddPutIfAbsent | NoSQL SDK for .NET",
    "keywords": "Method AddPutIfAbsent AddPutIfAbsent(String, MapValue, PutOptions, Boolean) Adds a PutIfAbsentOperation to the collection. Declaration public WriteOperationCollection AddPutIfAbsent(string tableName, MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or options contains invalid values. AddPutIfAbsent(String, MapValue, Boolean) Adds a PutIfAbsentOperation to the collection. Declaration public WriteOperationCollection AddPutIfAbsent(string tableName, MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null . AddPutIfAbsent(MapValue, PutOptions, Boolean) Adds a PutIfAbsentOperation to the collection. Declaration public WriteOperationCollection AddPutIfAbsent(MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null or options contains invalid values. AddPutIfAbsent(MapValue, Boolean) Adds a PutIfAbsentOperation to the collection. Declaration public WriteOperationCollection AddPutIfAbsent(MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfPresent.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfPresent.html",
    "title": "Method AddPutIfPresent | NoSQL SDK for .NET",
    "keywords": "Method AddPutIfPresent AddPutIfPresent(String, MapValue, PutOptions, Boolean) Adds a PutIfPresentOperation to the collection. Declaration public WriteOperationCollection AddPutIfPresent(string tableName, MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or options contains invalid values. AddPutIfPresent(String, MapValue, Boolean) Adds a PutIfPresentOperation to the collection. Declaration public WriteOperationCollection AddPutIfPresent(string tableName, MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null . AddPutIfPresent(MapValue, PutOptions, Boolean) Adds a PutIfPresentOperation to the collection. Declaration public WriteOperationCollection AddPutIfPresent(MapValue row, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null or options contains invalid values. AddPutIfPresent(MapValue, Boolean) Adds a PutIfPresentOperation to the collection. Declaration public WriteOperationCollection AddPutIfPresent(MapValue row, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.AddPutIfVersion.html",
    "title": "Method AddPutIfVersion | NoSQL SDK for .NET",
    "keywords": "Method AddPutIfVersion AddPutIfVersion(String, MapValue, RowVersion, PutOptions, Boolean) Adds a PutIfVersionOperation to the collection. Declaration public WriteOperationCollection AddPutIfVersion(string tableName, MapValue row, RowVersion version, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. RowVersion version Row version to match. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or version is null or options contains invalid values. AddPutIfVersion(String, MapValue, RowVersion, Boolean) Adds a PutIfVersionOperation to the collection. Declaration public WriteOperationCollection AddPutIfVersion(string tableName, MapValue row, RowVersion version, bool abortIfUnsuccessful = false) Parameters Type Name Description String tableName Table name. MapValue row Table row. RowVersion version Row version to match. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If tableName is null or invalid or row is null or version is null . AddPutIfVersion(MapValue, RowVersion, PutOptions, Boolean) Adds a PutIfVersionOperation to the collection. Declaration public WriteOperationCollection AddPutIfVersion(MapValue row, RowVersion version, PutOptions options, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. RowVersion version Row version to match. PutOptions options Options for the Put operation. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null or version is null or options contains invalid values. AddPutIfVersion(MapValue, RowVersion, Boolean) Adds a PutIfVersionOperation to the collection. Declaration public WriteOperationCollection AddPutIfVersion(MapValue row, RowVersion version, bool abortIfUnsuccessful = false) Parameters Type Name Description MapValue row Table row. RowVersion version Row version to match. Boolean abortIfUnsuccessful (Optional) If true and this Put operation fails, it will cause the entire transaction to abort, see WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) . Returns Type Description WriteOperationCollection A reference to this instance after the Put operation was added. Exceptions Type Condition ArgumentException If row is null or version is null ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.Clear.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.Clear.html",
    "title": "Method Clear | NoSQL SDK for .NET",
    "keywords": "Method Clear Clear() Removes all elements from the collection. Declaration public void Clear()"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.Count.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.Count.html",
    "title": "Property Count | NoSQL SDK for .NET",
    "keywords": "Property Count Count Gets the number of operations in the collection. Declaration public int Count { get; } Property Value Type Description Int32 The number of operations in the collection."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.-ctor.html",
    "title": "Constructor WriteOperationCollection | NoSQL SDK for .NET",
    "keywords": "Constructor WriteOperationCollection WriteOperationCollection() Initializes a new empty instance of WriteOperationCollection with default initial capacity. Declaration public WriteOperationCollection() See Also WriteOperationCollection(Int32) WriteOperationCollection(Int32) Initializes a new empty instance of WriteOperationCollection with specified initial capacity. Declaration public WriteOperationCollection(int capacity) Parameters Type Name Description Int32 capacity Initial capacity. Remarks Capacity is the number of elements the collection can hold without internal resizing, see Capacity ."
  },
  "api/Oracle.NoSQL.SDK.WriteOperationCollection.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationCollection.html",
    "title": "Class WriteOperationCollection | NoSQL SDK for .NET",
    "keywords": "Class WriteOperationCollection Represents a collection of Put and Delete operations for WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) API. Inheritance Object WriteOperationCollection Implements IReadOnlyCollection < IWriteOperation > IEnumerable < IWriteOperation > IEnumerable Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteOperationCollection : Object Remarks This class represents the operations to be performed as a list of instances implementing IWriteOperation interface, consisting of the following classes: You do not need to instantiate the above classes to add operations to the collection, instead use methods of WriteOperationCollection . However the instances of the classes above will be available for inspection if you iterate through the collection using foreach loop, in which case you can downcast IWriteOperation to one of the classes listed above. Note that the methods of WriteOperationCollection are divided into two groups: those that take table name parameter and those that don't. Use as following: If this instance is passed to WriteManyAsync(WriteOperationCollection, WriteManyOptions, CancellationToken) , use the methods that take table name. Failure to provide table name for any operation will result in error. If this instance is passed to WriteManyAsync(String, WriteOperationCollection, WriteManyOptions, CancellationToken) , table name is already passed as a parameter to this method and thus must not be passed to WriteOperationCollection methods. Providing table name for any operation will result in error. The methods of WriteOperationCollection return the instance itself so that their calls can be chained as shown in the example. Validation is performed on the parameters before the operation is added to the collection. Note that some of the methods of WriteOperationCollection take PutOptions or DeleteOptions parameters as the options for the operation. Properties such as Compartment , Timeout , Durability , Namespace , Compartment , Timeout , Durability and Namespace are ignored as they are not relevant for a single operation in the collection. Instead, use Compartment and Timeout . Examples Populating an instance of WriteOperationCollection without providing table name. var woc = new WriteOperationCollection() .AddPut(row1, true) .AddPutIfVersion(row2, version2) .AddPut(row3, new PutOptions { TTL = TimeToLive.OfDays(1) }) .AddDelete(primaryKey3, true) .AddDeleteIfVersion(primaryKey4, version4, true)); Populating an instance of WriteOperationCollection with providing table names. var woc = new WriteOperationCollection() .AddPut(\"myTable\", row1, true) .AddPutIfVersion(\"myTable.childTable1\", row2, version2) .AddDelete(\"myTable.childTable2\", primaryKey3, true); Constructors Name Description WriteOperationCollection() Initializes a new empty instance of WriteOperationCollection with default initial capacity. WriteOperationCollection(Int32) Initializes a new empty instance of WriteOperationCollection with specified initial capacity. Properties Name Description Count Gets the number of operations in the collection. Methods Name Description AddDelete(MapValue, DeleteOptions, Boolean) Adds a DeleteOperation to the collection. AddDelete(MapValue, Boolean) Adds a DeleteOperation to the collection. AddDelete(String, MapValue, DeleteOptions, Boolean) Adds a DeleteOperation to the collection. AddDelete(String, MapValue, Boolean) Adds a DeleteOperation to the collection. AddDeleteIfVersion(MapValue, RowVersion, DeleteOptions, Boolean) Adds a DeleteIfVersionOperation to the collection. AddDeleteIfVersion(MapValue, RowVersion, Boolean) Adds a DeleteIfVersionOperation to the collection. AddDeleteIfVersion(String, MapValue, RowVersion, DeleteOptions, Boolean) Adds a DeleteIfVersionOperation to the collection. AddDeleteIfVersion(String, MapValue, RowVersion, Boolean) Adds a DeleteIfVersionOperation to the collection. AddPut(MapValue, PutOptions, Boolean) Adds a PutOperation to the collection. AddPut(MapValue, Boolean) Adds a PutOperation to the collection. AddPut(String, MapValue, PutOptions, Boolean) Adds a PutOperation to the collection. AddPut(String, MapValue, Boolean) Adds a PutOperation to the collection. AddPutIfAbsent(MapValue, PutOptions, Boolean) Adds a PutIfAbsentOperation to the collection. AddPutIfAbsent(MapValue, Boolean) Adds a PutIfAbsentOperation to the collection. AddPutIfAbsent(String, MapValue, PutOptions, Boolean) Adds a PutIfAbsentOperation to the collection. AddPutIfAbsent(String, MapValue, Boolean) Adds a PutIfAbsentOperation to the collection. AddPutIfPresent(MapValue, PutOptions, Boolean) Adds a PutIfPresentOperation to the collection. AddPutIfPresent(MapValue, Boolean) Adds a PutIfPresentOperation to the collection. AddPutIfPresent(String, MapValue, PutOptions, Boolean) Adds a PutIfPresentOperation to the collection. AddPutIfPresent(String, MapValue, Boolean) Adds a PutIfPresentOperation to the collection. AddPutIfVersion(MapValue, RowVersion, PutOptions, Boolean) Adds a PutIfVersionOperation to the collection. AddPutIfVersion(MapValue, RowVersion, Boolean) Adds a PutIfVersionOperation to the collection. AddPutIfVersion(String, MapValue, RowVersion, PutOptions, Boolean) Adds a PutIfVersionOperation to the collection. AddPutIfVersion(String, MapValue, RowVersion, Boolean) Adds a PutIfVersionOperation to the collection. Clear() Removes all elements from the collection. See Also WriteManyAsync IWriteOperation PutOperation PutIfAbsentOperation PutIfPresentOperation PutIfVersionOperation DeleteOperation DeleteIfVersionOperation"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingModificationTime.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingModificationTime.html",
    "title": "Property ExistingModificationTime | NoSQL SDK for .NET",
    "keywords": "Property ExistingModificationTime ExistingModificationTime Gets the modification time of existing row if the conditional Put or Delete operation has failed. Declaration public Nullable<DateTime> ExistingModificationTime { get; } Property Value Type Description Nullable < DateTime > The modification time of existing row if available, otherwise null . Remarks This value is equivalent to ExistingModificationTime or ExistingModificationTime for Put and Delete operations respectively. See Also ExistingModificationTime ExistingModificationTime"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingRow.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingRow.html",
    "title": "Property ExistingRow | NoSQL SDK for .NET",
    "keywords": "Property ExistingRow ExistingRow Gets the value of existing row if the conditional Put or Delete operation has failed. Declaration public TRow ExistingRow { get; } Property Value Type Description TRow Value of existing row if available, otherwise null . Remarks This value is equivalent to ExistingRow or ExistingRow for Put and Delete operations respectively. See Also ExistingRow ExistingRow"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingVersion.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.ExistingVersion.html",
    "title": "Property ExistingVersion | NoSQL SDK for .NET",
    "keywords": "Property ExistingVersion ExistingVersion Gets the value of RowVersion of existing row if the conditional Put or Delete operation has failed. Declaration public RowVersion ExistingVersion { get; } Property Value Type Description RowVersion Version of RowVersion of existing row if available, otherwise null . Remarks This value is equivalent to ExistingVersion or ExistingVersion for Put and Delete operations respectively. See Also ExistingVersion ExistingVersion"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.GeneratedValue.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.GeneratedValue.html",
    "title": "Property GeneratedValue | NoSQL SDK for .NET",
    "keywords": "Property GeneratedValue GeneratedValue For Put operations only. Gets the value generated by the Put operation for an identity or generated UUID column. Declaration public FieldValue GeneratedValue { get; set; } Property Value Type Description FieldValue Generated value if available, otherwise null . Remarks This property returns the value generated if the Put operation created a new value for an identity column or a string column declared as generated UUID. It is available only if the table has such column and a value was generated for that column by the Put operation. See Also GeneratedValue"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.html",
    "title": "Class WriteOperationResult<TRow> | NoSQL SDK for .NET",
    "keywords": "Class WriteOperationResult<TRow> Represents the result of each Put or Delete sub operation in WriteManyResult<TRow> . Inheritance Object WriteOperationResult<TRow> Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteOperationResult<TRow> : Object Type Parameters Name Description TRow The type of value representing the row optionally returned by ExistingRow of Put or Delete sub operation. Must be a reference type. Currently the only supported type is RecordValue . Remarks This class contains all relevant properties from PutResult<TRow> and DeleteResult<TRow> (note that ConsumedCapacity is not defined on the sub operation basis). Properties Name Description ExistingModificationTime Gets the modification time of existing row if the conditional Put or Delete operation has failed. ExistingRow Gets the value of existing row if the conditional Put or Delete operation has failed. ExistingVersion Gets the value of RowVersion of existing row if the conditional Put or Delete operation has failed. GeneratedValue For Put operations only. Gets the value generated by the Put operation for an identity or generated UUID column. Success Gets a value indicating whether the Put or Delete operation was successful. Version For Put operations only. Gets the RowVersion of the new row if the Put operation was successful. See Also WriteManyResult <TRow> WriteManyAsync PutManyAsync(String, IReadOnlyCollection<MapValue>, PutManyOptions, CancellationToken) DeleteManyAsync(String, IReadOnlyCollection<MapValue>, DeleteManyOptions, CancellationToken)"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.Success.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.Success.html",
    "title": "Property Success | NoSQL SDK for .NET",
    "keywords": "Property Success Success Gets a value indicating whether the Put or Delete operation was successful. Declaration public bool Success { get; } Property Value Type Description Boolean true if the Put or Delete operation was successful, otherwise false . Remarks The success is defined in the same way as in Success and Success respectively. See Also Success Success"
  },
  "api/Oracle.NoSQL.SDK.WriteOperationResult-1.Version.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteOperationResult-1.Version.html",
    "title": "Property Version | NoSQL SDK for .NET",
    "keywords": "Property Version Version For Put operations only. Gets the RowVersion of the new row if the Put operation was successful. Declaration public RowVersion Version { get; } Property Value Type Description RowVersion Version of the new row if this result is a result of a Put operation and this operation was successful, otherwise null . See Also Version"
  },
  "api/Oracle.NoSQL.SDK.WriteRequest.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteRequest.html",
    "title": "Class WriteRequest | NoSQL SDK for .NET",
    "keywords": "Class WriteRequest Base class for information about all operations that write or delete a row from a table. Inheritance Object Request RequestWithTable WriteRequest DeleteRequest <TRow> PutRequest <TRow> Inherited Members RequestWithTable.TableName Request.Exceptions Request.RetryCount Request.LastException Request.PriorException Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public abstract class WriteRequest : RequestWithTable Remarks Used as base class for PutRequest<TRow> and DeleteRequest<TRow> . See Also RequestWithTable PutRequest <TRow> DeleteRequest <TRow>"
  },
  "api/Oracle.NoSQL.SDK.WriteThrottlingException.-ctor.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteThrottlingException.-ctor.html",
    "title": "Constructor WriteThrottlingException | NoSQL SDK for .NET",
    "keywords": "Constructor WriteThrottlingException WriteThrottlingException() Initializes a new instance of WriteThrottlingException . Declaration public WriteThrottlingException() WriteThrottlingException(String) Initializes a new instance of WriteThrottlingException with the message that describes the current exception. Declaration public WriteThrottlingException(string message) Parameters Type Name Description String message A message that describes the current exception. WriteThrottlingException(String, Exception) Initializes a new instance of WriteThrottlingException with the message that describes the current exception and an inner exception. Declaration public WriteThrottlingException(string message, Exception inner) Parameters Type Name Description String message A message that describes the current exception. Exception inner The inner exception."
  },
  "api/Oracle.NoSQL.SDK.WriteThrottlingException.html": {
    "href": "api/Oracle.NoSQL.SDK.WriteThrottlingException.html",
    "title": "Class WriteThrottlingException | NoSQL SDK for .NET",
    "keywords": "Class WriteThrottlingException Cloud Service/Cloud Simulator only. The exception that is thrown when the provisioned write throughput has been exceeded. Inheritance Object NoSQLException RetryableException WriteThrottlingException Inherited Members RetryableException.IsRetryable NoSQLException.Message NoSQLException.Request Namespace : Oracle.NoSQL.SDK Assembly : Oracle.NoSQL.SDK.dll Syntax public class WriteThrottlingException : RetryableException Remarks This exception is retryable and NoSQLRetryHandler uses progressive delays before retrying to minimize the chance that a retry is also throttled. In general, applications should attempt to avoid throttling exceptions by rate limiting themselves to the degree possible, because the rate limiting results in a better throughput than performing operation retries. Constructors Name Description WriteThrottlingException() Initializes a new instance of WriteThrottlingException . WriteThrottlingException(String) Initializes a new instance of WriteThrottlingException with the message that describes the current exception. WriteThrottlingException(String, Exception) Initializes a new instance of WriteThrottlingException with the message that describes the current exception and an inner exception. See Also NoSQLRetryHandler"
  },
  "index.html": {
    "href": "index.html",
    "title": "Oracle NoSQL Database .NET SDK | NoSQL SDK for .NET",
    "keywords": "Oracle NoSQL Database .NET SDK This is version 5.2 of Oracle NoSQL Database .NET SDK for Oracle NoSQL Database. It supports both the Oracle NoSQL Database Cloud Service and the on-premise product, Oracle NoSQL Database . Supported platforms are .NET 5.0 and .NET Core 3.1 . To get started, see tutorials and API reference ."
  },
  "tutorials/connect-cloud.html": {
    "href": "tutorials/connect-cloud.html",
    "title": "Prerequisites | NoSQL SDK for .NET",
    "keywords": "This guide describes how to install, configure, and use the Oracle NoSQL Database .NET SDK with the Oracle NoSQL Database Cloud Service. Prerequisites The SDK requires: An Oracle Cloud Infrastructure account A user created in that account, in a group with a policy that grants the desired permissions. .NET Core 3.1 or later, including .NET 5.0 or later version running on Windows, Linux, or Mac. Nuget Package Manager if you wish to install the SDK independently of your project. Downloading and Installing the SDK You can install the SDK from NuGet Package Manager either by adding it as a reference to your project or independently. Add the SDK as a Project Reference You may add the SDK NuGet Package as a reference to your project by using .Net CLI: cd <your-project-directory> dotnet add package Oracle.NoSQL.SDK Alternatively, you may perform the same using NuGet Package Manager in Visual Studio . Independent Install You may install the SDK independently into a directory of your choice by using nuget.exe CLI : nuget.exe install Oracle.NoSQL.SDK -OutputDirectory <your-packages-directory> Configuring the SDK The SDK requires an Oracle Cloud account and a subscription to the Oracle NoSQL Database Cloud Service. If you do not already have an Oracle Cloud account you can start here . The SDK is using Oracle Cloud Infrastructure Identity and Access Management (IAM) to authorize database operations. For more information on IAM see Overview of Oracle Cloud Infrastructure Identity and Access Management To use the SDK, you need to configure it for use with IAM. The best way to get started with the service is to use your Oracle Cloud user's identity to obtain required credentials and provide them to the application. This is applicable in most use cases and described below in section Authorize with Oracle Cloud User's Identity . A different configuration that does not require user's credentials may be used in a couple of special use cases: To access Oracle NoSQL Database Cloud Service from a compute instance in the Oracle Cloud Infrastructure (OCI), use Instance Principal. See Authorizing with Instance Principal . To access Oracle NoSQL Database Cloud Service from other Oracle Cloud service resource such as Functions , use Resource Principal. See Authorizing with Resource Principal . Authorize with Oracle Cloud User's Identity See sections below on how to acquire credentials and configure the application to connect to Oracle NoSQL Database Cloud Service. You may also need to perform additional configuration such as choosing your region, specifying compartment and other configuration options. See Example Quick Start for the quickest way to get an example running. Acquire Credentials for the Oracle NoSQL Database Cloud Service See Authentication to connect to Oracle NoSQL Database for details of credentials you will need to configure an application. These steps only need to be performed one time for a user. If they have already been done they can be skipped. You need to obtain the following credentials: Tenancy ID User ID API signing key (private key file in PEM format) Fingerprint for the public key uploaded to the user's account Private key pass phrase, needed only if the private key is encrypted The private key may be either in PKCS#8 format (starts with -----BEGIN PRIVATE KEY----- or -----BEGIN ENCRYPTED PRIVATE KEY----- ) or PKCS#1 format (starts with -----BEGIN RSA PRIVATE KEY----- ). PKCS#8 format is preferred. There is a limitation for encrypted private keys in PKCS#1 format in that it must use AES encryption (with key sizes of 128, 192 or 256 bits). Otherwise, if you have an encrypted private key in PKCS#1 format, you can convert it to PKCS#8 using openssl: openssl pkcs8 -topk8 -inform PEM -outform PEM -in encrypted_pkcs1_key.pem -out encrypted_pkcs8_key.pem Supply Credentials to the Application Credentials are used to authorize your application to use the service. There are 3 ways to supply credentials: Store credentials in an OCI configuration file . Supply credentials directly as IAMCredentials . Create your own credentials provider to load credentials on demand from the location of your choice (e.g. keystore, keychain, encrypted file, etc.). You supply the credentials to the SDK when you create NoSQLClient instance that is used to perform the database operations. The IAM configuration is represented by IAMAuthorizationProvider instance and it indicates how the credentials are supplied. IAMAuthorizationProvider is in turn a part of NoSQLConfig configuration that is passed to create NoSQLClient (see Connecting an Application ). Creating your own credentials provider is the most secure option, because you are in control of how credentials are stored and loaded by the driver. Otherwise, the recommended option is to use an Oracle Cloud Infrastructure configuration file . Supplying credentials directly is the least secure option because sensitive information such as private key will be kept in memory for the lifetime of NoSQLClient instance. Using an OCI Configuration File You can store the credentials in an Oracle Cloud Infrastructure Configuration File . The default path for the configuration file is ~/.oci/config , where ~ stands for user's home directory. On Windows, ~ is a value of USERPROFILE environment variable. The file may contain multiple profiles. By default, the SDK uses profile named DEFAULT to store the credentials. To use these default values, create file named config in ~/.oci directory with the following contents: [DEFAULT] tenancy=<your-tenancy-ocid> user=<your-user-ocid> fingerprint=<fingerprint-of-your-public-key> key_file=<path-to-your-private-key-file> pass_phrase=<your-private-key-passphrase> region=<your-region-identifier> Note that you may also specify your region identifier together with credentials in the OCI configuration file. By default, the driver will look for credentials and a region in the OCI configuration file at the default path and in the default profile. Thus, if you provide region together with credentials as shown above, you can create NoSQLClient instance without passing any configuration: var client = new NoSQLClient(); Alternatively, you may specify the region (as well as other properties) in NoSQLConfig : var client = new NoSQLClient( new NoSQLConfig( { Region = Region.US_ASHBURN_1, Timeout = TimeSpan.FromSeconds(10), .......... }); As in the previous example, default OCI configuration file with default profile will be used unless specified otherwise. The region in NoSQLConfig will take precendence over the region in OCI configuration file if both are set. You may choose to use different path for OCI configuration file as well as different profile within the configuration file. In this case, specify these when creating IAMAuthorizationProvider . For example, if your OCI configuration file path is ~/myapp/.oci/config and you store your credentials under profile Jane : ............... ............... [Jane] tenancy=....... user=.......... ............... [John] tenancy=....... user=.......... ............... Then create NoSQLClient instance as follows: var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, AuthorizationProvider = new IAMAuthorizationProvider( \"~/myapp/.oci/config\", \"Jane\") }); (Note that you don't have to specify the service type if you set IAMAuthorizationProvider , see section Specifying Service Type ) Specifying Credentials Directly You may specify credentials directly as IAMCredentials when creating IAMAuthorizationProvider . Create NoSQLClient as follows: var client = new NoSQLClient( new NoSQLConfig { Region = <your-service-region>, AuthorizationProvider = new IAMAuthorizationProvider( new IAMCredentials { TenantId = myTenancyOCID, UserId = myUserOCID, Fingerprint = myPublicKeyFingerprint, PrivateKeyFile = myPrivateKeyFile }) }); Creating Your Own Credentials Provider You may specify your custom credentials provider when creating IAMAuthorizationProvider . The credentials provider is a delegate function that returns Task< IAMCredentials > and thus may be implemented asynchronously: var client = new NoSQLClient( new NoSQLConfig { Region = <your-service-region>, AuthorizationProvider = new IAMAuthorizationProvider( async (CancellationToken) => { // Retrieve the credentials in a preferred manner. await.......... return new IAMCredentials { TenantId = myTenancyOCID, UserId = myUserOCID, Fingerprint = myPublicKeyFingerprint, PrivateKey = myPrivateKeyFile, Passphrase = myPassphrase } }) }); Authorizing with Instance Principal Instance Principal is an IAM service feature that enables instances to be authorized actors (or principals) to perform actions on service resources. Each compute instance has its own identity, and it authenticates using the certificates that are added to it. See Calling Services from an Instance for prerequisite steps to set up Instance Principal. Once set up, create NoSQLClient instance as follows: var client = new NoSQLClient( new NoSQLConfig { Region = <your-service-region>, Compartment = \"ocid1.compartment.oc1.............................\", AuthorizationProvider = IAMAuthorizationProvider.CreateWithInstancePrincipal() }); You may also represent the same configuration in JSON as follows: { \"Region\": \"<your-service-region>\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseInstancePrincipal\": true }, \"Compartment\": \"ocid1.compartment.oc1.............................\", } For more details, see Connecting an Application . Note that when using Instance Principal you must specify compartment id (OCID) as compartment property (see Specifying a Compartment ). This is required even if you wish to use default compartment. Note that you must use compartment id and not compartment name or path. In addition, when using Instance Principal, you may not prefix table name with compartment name or path when calling NoSQLClient APIs. Authorizing with Resource Principal Resource Principal is an IAM service feature that enables the resources to be authorized actors (or principals) to perform actions on service resources. You may use Resource Principal when calling Oracle NoSQL Database Cloud Service from other Oracle Cloud service resource such as Functions . See Accessing Other Oracle Cloud Infrastructure Resources from Running Functions for how to set up Resource Principal. Once set up, create NoSQLClient instance as follows: var client = new NoSQLClient( new NoSQLConfig { Region = <your-service-region>, Compartment = \"ocid1.compartment.oc1.............................\", AuthorizationProvider = IAMAuthorizationProvider.CreateWithResourcePrincipal() }); You may also represent the same configuration in JSON as follows: { \"Region\": \"<your-service-region>\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"UseResourcePrincipal\": true }, \"Compartment\": \"ocid1.compartment.oc1.............................\", } For more details, see Connecting an Application . Note that when using Resource Principal you must specify compartment id (OCID) as compartment property (see Specifying a Compartment ). This is required even if you wish to use default compartment. Note that you must use compartment id and not compartment name or path. In addition, when using Resource Principal, you may not prefix table name with compartment name or path when calling NoSQLClient APIs. Connecting an Application To use the SDK in your code, add Oracle.NoSQL.SDK namespace: using Oracle.NoSQL.SDK; The first step in your Oracle NoSQL Database Cloud Service application is to create an instance of NoSQLClient class which is the main point of access to the service. To create NoSQLClient instance, you need to supply an instance of NoSQLConfig class containing the information needed to access the service. Alternatively, you may choose to supply a path (absolute or relative to current directory) to a JSON file that contains the same configuration information as in NoSQLConfig . The required information consists of the communication region or endpoint and authorization information described in section Acquire Credentials for the Oracle NoSQL Database Cloud Service (also see IAMAuthorizationProvider ). It is possible to specify a Region or an Endpoint , but not both. If you use a region the endpoint of that region is inferred. If an endpoint is used, it needs to be either the endpoint of a Region or a reference to a host and port. For example when using the Cloud Simulator you would use an endpoint string like http://localhost:8080 . Other, optional parameters may also be specified in NoSQLConfig . See API documentation for NoSQLConfig for more information. For example: var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, AuthorizationProvider = new IAMAuthorizationProvider( \"~/myapp/.oci/config\", \"Jane\"), Compartment = \"ocid1.compartment.oc1.............................\", Timeout = TimeSpan.FromSeconds(10) }); In addition to providing an instance of NoSQLConfig , you may store the initial configuration in a JSON file and provide a path to that file when creating NoSQLClient instance. For example, you may provide the same configuration as in above example using the JSON file. Create file config.json with following contents: { \"Region\": \"us-ashburn-1\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"ConfigFile\": \"~/myapp/.oci/config\", \"ProfileName\": \"Jane\" }, \"Compartment\": \"ocid1.compartment.oc1.............................\", \"Timeout\": 10000 } Then you may create {@link NoSQLClient} instance as follows: var client = new NoSQLClient(\"/path/to/config.json\"); In general, the JSON representation is very similar to the NoSQLConfig instance, together with certain rules for values that cannot be directly represented in JSON. For example, you may see the following from the above representation: Region values are represented as corresponding region identifiers. Authorization provider is represented as JSON object with the properties for a given provider class and an additional AuthorizationType property indicating the type of the authorization provider. Timeout values are represented as their number of milliseconds. These rules are described in detail in NoSQLConfig . In the Oracle.NoSQL.SDK.Samples directory, you will see JSON configuration files that are used to create a NoSQLClient instance as shown above: Use cloud_template.json for the cloud service to create a configuration of your choice as described in Supply Credentials to the Application . Fill in appropriate values for properties needed and remove the rest. Use cloudsim.json for the Cloud Simulator. As metioned in section Using a Configuration File , you may also create NoSQLClient instance for the cloud service with no-argument constructor (without any configuration provided) if you are using a default configuration file with default profile containing both the credentials and the service region. Specifying Service Type Because this SDK is used both for the Oracle NoSQL Cloud Service and the On-Premise Oracle NoSQL Database, NoSQLConfig instance can specify that we are connecting to the cloud service by setting its ServiceType property to ServiceType.Cloud . You can always explicitly specify the ServiceType property in NoSQLConfig , but in many cases such as in the examples above, it may be determined automatically. In particular, the driver will assume the cloud service if any of the following is true: NoSQLConfig has Region property set (as opposed to Endpoint property). It is recommended to use region instead of endpoint for the cloud service. The value of AuthorizationProvider is an instance of IAMAuthorizationProvider ) No configuration is provided, with both the region and the credentials stored in OCI configuration file in default location as described in section Using a Configuration File . On the other hand, for the configuration that specifies neither service type nor authorization provider but that specifies the endpoint (and not region), the service type will default to ServiceType.CloudSim (see Using the Cloud Simulator ). For more details, see ServiceType enumeration. You may also specify the service type in a JSON configuration file as string value of the ServiceType enumeration constant. For example: { \"ServiceType\": \"Cloud\", \"Region\": \"us-ashburn-1\" } Specifying a Compartment In the Oracle NoSQL Cloud Service environment tables are always created in an Oracle Cloud Infrastructure compartment (see Managing Compartments ). It is recommended that compartments be created for tables to better organize them and control security, which is a feature of compartments. The default compartment for tables is the root compartment of the user's tenancy. A default compartment for all operations can be specified by setting the Compartment property of NoSQLConfig . For example: var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, Compartment = \"<compartment_ocid_or_name>\" }); The string value may be either a compartment OCID or a compartment name or path. If it is a simple name it must specify a top-level compartment. If it is a path to a nested compartment, the top-level compartment must be excluded as it is inferred from the tenancy. In addition, all operation options classes have Comparment property, such as TableDDLOptions.Compartment , GetOptions.Compartment , PutOptions.Compartment , etc. Thus you may also specify comparment separately for any operation. This value, if set, will override the compartment value in NoSQLConfig , if any. If compartment is not supplied, the tenancy OCID will be used as default. Note this only applies if you are authorizing with user's identity . When using instance principal or resouce principal , compartment id must be specified. Example Quick Start The examples in the SDK are configured to make it simple to connect and run against the Oracle NoSQL Database Cloud Service. Follow these steps: Acquire credentials. See Acquire Credentials . You will need these: Tenancy ID User ID API signing key (private key file in PEM format Fingerprint for the public key uploaded to the user's account Private key pass phrase, needed only if the private key is encrypted Put the information in a configuration file, ~/.oci/config, based on the format described in Using a Configuration File . It should look like this: [DEFAULT] tenancy=<your-tenancy-ocid> user=<your-user-ocid> fingerprint=<fingerprint-of-your-public-key> key_file=<path-to-your-private-key-file> pass_phrase=<your-private-key-passphrase> region=<your-region-identifier> Instead of using a configuration file it is possible to modify the example code to directly provide your credentials as described in Specifying Credentials Directly . Use git to clone the Oracle NoSQL Database .NET SDK: git clone https://github.com/oracle/nosql-dotnet-sdk Alternatively you may download the zip file or a tarball containing the SDK source from the GitHub Releases page. The examples are located under Oracle.NoSQL.SDK.Samples directory. Go to the BasicExample : cd Oracle.NoSQL.SDK.Samples/BasicExample Under this directory, you will see the example source code Program.cs and the project BasicExample.csproj . Build and run the project: dotnet run -f <your_target_framework> The project supports multiple target frameworks which currently are .NET Core 3.1 and .NET 5.0, so you must specify the target framework to use. For .NET 5.0, specify net5.0 : dotnet run -f net5.0 For .NET Core 3.1, specify netcoreapp3.1 : dotnet run -f netcoreapp3.1 Note that the commands above will automatically download and install Oracle NoSQL Database SDK package as a dependency of the example project. Alternatively, you may build and run the example project in Visual Studio . In Visual Studio, open the Samples solution located at Oracle.NoSQL.SDK.Samples/Oracle.NoSQL.SDK.Samples.sln . Using the Cloud Simulator The configuration instructions above are for getting connected to the actual Oracle NoSQL Database Cloud Service. You may first get familiar with Oracle NoSQL Database .NET SDK and its interfaces by using the Oracle NoSQL Cloud Simulator . The Cloud Simulator simulates the cloud service and lets you write and test applications locally without accessing Oracle NoSQL Database Cloud Service. You can start developing your application with the Oracle NoSQL Cloud Simulator, using and understanding the basic examples, before you get started with the Oracle NoSQL Database Cloud Service. After building, debugging and testing your application with the Oracle NoSQL Cloud Simulator, move your application to the Oracle NoSQL Database Cloud Service. Note that the Cloud Simulator does not require authorization information and credentials described above that are required by Oracle NoSQL Database Cloud Service. Only the endpoint is required and is by default localhost:8080 . Follow these instructions to run an example program against the Cloud Simulator: Download and start the Cloud Simulator. Follow step 3. of Example Quick Start to obtain the SDK source. In Oracle.NoSQL.SDK.Samples directory you will find the file cloudsim.json containging default configuration for the Cloud Simulator. It should look like this: { \"Endpoint\": \"http://localhost:8080\" } Copy/edit this file to modify the endpoint if you are running the Cloud Simulator on a different port or another machine. You may also add other configuration properties described in NoSQLConfig if needed. Note that AuthorizationProvider property should not be set for the Cloud Simulator. Build and run examples as described in steps 4. and 5. of the Example Quick Start . Each example takes the path to the JSON configuration file as an optional command line parameter, which you can provide to the dotnet run command. For example: cd Oracle.NoSQL.SDK.Samples/BasicExample dotnet run -f net5.0 -- ../cloudsim.json As described in section Specifying Service Type , for the configuration above, you do not need to specify ServiceType property which will default to ServiceType.CloudSim ."
  },
  "tutorials/connect-on-prem.html": {
    "href": "tutorials/connect-on-prem.html",
    "title": "Prerequisites | NoSQL SDK for .NET",
    "keywords": "This guide describes how to install, configure, and use the Oracle NoSQL Database Node.js SDK with On-Premise Oracle NoSQL Database. Prerequisites The SDK requires: Oracle NoSQL Database . See Oracle NoSQL Database Downloads to download Oracle NoSQL Database. See Oracle NoSQL Database Documentation to get started with Oracle NoSQL Database. In particular, see the Administrator Guide on how to install, configure and run Oracle NoSQL Database Service. .NET Core 3.1 or later, including .NET 5.0 or later version running on Windows, Linux, or Mac. Nuget Package Manager if you wish to install the SDK independently of your project. Downloading and Installing the SDK You can install the SDK from NuGet Package Manager either by adding it as a reference to your project or independently. Add the SDK as a Project Reference You may add the SDK NuGet Package as a reference to your project by using .Net CLI: cd <your-project-directory> dotnet add package Oracle.NoSQL.SDK Alternatively, you may perform the same using NuGet Package Manager in Visual Studio . Independent Install You may install the SDK independently into a directory of your choice by using nuget.exe CLI : nuget.exe install Oracle.NoSQL.SDK -OutputDirectory <your-packages-directory> Configuring the SDK To use the SDK with the On-Premise Oracle NoSQL Database you need the following components: Running instance of Oracle NoSQL Database. See Prerequisites . Oracle NoSQL Database Proxy. The proxy is the middle tier that lets Oracle NoSQL Database drivers communicate with the database. See Oracle NoSQL Database Proxy for information on how to configure and run the proxy. A Oracle NoSQL Database instance may be configured and run in secure or non-secure mode. Secure mode is recommended. See Oracle NoSQL Database Security Guide on security concepts and configuration. Correspondingly, the proxy can be configured and used with secure kvstore or non-secure kvstore . Your application will connect and use a running NoSQL database via the proxy service. The following sections describe information required in non-secure and secure modes. Configuring the SDK for non-secure kvstore See Using the Proxy in a Non-Secure kvstore on how to configure and start the proxy in a non-secure mode. In non-secure mode, the driver communicates with the proxy via the HTTP protocol. The only information required is the communication endpoint . For on-premise NoSQL Database, the endpoint specifies the url of the proxy, in the form http://proxy_host:proxy_http_port . For example: var endpoint = \"http://localhost:8080\"; You may also omit the protocol portion: var endpoint = \"myhost:8080\"; See NoSQLConfig.Endpoint for more information on the endpoint. Also, see Connecting to a Non-Secure Store on how to connect to non-secure store. Configuring the SDK for a Secure Store See Using the Proxy in a Secure kvstore on how to configure and start the proxy in a secure mode. In secure mode, the driver communicates with the proxy via HTTPS protocol. The following information is required: Communication endpoint which is the https url of the proxy in the form https://proxy_host:proxy_https_port . For example: var endpoint = \"https://localhost:8181\"; Note that unless using port 443, the protocol portion of the url is required. See NoSQLConfig.Endpoint for details. User for the driver which is used by the application to access the kvstore through the proxy. Use the following SQL to create the driver user: sql-> CREATE USER <driver_user> IDENTIFIED BY \"<driver_password>\" sql-> GRANT READWRITE TO USER <driver_user> where, the driver_user is the username and driver_password is the password for the driver_user user. In this example, the user driver_user is granted READWRITE role, which allows the application to perform only read and write operations. See Configuring Authentication on how to create and modify users. See Configuring Authorization on how to assign roles and privileges to users. You can use Oracle NoSQL Database Shell to connect to secure kvstore in order to create the user. For example: java -jar lib/sql.jar -helper-hosts localhost:5000 -store kvstore -security kvroot/security/user.security sql-> CREATE USER John IDENTIFIED BY \"JohnDriver@@123\" sql-> GRANT READWRITE TO USER John (The password shown above is for example purpose only. All user passwords should follow the password security policies. See Password Complexity Policies ) The driver requires user name and password created above to authenticate with a secure store via the proxy. In secure mode the proxy requires SSL Certificate and Private key . If the root certificate authority (CA) for your proxy certificate is not one of the trusted root CAs, e.g. if you are using a self-signed certificate or a custom CA, the driver needs to trust that CA/certificate in order to connect to the proxy. You can provide trusted root certificates to the driver by specifying TrustedRootCertificateFile property. See Specifying Trusted Root Certificates for details. The trusted root certificate file must be in PEM format and may contain one or more trusted root certificates. The certificate(s) in this file may be either custom root CA certificate that issued the proxy certificate or a self-signed proxy certificate used for development. Note that this step is not required if the certificate chain for your proxy certificate has one of well-known CAs at its root (these are CAs that you will find in your operating system trust store). Also, see Connecting to a Secure Store on how to connect to a secure store. Connecting an Application To use the SDK in your code, add Oracle.NoSQL.SDK namespace: using Oracle.NoSQL.SDK; The first step in your Oracle NoSQL Database application is to create an instance of NoSQLClient class which is the main point of access to the service. To create NoSQLClient instance, you need to supply an instance of NoSQLConfig class containing information needed to access the service. Alternatively, you may choose to supply a path (absolute or relative to current directory) to a JSON file that contains the same configuration information as in NoSQLConfig . Specifying Service Type Since Oracle Database NoSQL .NET SDK is used both for Oracle NoSQL Cloud Service and On-Premise Oracle NoSQL Database, NoSQLConfig object may need to specify that we are connecting to on-premise NoSQL Database by setting its ServiceType property to ServiceType.KVStore . You must specify ServiceType to connect to non-secure store. For secure store, because the AuthorizationProvider property will be set to an instance of KVStoreAuthorizationProvider the service type will default to ServiceType.KVStore , thus you do not need to set the service type explicitly. See ServiceType for details. Other required information has been described in section Configuring the SDK and is different for connections to non-secure and secure stores. Connecting to a Non-Secure Store To connect to the proxy in non-secure mode, you need to specify communication endpoint and the service type as ServiceType.KVStore . You can provide an instance of NoSQLConfig either directly or in a JSON configuration file. var client = new NoSQLClient( new NoSQLConfig { ServiceType = ServiceType.KVStore, Endpoint = \"myhost:8080\" }); You may also choose to provide the same configuration in JSON configuration file. Create file config.json with following contents: { \"ServiceType\": \"KVStore\", \"Endpoint\": \"myhost:8080\" } Then you may use this file to create NoSQLClient instance: var client = new NoSQLClient(\"/path/to/config.json\"); As shown above, you specify the service type in a JSON configuration file as a string value of the ServiceType enumeration constant. See ServiceType for more details. Connecting to a Secure Store To connect to the proxy in secure mode, in addition to communication endpoint, you need to specify user name and password of the driver user. This information is passed in the instance of KVStoreAuthorizationProvider and can be specified in one of 3 ways as described below. As described in section Specifying Service Type , we can omit the service type from the configuration for secure store. Passing user name and password directly You may choose to specify user name and password directly: var client = new NoSQLClient( new NoSQLConfig { Endpoint = \"https://myhost:8081\", AuthorizationProvider = new KVStoreAuthorizationProvider( userName, // user name as string password) // password as char[] }); This option is less secure because the password is stored in plain text in memory for the lifetime of NoSQLClient instance. Note that the password is specified as char[] which allows you to erase it after you are finished using NoSQLClient . Storing credentials in a file You may choose to store credentials in a separate file which is protected by file system permissions, thus making it more secure than the previous option, because the credentials will not be stored in memory, but will be accessed from this file only when the login to the store is required. Credentials file should have the following format: { \"UserName\": \"<Driver user name>\", \"Password\": \"<Driver user password>\" } Then you may use this credentials file as following: var client = new NoSQLClient( new NoSQLConfig { Endpoint: 'https://myhost:8081', AuthorizationProvider = new KVStoreAuthorizationProvider( \"path/to/credentials.json\") }); You may also reference credentials.json in the JSON configuration file used to create NoSQLClient instance: config.json { \"Endpoint\": \"https://myhost:8081\", \"AuthorizationProvider\": { \"AuthorizationType\": \"KVStore\", \"CredentialsFile\": \"path/to/credentials.json\" } } var client = new NoSQLClient(\"/path/to/config.json\"); Note that in config.json the authorization provider is represented as a JSON object with the properties for KVStoreAuthorizationProvider and an additional AuthorizationType property indicating the type of the authorization provider, which is KVStore for the secure on-premise store. For more details on the JSON representation, see NoSQLConfig . As an aside, it is also possible to specify credentials directly in the JSON configuration file using Credentials property: config.json { \"Endpoint\": \"https://myhost:8081\", \"AuthorizationProvider\": { \"AuthorizationType\": \"KVStore\", \"Credentials\": { \"UserName\": \"<user_name>\", \"Password\": \"<password>\" } } } Note that the above is not secure and should only be used during testing. Creating Your Own Credentials Provider You may implement your own credentials provider for secure storage and retrieval of driver credentials. This is the most secure option because you are in control of how the credentials are stored and loaded by the driver. The credentials provider is a delegate function that returns Task< KVStoreCredentials > and thus may be implemented asynchronously. (Note that KVStoreCredentials is a class that encapsulates the user name and password). For example: var client = new NoSQLClient( new NoSQLConfig { \"Endpoint\": \"https://myhost:8081\", AuthorizationProvider = new KVStoreAuthorizationProvider( async (CancellationToken) => { // Retrieve the credentials in a preferred manner. await.......... return new KVStoreCredentials(myUserName, myPassword); }) }); Specifying Trusted Root Certificates As described in section Configuring the SDK for a Secure Store , you may need to provide trusted root certificate to the driver if the certificate chain for your proxy certificate is not rooted in one of the well known CAs. The provided certificate may be either your custom CA or self-signed proxy certificate. It may be specified using TrustedRootCertificateFile property, which sets a file path (absolute or relative) to a PEM file containing one or more trusted root certificates (multiple roots are allowed in this file). This property is specified as part of ConnectionOptions in NoSQLConfig : var client = new NoSQLClient( new NoSQLConfig { Endpoint = \"https://myhost:8081\", AuthorizationProvider = new KVStoreAuthorizationProvider(...), ConnectionOptions = new ConnectionOptions { TrustedRootCertificateFile = \"path/to/certificates.pem\" } }); You may also specify the same in JSON configuration file. For example: { \"Endpoint\": \"https://myhost:8081\", \"AuthorizationProvider\": { \"AuthorizationType\": \"KVStore\", \"CredentialsFile\": \"path/to/credentials.json\" }, \"ConnectionOptions\": { \"TrustedRootCertificateFile\": \"path/to/certificates.pem\" } } Alternatively you may use (in code only) TrustedRootCertificates property to explicitly specify X509Certificate2Collection instance containing trusted root certificates: var client = new NoSQLClient( new NoSQLConfig { Endpoint = \"...\", AuthorizationProvider = new KVStoreAuthorizationProvider(...), ConnectionOptions = new ConnectionOptions { TrustedRootCertificates = new X509Certificate2Collection(...) } }); Note that in this case the application is responsible for disposing of each certificate in the collection after you have finished using NoSQLClient instance. Also note that you may use only one of TrustedRootCertificates or TrustedRootCertificateFile properties. Alternatively to specifying trusted root certificates in the initial configuration, you may put your root certificate(s) to the trusted root certificate store on your machine for the operating system user which will run the application. This is less secure option than using TrustedRootCertificateFile because it will make your certificate trusted for other applications running on behalf of your operating system user. Here are some pointers on this procedure, which depends on the operating system: On Windows, use Certificate Manager Tool certmgr.msc which is part of Microsoft Management Console. You can launch certmgr.msc from the command line or the Start menu. For more details, see How to: View certificates with the MMC snap-in . On Linux, place the certificate in the appropriate directory and run command update-ca-certificates or update-ca-trust . The details depend on the distribution. Refer to your Linux distribution documentation and manual pages for the above commands for more details. Note that you may need a root or sudo access. On Mac, use Keychain Access to import trusted root certificate. Example Quick Start The examples in the SDK are configured to make it simple to connect and run against the On-Premise Oracle NoSQL Database. Follow these steps: Perform the steps outlined in section Configuring the SDK to run Oracle NoSQL Database instance and Oracle NoSQL Database Proxy. You can configure for secure or non-secure store. Use git to clone the Oracle NoSQL Database .NET SDK: git clone https://github.com/oracle/nosql-dotnet-sdk Alternatively you may download the zip file or a tarball containing the SDK source from the GitHub Releases page. The examples are located under Oracle.NoSQL.SDK.Samples directory. In this directory you will find the file kvstore_template.json . It is used as a JSON configuration file to create NoSQLClient instance. Make a copy of this file and fill in appropriate values depending on whether you are connecting to secure or non-secure store. Fill in the service endpoint as Endpoint property as described for secure or non-secure store. For a secure store, either supply a path to credentials file in a CredentialsFile property (see Storing credentials in a file ) or supply credentials directly inside Credentials property (only to be used for development). Remove the other unused property. If applicable (see section Specifying Trusted Root Certificates ), you may also specify the trusted root certificate file. Otherwise, remove the entire \"ConnectionOptions\" property. For example: { \"ServiceType\": \"KVStore\", \"Endpoint\": \"https://somehost:443\", \"AuthorizationProvider\": { \"AuthorizationType\": \"KVStore\", \"Credentials\": { \"UserName\": \"<your-driver-user>\", \"Password\": \"<your-driver-password>\" } }, \"ConnectionOptions\": { \"TrustedRootCertificateFile\": \"<trusted-root-certificate.pem>\" } } For a non-secure store, remove the entire \"AuthorizationProvider\" and \"ConnectionOptions\" properties. For example: { \"ServiceType\": \"KVStore\", \"Endpoint\": \"http://localhost:8080\" } Go to the BasicExample : cd Oracle.NoSQL.SDK.Samples/BasicExample Under this directory, you will see the example source code Program.cs and the project BasicExample.csproj . Build and run the project, providing the path to the JSON configuration file you created as a command line argument to the example program: dotnet run -f <your_target_framework> -- /path/to/config.json The project supports multiple target frameworks which currently are .NET Core 3.1 and .NET 5.0, so you must specify the target framework to use. For .NET 5.0, specify net5.0 : dotnet run -f net5.0 -- /path/to/config.json For .NET Core 3.1, specify netcoreapp3.1 : dotnet run -f netcoreapp3.1 -- /path/to/config.json Note that the commands above will automatically download and install Oracle NoSQL Database SDK package as a dependency of the example project. Alternatively, you may build and run the example project in Visual Studio . In Visual Studio, open the Samples solution located at Oracle.NoSQL.SDK.Samples/Oracle.NoSQL.SDK.Samples.sln ."
  },
  "tutorials/intro.html": {
    "href": "tutorials/intro.html",
    "title": "Introduction to the Tutorials for Oracle NoSQL Database .NET SDK | NoSQL SDK for .NET",
    "keywords": "Introduction to the Tutorials for Oracle NoSQL Database .NET SDK Learn how to access Oracle NoSQL Database using Oracle NoSQL .NET SDK. To get started, see the following: Connecting an Application to Oracle NoSQL Database Cloud Service tutorial describes how to install and configure the SDK to use with Oracle NoSQL Database Cloud Service as well as how to connect your application to the service. Connecting an Application to On-Premise Oracle NoSQL Database tutorial describes how to install and configure the SDK to use with On-Premise Oracle NoSQL Database as well as how to connect your application to the database. Working With Tables tutorial describes how to use the SDK to work with NoSQL Database tables in your application."
  },
  "tutorials/tables.html": {
    "href": "tutorials/tables.html",
    "title": "Create a NoSQLClient Instance | NoSQL SDK for .NET",
    "keywords": "Applications using the Oracle NoSQL Database use tables to store and access data. Oracle NoSQL Database .NET SDK supports table and index creation and removal, reading, updating and deleting records, as well as queries. This guide provides an overview of these capabilities. For complete description of the APIs and available options, see the API reference. Create a NoSQLClient Instance To use the SDK in your code, add Oracle.NoSQL.SDK namespace: using Oracle.NoSQL.SDK; Class NoSQLClient represents the main access point to the service. To create an instance of NoSQLClient you need to provide appropriate configuration information. This information is represented by NoSQLConfig class which instance can be provided to the constructor of NoSQLClient . Alternatively, you may choose to store the configuration information in a JSON configuration file and use the constructor of NoSQLClient that takes the path (absolute or relative to current directory) to that file. Required configuration properties are different depending on what Service Type is used by your application. Supported service types are Oracle NoSQL Cloud Service ( ServiceType.Cloud ), Cloud Simulator ( ServiceType.CloudSim ) and On-Premise Oracle NoSQL Database ( ServiceType.KVStore ). All service types require service endpoint or region and some require authentication/authorization information. Other properties are optional and default values will be used if not explicitly provided. See Connecting an Application to Oracle NoSQL Database Cloud Service tutorial on how to configure and connect to the Oracle NoSQL Database Cloud Service as well as the Cloud Simulator. See Connecting an Application to On-Premise Oracle NoSQL Database tutorial on how to configure and connect to the On-Premise Oracle NoSQL Database. The first example below creates instance of NoSQLClient for the Cloud Service using NoSQLConfig . It also adds a default compartment and overrides some default timeout values in NoSQLConfig : var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, Timeout = TimeSpan.FromSeconds(10), TableDDLTimeout = TimeSpan.FromSeconds(20), Compartment = \"mycompartment\", AuthorizationProvider = new IAMAuthorizationProvider( \"~/myapp/.oci/config\", \"Jane\") }); The second example stores the same configuration in a JSON file config.json and uses it to create NoSQLClient instance: config.json : { \"Region\": \"us-ashburn-1\", \"Timeout\": 20000, \"TableDDLTimeout\": 40000, \"compartment\": \"mycompartment\", \"AuthorizationProvider\": { \"AuthorizationType\": \"IAM\", \"ConfigFile\": \"~/myapp/.oci/config\", \"ProfileName\": \"Jane\" } } Application code: var client = new NoSQLClient(\"config.json\"); Note that it may not be possible to store the configuration in a file if it has property values that cannot be represented as JSON types. These cases include custom retry handler, custom authoirzation provider, custom credentials provider, etc. (see NoSQLConfig for details). In this case, use NoSQLConfig instance as in the first example above. Using a NoSQLClient Instance Most of the methods of NoSQLClient are asynchronous and return a Task instance representing a result of a particular operation. There are different classes for differnet operation results, such as GetResult , PutResult , TableResult , etc. Instances of NoSQLClient are thread-safe and async-safe and they are expected to be shared among threads. NoSQLClient has memory and network resources associated with it. It implements IDisposable interface and must be disposed when the application is done using it via calling Dispose method or via using statement. Failure to dispose of the instance may cause an application to hang on exit. In most cases, you only need once NoSQLClient instance for the lifetime of your application. The creation of multiple instances or repeatedly creating and disposing of the instance incurs additional resource overheads without providing any performance benefit. Note that the result objects returned by the methods of NoSQLClient are not thread-safe and should only be used by one thread at a time unless synchronized externally. Most of the methods of NoSQLClient take options as an optional argument that allows you to customize the behavior of each operation. Options for different operations are represented by different classes, such as GetOptions , PutOptions , TableDDLOptions , etc. Their properties may override the settings in NoSQLConfig object used to create NoSQLClient instance. Most of the methods of NoSQLClient also take CancellationToken as an optional last argument, which allows you to cancel an operation. However, note that this is only a driver-side cancellation and provides no guarantees as to whether the operation was performed by the service. Create Tables and Indexes Learn how to create tables and indexes in the Oracle NoSQL Database. Creating a table is the first step of developing your application. To create tables and execute other Data Definition Language (DDL) statements, such as creating, modifying and dropping tables as well as creating and dropping indexes, use methods ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync . Before creating a table, learn about: Table design for the Oracle NoSQL Database. See Table Design . Cloud limits. See Oracle NoSQL Database Cloud Limits . Examples of DDL statements are: /* Create a new table called users */ CREATE IF NOT EXISTS users (id INTEGER, name STRING, PRIMARY KEY (id)); /* Create a new table called users and with TTL value to of days */ CREATE IF NOT EXISTS users (id INTEGER, name STRING, PRIMARY KEY (id)) USING TTL 4 days; /* Create a new index called nameIdx on the name field in the users table */ CREATE INDEX IF NOT EXISTS nameIdx ON users(name); Methods ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync return Task< TableResult > . TableResult instance contains status of DDL operation such as TableState , table schema and TableLimits . Each of these methods comes with several overloads. In particular, you may pass options for the DDL operation as TableDDLOptions . When creating a table, you must specify its TableLimits . Table limits specify maximum throughput and storage capacity for the table as the amount of read units, write units and Gigabytes of storage. You may use an overload that takes tableLimits parameter or pass table limits as TableLimits property of TableDDLOptions . Note that these are potentially long running operations. The method ExecuteTableDDLAsync only launches the specified DDL operation by the service and does not wait for its completion. The resulting TableResult will most likely have one of intermediate table states such as TableState.Creating , TableState.Dropping or TableState.Updating (the latter happens when table is in the process of being altered by ALTER TABLE statement, table limits are being changed or one of the table indexes is being created or dropped). When the underlying operation completes, the table state should change to TableState.Active or TableState.Dropped (if the DDL operation was DROP TABLE ). You may asynchronously wait for table DDL operation completion by calling WaitForCompletionAsync on the returned TableResult instance. You may also get current table status by calling one of overloads of GetTableAsync method and passing a table name or TableResult instance from the DDL operation (the latter will also provide information on any errors occured during the DDL operation). If you are only need to know the DDL operation completion and not any of its intermediate states, use ExecuteTableDDLWithCompletionAsync methods. These methods return only when the DDL operation is fully completed by the service or throw an exception if the execution of the DDL operation failed. The resulting TableResult instance will have table state TableState.Active or TableState.Dropped (if the DDL operation was DROP TABLE ). var client = new NoSQLClient(\"config.json\"); ............................................ try { var statement = \"CREATE TABLE IF NOT EXISTS users(id INTEGER, \" + \"name STRING, PRIMARY KEY(id))\"; var result = await client.ExecuteTableDDLAsync(statement, new TableLimits(20, 10, 5)); await result.WaitForCompletionAsync(); Console.WriteLine(\"Table users created.\"); } catch(Exception ex) { // handle exceptions } Note that WaitForCompletionAsync will change the calling TableResult instance to reflect the operation completion. Alternatively you may use ExecuteTableDDLWithCompletionAsync . Substitute the statements in the try-catch block with the following: var statement = \"CREATE TABLE IF NOT EXISTS users(id INTEGER, \" + \"name STRING, PRIMARY KEY(id))\"; await client.ExecuteTableDDLWithCompletionAsync(statement, new TableLimits(20, 10, 5)); Console.WriteLine(\"Table users created.\"); (Note that above we ignored the returned result from ExecuteTableDDLWithCompletionAsync ). You need not specify TableLimits for any DDL operation other than CREATE TABLE . You may also change table limits of an existing table by calling SetTableLimitsAsync or SetTableLimitsWithCompletionAsync methods. They have the same operation completion semantics as ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync . Data Representation To represent data from Oracle NoSQL database tables, the driver uses FieldValue class which serves as a base class for a collection of classes representing instances of all supported data types. Instances of FieldValue are used to represent values of fields in table rows or query results as well as the rows themselves. See FieldValue for detailed description of these classes and how they are mapped to data types of Oracle NoSQL Database. Here we will note some important features: There are subclasses representing atomic data types such as IntegerValue , StringValue , TimestampValue , NullValue , etc. as well as complex types such as ArrayValue , MapValue and RecordValue . Both MapValue and RecordValue represent dictionaries of keys and values (with string keys and values of type FieldValue ). The keys of MapValue are unordered but the keys of RecordValue preserve their original insertion order (and thus iteration order over keys). Thus table rows may be represented by either MapValue or RecordValue depending on whether the field order needs to be preserved. Note that every RecordValue instance is also a MapValue . The field order is not important for values provided to the driver, such as for row values provided to Put operations or primary key values provided to Get operations, because the order of the table fields is already known on the back end. Thus these operations take these values as MapValue instances. On the other hand, values returned by the driver, such as rows returned by Get or Query operations have well-defined order of fields and thus are returned as RecordValue instances. Each field value supports conversion to and from JSON. You may create an instance of field value from a JSON string via FieldValue.FromJsonString or convert an instance of field value to JSON string via FieldValue.ToJsonString . Note that FieldValue.ToString also returns JSON string and it is implicitly used by Console.WriteLine statements in the examples below. See examples below on how to create and use FieldValue instances. Note that the classes representing operation results that may contain a row value such as PutResult , GetResult , QueryResult are designed to support any type of row value (to be used when the SDK is extended to support class mapping) and thus are generic. Currently the only type parameter in use is RecordValue . For example, the result of Get operation is GetResult < RecordValue >. See result descriptions in the sections below. Add Data Add rows to your table. When you store data in table rows, your application can easily retrieve, add to or delete information from the table. Method PutAsync and related methods PutIfAbsentAsync , PutIfPresentAsync and PutIfVersionAsync are used to insert a single row into the table or update a single row. These methods can be used for unconditional and conditional puts: Use PutAsync (without conditional options) to insert a new row or overwrite existing row with the same primary key if present. This is unconditional put. Use PutIfAbsentAsync to insert a new row only if the row with the same primary key does not exist. Use PutIfPresentAsync to overwrite existing row only if the row with the same primary key exists. Use PutIfVersionAsync to overwrite existing row only if the row with the same primary key exists and its RowVersion matches a specific version. These methods take the value of the row as MapValue , thus you can pass either MapValue or RecordValue . The field names should be the same as the table column names (where a field is omitted, it is equivalient to inserting SQL NULL in its place). You may also pass options to each of these methods as PutOptions . One important option is PutOptions.TTL which represents time to live and allows you to put an expiration on the table row. For more details, see TimeToLive . Among other options, PutOptions class provides properties IfAbsent , IfPresent and MatchVersion that can be used with PutAsync for conditional put operations, instead of using one of the PutIf... methods outlined above. You may choose whichever approach is most convenient. See PutOptions for details. Each of the Put methods above returns Task< PutResult < RecordValue >> . PutResult instance contains info about a completed Put operation, such as success status (conditional put operations may fail if the corresponding condition was not met) and the resulting RowVersion . To add rows to your table: var client = new NoSQLClient(\"config.json\"); ............................................ var tableName = \"users\"; try { // Uncondintional put, should succeed. var result = await client.PutAsync(tableName, new MapValue { [\"id\"] = 1, [\"name\"] = \"John\" }); // This Put will fail because the row with the same primary // key already exists. result = await client.PutIfAbsentAsync(tableName, new MapValue { [\"id\"] = 1, [\"name\"] = \"Jane\" }); // Expected output: PutIfAbsentAsync failed. Console.WriteLine(\"PutIfAbsentAsync {0}.\", result.Success ? \"succeeded\" : \"failed\"); // This Put will succeed because the row with the same primary // key exists. result = await client.PutIfPresentAsync(tableName, new MapValue { [\"id\"] = 1, [\"name\"] = \"Jane\" }); // Expected output: PutIfPresentAsync succeeded. Console.WriteLine(\"PutIfPresentAsync {0}.\", result.Success ? \"succeeded\" : \"failed\"); var rowVersion = result.Version; // This Put will succeed because the version matches existing // row. result = await client.PutIfVersionAsync( tableName, new MapValue { [\"id\"] = 1, [\"name\"] = \"Kim\" }), rowVersion); // Expected output: PutIfVersionAsync succeeded. Console.WriteLine(\"PutIfVersionAsync {0}.\", result.Success ? \"succeeded\" : \"failed\"); // This Put will fail because the previous Put has changed // the row version, so the old version no longer matches. result = await client.PutIfVersionAsync( tableName, new MapValue { [\"id\"] = 1, [\"name\"] = \"June\" }), rowVersion); // Expected output: PutIfVersionAsync failed. Console.WriteLine(\"PutIfVersionAsync {0}.\", result.Success ? \"succeeded\" : \"failed\"); // Put a new row with TTL indicating expiration in 30 days. result = await client.PutAsync(tableName, new MapValue { [\"id\"] = 2, [\"name\"] = \"Jack\" }), new PutOptions { TTL = TimeToLive.OfDays(30) }); } catch(Exception ex) { // handle exceptions } Note that Success property of the result only indicates successful completion as related to conditional Put operations (i.e. whether the condition was satisfied and thus the operation completed) and is always true for unconditional Puts. If the Put operation fails for any other reason, an exception will be thrown. See Handle Exceptions . You can perform a sequence of put operations on a table that share the same shard key using PutManyAsync method. This sequence will be executed within the scope of single transaction, thus making this operation atomic. You can also call WriteManyAsync to perform a sequence that includes both Put and Delete operations. Using fields of data type JSON allows more flexibility in the use of data as the data in JSON field does not have a predefined schema. To put value into a JSON field, supply a MapValue instance as its field value as part of the row value. You may also create its value from a JSON string via FieldValue.FromJsonString . Read Data Learn how to read data from your table. You can read a single row using the GetAsync method. This method allows you to retrieve a row based on its primary key value. In order to read multiple rows in a single operation, see Use Queries . This method takes the primary key value as MapValue . The field names should be the same as the table primary key column names. You may also pass options as GetOptions . You can set consistency of a read operation using Consistency enumeration. By default all read operations are eventually consistent (see Consistency.Eventual . This type of read is less costly than those using absolute consistency (see Consistency.Absolute . The default consistency for read operations may be set as Consistency property of NoSQLConfig . You may also change the consistency for a single Get operation by using Consistency property of GetOptions . GetAsync method returns Task< GetResult < RecordValue >> . GetResult instance contains the returned Row , the row Version and other information. If the row with the provided primary key does not exist in the table, the values of both Row and Version properties will be null . var client = new NoSQLClient(\"config.json\"); .................................................. var tableName = \"users\"; try { var result = await client.GetAsync(tableName, new MapValue { [\"id\"] = 1 }); // Continuing from the Put example, the expected output will be: // { \"id\": 1, \"name\": \"Kim\" } Console.WriteLine(\"Got row: {0}\", result.row); // Use absolute consistency. result = await client.GetAsync(tableName, new MapValue { [\"id\"] = 2 }), new GetOptions { Consistency = Consistency.Absolute }); // The expected output will be: // { \"id\": 2, \"name\": \"Jack\" } Console.WriteLine(\"Got row with absolute consistency: {0}\", result.row); // Continuing from the Put example, the expiration time should be // 30 days from now. Console.WriteLine(\"Expiration time: {0}\", result.ExpirationTime) } catch(Exception ex) { // handle exceptions } Use Queries Learn about using queries in your application. The Oracle NoSQL Database provides a rich query language to read and update data. See SQL For NoSQL Specification for a full description of the query language. To execute a query, you may call QueryAsync method or call GetQueryAsyncEnumerable method and iterate over the resulting async enumerable. You may pass options to each of these methods as QueryOptions . QueryAsync method (as well as each iteration step over GetQueryAsyncEnumerable return Task< QueryResult < RecordValue >> . QueryResult contains query results as a list of RecordValue instances, as well as other information. When your query specifies a complete primary key (or you are executing an INSERT statement, see below), it is sufficient to call QueryAsync once: var client = new NoSQLClient(\"config.json\"); .................................................. try { var result = await client.QueryAsync( \"SELECT * FROM users WHERE id = 1\"); // Because we select by primary key, there can be at most one record. if (result.Rows.Count > 0) { Console.WriteLine(\"Got record: {0}.\", result.Rows[0]); } else { Console.WriteLine(\"Got no records.\"); } } catch(Exception ex) { // handle exceptions } For other queries, this is not the case. The amount of data returned by the query is limited by the system. It could also be further limited by setting MaxReadKB property of QueryOptions . This means that one invocation of QueryAsync may not return all available results. This situation is dealt with by using continuation key. Non-null ContinuationKey in QueryResult means that more more query results may be available. This means that queries should run in a loop, looping until the continuation key becomes null . Note that it is possible for query to return now rows ( QueryResult.Rows is empty) yet have not-null continuation key, which means that the query should continue looping. See QueryAsync for more details. To continue the query, set ContinuationKey in the QueryOptions for the next call to QueryAsync and loop until the continuation key becomes null : The following example executes the query and prints query results: var client = new NoSQLClient(\"config.json\"); .................................................. var options = new QueryOptions(); try { do { var result = await client.QueryAsync( \"SELECT id, name FROM users ORDER BY name\", options); foreach(var row of result.Rows) { Console.WriteLine(row); } options.ContinuationKey = result.ContinuationKey; } while(options.ContinuationKey != null); } catch(Exception ex) { // handle exceptions } Another way to execute the query in a loop is to use GetQueryAsyncEnumerable . It returns an instance of IAsyncEnumerable < QueryResult > that can be iterated over. Each iteration step returns a portion of the query results as QueryResult . For more information on async enumerables, see Iterating With Async Enumerables in C# 8 . The following example executes the same query as in previous example: var client = new NoSQLClient(\"config.json\"); .................................................. try { await foreach(var result in client.GetQueryAsyncEnumerable( \"SELECT id, name FROM users ORDER BY name\")) { foreach(var row of result.Rows) { Console.WriteLine(row); } } } catch(Exception ex) { // handle exceptions } Note that in addition to SELECT queries, Oracle NoSQL Database query language allows you to insert, update and delete records by executing INSERT , UPDATE and DELETE statements. For example, to insert a record: var client = new NoSQLClient(\"config.json\"); .................................................. try { var result = await client.QueryAsync( \"INSERT INTO items VALUES(3, 'Ravi')\"); // Because the insert specifies complete primary key, // we don't need to loop. if (result.Rows.Count > 0) { // Expected result: { \"NumRowsInserted\": 1 } Console.WriteLine(result.Rows[0]); } else { throw new InvalidOperationException( \"Insert query returned no results\"); } } catch(Exception ex) { // handle exceptions } As with SELECT queries, updates and deletes that don't specify a complete primary key must be executed in a loop. For example: var client = new NoSQLClient(\"config.json\"); .................................................. try { await foreach(var result in client.GetQueryAsyncEnumerable( \"DELETE FROM MyLargeTable\")) { foreach(var row of result.Rows) { Console.WriteLine(row); } } } catch(Exception ex) { // handle exceptions } The above example will print a result like { \"NumRowsDeleted\": 100000 } , indicating the number of deleted rows. It is possible that the above query may loop several times before returning the result record, especially for large tables. As with the amount of data read by the query, the amount of data written is also limited by the system and can be further limited by setting MaxWriteKB of QueryOptions . In addition, the read limit may also apply to UPDATE and DELETE queries because of the amount of data that need to be read before finding the records that match the query predicate. Oracle NoSQL Database provides the ability to prepare queries for execution and reuse. It is recommended that you use prepared queries when you run the same query for multiple times. When you use prepared queries, the execution is much more efficient than starting with a SQL statement every time. The query language and API support query variables to assist with query reuse. Use PrepareAsync to prepare the query. This method returns Task< PreparedStatement . PreparedStatement allows you to set query variables. The query methods QueryAsync and GetQueryAsyncEnumerable have overloads that execute prepared queries by taking PreparedStatement as a parameter instead of the SQL statement. For example: var client = new NoSQLClient(\"config.json\"); .................................................. try { var sql = \"DECLARE $name STRING; SELECT * FROM users WHERE \" + \"name = $name\"; var preparedStatement = await client.PrepareAsync(sql); // Set value for $name variable and execute the query preparedStatement.SetVariable(\"$name\", \"Taylor\"); await foreach(var result in client.GetQueryAsyncEnumerable( preparedStatement)) { foreach(var row of result.Rows) { Console.WriteLine(row); } } // Set different value for $name and re-execute the query. preparedStatement.SetVariable(\"$name\", \"Jane\"); await foreach(var result in client.GetQueryAsyncEnumerable( preparedStatement)) { foreach(var row of result.Rows) { Console.WriteLine(row); } } } catch(Exception ex) { // handle exceptions } Delete Data Learn how to delete rows from your table. To delete a row, use DeleteAsync method. Pass to it the table name and primary key of the row to delete. This method takes the primary key value as MapValue . The field names should be the same as the table primary key column names. You may also pass options as DeleteOptions . In addition, you can make delete operation conditional by specifying on a RowVersion of the row that was previously returned by GetAsync or PutAsync . Use DeleteIfVersionAsync method that takes the row version to match. Alternatively, you may use DeleteAsync method and pass the version as MatchVersion property of DeleteOptions . DeleteAsync and DeleteIfVersionAsync methods return Task< DeleteResult < RecordValue >> . DeleteResult instance contains success status of the Delete operation. Delete operation may fail if the row with given primary key does not exist or this is a conditional Delete and provided row version did not match the existing row version. In addition, for conditional Delete operation, the result may also contain ExistingRow and ExistingVersion if the operation failed due to the version mismatch and ReturnExisting property was set to true in DeleteOptions . var client = new NoSQLClient(\"config.json\"); .................................................. var tableName = \"users\"; try { var row = new MapValue { [\"id\"] = 1, [\"name\"] = \"John\" }; var putResult = await client.PutAsync(tableName, row); Console.WriteLine(\"Put {0}.\", putResult.Success ? \"succeeded\" : \"failed\"); var primaryKey = new MapValue { [\"id\"] = 1 }; // Unconditional delete, should succeed. var deleteResult = await client.DeleteAsync(tableName, primaryKey); // Expected output: Delete succeeded. Console.WriteLine(\"Delete {0}.\", deleteResult.Success ? \"succeeded\" : \"failed\"); // Delete with non-existent primary key, should fail. var deleteResult = await client.DeleteAsync(tableName, new MapValue { [\"id\"] = 200 }); // Expected output: Delete failed. Console.WriteLine(\"Delete {0}.\", deleteResult.Success ? \"succeeded\" : \"failed\"); // Re-insert the row and get the new row version. putResult = await client.PutAsync(tableName, row); var version = putResult.Version; // Delete should succeed because the version matches existing // row. deleteResult = await client.DeleteIfVersionAsync(tableName, primaryKey, version); // Expected output: DeleteIfVersion succeeded. Console.WriteLine(\"DeleteIfVersion {0}.\", deleteResult.Success ? \"succeeded\" : \"failed\"); // Re-insert the row putResult = await client.PutAsync(tableName, row); // This delete should fail because the last put operation has // changed the row version, so the old version no longer matches. // The result will also contain existing row and its version because // we specified ReturnExisting in DeleteOptions. deleteResult = await client.DeleteIfVersionAsync(tableName, primaryKey, version); // Expected output: DeleteIfVersion failed. Console.WriteLine(\"DeleteIfVersion {0}.\", deleteResult.Success ? \"succeeded\" : \"failed\"); // Expected output: { \"id\": 1, \"name\": \"John\" } Console.WriteLine(result.existingRow); } catch(Exception ex) { // handle exceptions } Note that Success property of the result only indicates whether the row to delete was found and for conditional Delete , whether the provided version was matched. If the Delete operation fails for any other reason, an exception will be thrown. See Handle Exceptions . You can delete multiple rows having the same shard key in a single atomic operation using DeleteRangeAsync method. This method deletes set of rows based on partial primary key (which must include a shard key) and optional FieldRange which specifies a range of values of one of the other (not included into the partial key) primary key fields. Similar to queries, the amount of data that can be deleted by this operation in one call is limited by the system and you may loop over multiple calls to DeleteRangeAsync using ContinuationKey . Alternatively, you may use GetDeleteRangeAsyncEnumerable and loop over the result. Note that in either of this cases, when DeleteRange operation is split over multiple calls, the operation is no longer atomic. See DeleteRangeAsync and GetDeleteRangeAsyncEnumerable for more information. Modify Tables Learn how to modify tables. You modify a table to: Add new fields to an existing table Delete currently existing fields from a table To change the default time-to-live (TTL) value Modify table limits Other than modifying table limits, use ExecuteTableDDLAsync or ExecuteTableDDLWithCompletionAsync to modify a table by issuing a DDL statement against this table. Examples of DDL statements to modify a table are: /* Add a new field to the table */ ALTER TABLE users (ADD age INTEGER); /* Drop an existing field from the table */ ALTER TABLE users (DROP age); /* Modify the default TTL value*/ ALTER TABLE users USING TTL 4 days; Table limits can be modified using SetTableLimitsAsync or SetTableLimitsWithCompletionAsync methods. They take table name and new TableLimits as parameters and return Task< TableResult > . Note that as with ExecuteTableDDLAsync , SetTableLimitsAsync only launches the operation by the service and does not wait for its completion. Similarly, you may use TableResult.WaitForCompletionAsync to asynchronously wait for the operation completion. Alternatively, you may call SetTableLimitsWithCompletionAsync that will return result only when the operation is completed by the service: var client = new NoSQLClient(\"config.json\"); ............................................ var tableName = \"users\"; try { var result = await client.SetTableLimitsWithCompletionAsync( tableName, new TableLimits(40, 10, 5)); // Expected output: Table state is Active. Console.WriteLine(\"Table state is {0}.\", result.TableState); Console.WriteLine(\"Table limits have been changed\"); } catch(Exception ex) { // handle exceptions } Drop Tables and Indexes Learn how to drop a table or index that you have created in the Oracle NoSQL Database. To drop a table or index, use the DROP TABLE or DROP INDEX DDL statement, for example: /* Drop the table named users (implicitly drops any indexes on that table) */ DROP TABLE users; /* * Drop the index called nameIndex on the table users. Don't fail if the * index doesn't exist */ DROP INDEX IF EXISTS nameIndex ON users; To execute these statements, use ExecuteTableDDLAsync and ExecuteTableDDLWithCompletionAsync . See Create Tables and Indexes for more information. var client = new NoSQLClient(\"config.json\"); ............................................ try { // Drop index \"nameIndex\" on table \"users\". var result = await client.ExecuteTableDDLAsync( \"DROP INDEX nameIndex ON users\"); // The following may print: Table state is Updating. Console.WriteLine(\"Table state is {0}\", result.TableState); await result.WaitForCompletionAsync(); // Expected output: Table state is Active. Console.WriteLine(\"Table state is {0}.\", result.TableState); // Drop table \"TestTable\". result = await client.ExecuteTableDDLWithCompletionAsync( \"DROP TABLE TestTable\"); // Expected output: Table state is Dropped. Console.WriteLine(\"Table state is {0}.\", result.TableState); } catch(Exception ex) { // handle exceptions } Handle Exceptions Learn how to handle exceptions. Your application may need to handle exceptions thrown by the driver. In most cases, exceptions may be thrown when calling methods of NoSQLClient . It is also possible for exceptions to be thrown when creating NoSQLClient instance, when using methods such as TableResult.WaitForCompletionAsync or when using methods and conversion operations of the FieldValue class hierarchy. NoSQLException serves as a base class for many exceptions thrown by the driver. However, in certain cases the driver uses standard exception types such as: ArgumentException and its subclasses such as ArgumentNullException . They are thrown when an invalid argument is passed to a method or when an invalid configuration (in code or in JSON) is passed to create NoSQLClient instance. TimeoutException is thrown when an operation issued by NoSQLClient has timed out. If you are getting many timeout exceptions, you may try to increase the timeout values in NoSQLConfig or in options argument passed to the NoSQLClient method. InvalidOperationException is thrown when the service is an invalid state to perform an operation. It may also be thrown if the query has failed be cause its processing exceeded the memory limit specifed in QueryOptions.MaxMemoryMB or NoSQLConfig.MaxMemoryMB . In this case, you may increase the corresponding memory limit. Otherwise, you may retry the operation. If it still fails, contact Oracle Support for assistance. InvalidCastException and OverflowException may occur when working with sublcasses of FieldValue and trying to cast a value to a type it doesn't support or cast a numeric value to a smaller type causing arithmetic overflow. Check the validity of the conversion in question. See FieldValue for details. OperationCanceledException and TaskCanceledException if you issued a cancellation of the operation started by a method of NoSQLClient using the provided CancellationToken . Other exceptions thrown by the driver are subclasses of NoSQLException . See API documentation for more details. Note: for exceptions indicating that the operation has timed out or was canceled, such as TimeoutException , OperationCanceledException or TaskCanceledException , the driver cannot provide any guarantee whether the operation has or has not been executed by the service. E.g. when using Put operation to insert a new row into a table, it is possible that TimeoutException has been thrown because the service response could not reach the driver due to a network issue, even though the row has been already inserted into the table. In addition, exceptions may be split into two broad categories: Exceptions that may be retried with the expectation that the operation may succeed on retry. In general these are subclasses of RetryableException . These include throttling exceptions as well as other exceptions where a resource is temporarily anavailable. Some other subclasses of NoSQLException may also be retryable depending on the conditions under which the exception occurred. See API documentation for details. In addition, network-related errors are retryable because most network conditions are temporary. Exceptions that should not be retried because they will still fail after retry. They include exceptions such as TableNotFoundException , TableExistsException and others as well as standard exceptions discussed above such as ArgumentException . You can determine if a given instance of NoSQLException is retryable by checking its IsRetryable property. Retry Handler By default, the driver will automatically retry operations that threw a retryable exception (see above). The driver uses retry handler to control operation retries. The retry hanlder determines: Whether and how many times the operation will be retried. How long to wait before each retry. All retry handlers implement IRetryHandler interface. This interface provides two methods, one to determine if the operation in its current state should be retried and another to determine a retry delay befor the next retry. You have a choice to use default retry handler or set your own retry handler as RetryHandler property of NoSQLConfig when creating NoSQLClient instance. Note: retries are only performed within the timeout period alloted to the operation and configured as one of timeout properties in NoSQLConfig or in options passed to the NoSQLClient method. If the operation or its retries have not succeded before the timeout is reached, TimeoutException is thrown. By default, the driver uses NoSQLRetryHandler class which controls retires based on operation type, exception type and whether the number of retries performed has reached a preconfigured maximum. It also uses exponential backoff delay to wait between retries starting with a preconfigured base delay. You may customize the properties such as maximum number of retries, base delay and others by creating your own instance of NoSQLRetryHandler and setting it as a RetryHandler property in NoSQLConfig . For example: var client = new NoSQLClient( new NoSQLConfig { Region = ....., ............... RetryHandler = new NoSQLRetryHandler { MaxRetryAttempts = 20, BaseDelay = TimeSpan.FromSeconds(2) } }); You may also specify the same in the JSON configuration file used to create NoSQLClient instance: { \"Region\": ....., ................ \"RetryHandler\": { \"MaxRetryAttempts\": 20, \"BaseDelay\": 2000 } } If you don't specify the retry handler, the driver will use an instance of NoSQLRetryHandler with default values for all parameters. Alternatively, you may choose to create your own retry handler class by implementing IRetryHandler interface. The last option is to disable retries alltogether. You may do this if you plan to retry the operations within your application instead. To disable retries, set RetryHandler property of NoSQLConfig to NoRetries : var client = new NoSQLClient( new NoSQLConfig { Region = ....., ............... RetryHandler = NoSQLConfig.NoRetries }); See IRetryHandler and NoSQLRetryHandler for details. Handle Resource Limits This section is relevant only for the Oracle NoSQL Database Cloud Service (including Cloud Simulator) and not for the on-premise NoSQL Database. Programming in a resource-limited environment can be challenging. Tables have user-specified throughput limits and if an application exceeds those limits it may be throttled, which means an operation may fail with one of the throttling exceptions such as ReadThrottlingException or WriteThrottlingException . This is most common when using queries, which can read a lot of data, using up capacity very quickly. It can also happen for get and put operations that run in a tight loop. Even though throttling errors will be retried and using custom RetryHandler may allow more direct control over retries, an application should not rely on retries to handle throttling as this will result in poor performance and inability to use all of the throughput available for the table. The better approach would be to avoid throttling entirely by rate-limiting your application. In this context rate-limiting means keeping operation rates under the limits for the table. The SDK provides support for rate limiting. To use rate limiting, you must set the property NoSQLConfig.RateLimitingEnabled of the initial configuration used to create NoSQLClient instance, e.g.: var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, AuthorizationProvider = new IAMAuthorizationProvider( \"~/myapp/.oci/config\", \"Jane\"), RateLimitingEnabled = true }); Internally, a pair of rate limiters is created for each table, one for read operations and another for write operations. All rate limiters implement IRateLimiter interface. By default, the SDK uses rate-limiting algorithm implemented by NoSQLRateLimiter class. You may choose instead to implement custom rate-limiting logic by creating your own implementation of IRateLimiter interface and providing a factory delegate to create your own rate limiters by setting NoSQLConfig.RateLimiterCreator property of the initial configuration. Note that by default rate limiting in the SDK assumes that read and write operations are issued from only one NoSQLClient instance. This might not work as expected when using multiple clients against the same table. You may improve this by allocating only a percentage of each table's limits to a given NoSQLClient instance by setting NoSQLConfig.RateLimiterPercent property of the initial configuration. Here is an example of a more custom configuration: var client = new NoSQLClient( new NoSQLConfig { Region = Region.US_ASHBURN_1, AuthorizationProvider = new IAMAuthorizationProvider( \"~/myapp/.oci/config\", \"Jane\"), RateLimitingEnabled = true, RateLimiterPercent = 20, RateLimiterCreator = () => new MyRateLimiter() }); For more information, see API documentation for IRateLimiter , NoSQLRateLimiter and NoSQLConfig . Note that you may further reduce the amount of data read and/or written (for update queries) in a single iteration step call by setting MaxReadKB and MaxWriteKB options. You can also limit the amount of data deleted by DeleteRange operation by setting MaxWriteKB option. Administrative Operations (On-Premise only) If you are using Node.js SDK with On-Premise Oracle NoSQL Database, you may perform administrative operations on the store using ExecuteAdminAsync and ExecuteAdminWithCompletionAsync methods. These are operations that don't affect a specific table. Examples of such statements include: CREATE NAMESPACE mynamespace CREATE USER some_user IDENTIFIED BY password CREATE ROLE some_role GRANT ROLE some_role TO USER some_user Note that management of users and roles as in the last 3 examples above is available only when using secure kvstore . These methods optional options object as AdminOptions and return Task< AdminResult > . AdminResult instance contains the status of the operation (as to whether it is completed or still in progress) as State as well as the operaion's Output if any. Similar to ExecuteTableDDLAsync , some of these operations can be long running and the returned result does not imply the operation completion. You may call AdminResult.WaitForCompletionAsync to asynchronously wait for the operation completion. Alternatively, use ExecuteAdminWithCompletionAsync method that will only procude result once the operation is completed by the service. You may also check the status of the currently running operation by calling GetAdminStatusAsync For example, to create a namespace: var client = new NoSQLClient(\"config.json\"); ............................................ try { var statement = \"CREATE NAMESPACE TestNamespace1\"; var result = await client.ExecuteAdminAsync(statement); await result.WaitForCompletionAsync(); Console.WriteLine(\"Namespace created.\"); } catch(Exception ex) { // handle exceptions } Some other operations are immediate and are completed when ExecuteAdminAsync produces the result. These are readonly operations that don't modify system state but only return back information, such as SHOW commands (see Shell Utility Commands ). Because some statements, such as CREATE USER , may include passwords, both ExecuteAdminAsync and ExecuteAdminWithCompletionAsync have overloads that take statement parameter as char[] instead of string so that you can erase it afterwards and avoid keeping sensitive information in memory. For example: var client = new NoSQLClient(\"config.json\"); ............................................ var userName = \"John\"; var beginStatement = $\"CREATE USER {userName} IDENTIFIED BY \".ToCharArray(); char[] password = null; char[] statement = null; try { // Here we assume that RetrievePasswordAsCharArray() may throw Exception. password = RetrievePasswordAsCharArray(); statement = new char[beginStatement.Length + password.Length]; beginStatement.CopyTo(statement, 0); password.CopyTo(statement, beginStatement.Length); var result = await client.ExecuteAdminWithCompletion(statement); // Expected output: Status is Complete. Console.WriteLine(\"Status is {0}.\", result.State); Console.WriteLine(\"User created.\"); } catch(Exception ex) { // handle exceptions } finally { if (password != null) { Array.Clear(password); Debug.Assert(statement != null); Array.Clear(statement); } } In addition, there are methods such as ListNamespacesAsync , ListUsersAsync and ListRolesAsync that return namespaces, users and roles, respectively, present in the store. These methods retrive this information by executing SHOW commands (such as SHOW AS JSON NAMESPACES ) and parsing the JSON output of the command which is returned as Output property of AdminResult ."
  }
}